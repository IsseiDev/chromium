// Generated by //build/android/generate_gradle.py

apply plugin: "com.android.library"

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    publishNonDefault true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            manifest.srcFile "../../../../build/android/AndroidManifest.xml"
            java.srcDirs = [
                "../../../../third_party/cacheinvalidation/src/java",
                "extracted-srcjars",
            ]
            resources.srcDirs = []
            aidl.srcDirs = []
            renderscript.srcDirs = []
            res.srcDirs = []
            assets.srcDirs = []
        }
    }
}

dependencies {
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_gcm_java.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/google_play_services_default_java.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_annotations_java.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_v4_java__jar_1.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_v4_java__jar_2.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_v7_mediarouter_java__jar_1.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_v4_java__jar_1.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_v4_java__jar_2.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_v7_appcompat_java_internal__jar_1.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_vector_drawable_java__jar_1.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_v7_mediarouter_java__jar_2.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_v4_java__jar_1.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_v4_java__jar_2.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_v7_appcompat_java_internal__jar_1.jar")
    compile files("../../../../out/Default/lib.java/third_party/android_tools/android_support_vector_drawable_java__jar_1.jar")
    debugCompile project(path: ":third_party\$cacheinvalidation\$cacheinvalidation_proto_java", configuration: "debug")
    releaseCompile project(path: ":third_party\$cacheinvalidation\$cacheinvalidation_proto_java", configuration: "release")
    debugCompile project(path: ":third_party\$android_protobuf\$protobuf_nano_javalib", configuration: "debug")
    releaseCompile project(path: ":third_party\$android_protobuf\$protobuf_nano_javalib", configuration: "release")
}

afterEvaluate {
    def tasksToDisable = tasks.findAll {
        return (it.name.equals('generateDebugSources')  // causes unwanted AndroidManifest.java
                || it.name.equals('generateReleaseSources')
                || it.name.endsWith('Assets')
                || it.name.endsWith('BuildConfig')  // causes unwanted BuildConfig.java
                || it.name.endsWith('Resources')
                || it.name.endsWith('ResValues')
                || it.name.endsWith('Aidl')
                || it.name.endsWith('Renderscript')
                || it.name.endsWith('Shaders'))
    }
    tasksToDisable.each { Task task ->
      task.enabled = false
    }
}

