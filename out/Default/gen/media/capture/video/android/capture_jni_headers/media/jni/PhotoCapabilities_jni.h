// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/media/PhotoCapabilities

#ifndef org_chromium_media_PhotoCapabilities_JNI
#define org_chromium_media_PhotoCapabilities_JNI

#include <jni.h>

#include "../../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kPhotoCapabilitiesClassPath[] =
    "org/chromium/media/PhotoCapabilities";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_PhotoCapabilities_clazz __attribute__((unused)) = 0;
#define PhotoCapabilities_clazz(env) base::android::LazyGetClass(env, kPhotoCapabilitiesClassPath, &g_PhotoCapabilities_clazz)

}  // namespace

namespace media {

// Step 2: method stubs.

static base::subtle::AtomicWord g_PhotoCapabilities_getMinIso = 0;
static jint Java_PhotoCapabilities_getMinIso(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getMinIso",

"("
")"
"I",
      &g_PhotoCapabilities_getMinIso);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getMaxIso = 0;
static jint Java_PhotoCapabilities_getMaxIso(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getMaxIso",

"("
")"
"I",
      &g_PhotoCapabilities_getMaxIso);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getCurrentIso = 0;
static jint Java_PhotoCapabilities_getCurrentIso(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getCurrentIso",

"("
")"
"I",
      &g_PhotoCapabilities_getCurrentIso);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getMinHeight = 0;
static jint Java_PhotoCapabilities_getMinHeight(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getMinHeight",

"("
")"
"I",
      &g_PhotoCapabilities_getMinHeight);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getMaxHeight = 0;
static jint Java_PhotoCapabilities_getMaxHeight(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getMaxHeight",

"("
")"
"I",
      &g_PhotoCapabilities_getMaxHeight);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getCurrentHeight = 0;
static jint Java_PhotoCapabilities_getCurrentHeight(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getCurrentHeight",

"("
")"
"I",
      &g_PhotoCapabilities_getCurrentHeight);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getMinWidth = 0;
static jint Java_PhotoCapabilities_getMinWidth(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getMinWidth",

"("
")"
"I",
      &g_PhotoCapabilities_getMinWidth);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getMaxWidth = 0;
static jint Java_PhotoCapabilities_getMaxWidth(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getMaxWidth",

"("
")"
"I",
      &g_PhotoCapabilities_getMaxWidth);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getCurrentWidth = 0;
static jint Java_PhotoCapabilities_getCurrentWidth(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getCurrentWidth",

"("
")"
"I",
      &g_PhotoCapabilities_getCurrentWidth);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getMinZoom = 0;
static jint Java_PhotoCapabilities_getMinZoom(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getMinZoom",

"("
")"
"I",
      &g_PhotoCapabilities_getMinZoom);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getMaxZoom = 0;
static jint Java_PhotoCapabilities_getMaxZoom(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getMaxZoom",

"("
")"
"I",
      &g_PhotoCapabilities_getMaxZoom);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getCurrentZoom = 0;
static jint Java_PhotoCapabilities_getCurrentZoom(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getCurrentZoom",

"("
")"
"I",
      &g_PhotoCapabilities_getCurrentZoom);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_PhotoCapabilities_getFocusMode = 0;
static jint Java_PhotoCapabilities_getFocusMode(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PhotoCapabilities_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PhotoCapabilities_clazz(env),
      "getFocusMode",

"("
")"
"I",
      &g_PhotoCapabilities_getFocusMode);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

// Step 3: RegisterNatives.

}  // namespace media

#endif  // org_chromium_media_PhotoCapabilities_JNI
