// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adaboost.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "adaboost.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace dom_distiller {

void protobuf_ShutdownFile_adaboost_2eproto() {
  delete AdaBoostProto::default_instance_;
  delete StumpProto::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_adaboost_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_adaboost_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  AdaBoostProto::default_instance_ = new AdaBoostProto();
  StumpProto::default_instance_ = new StumpProto();
  AdaBoostProto::default_instance_->InitAsDefaultInstance();
  StumpProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_adaboost_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_adaboost_2eproto_once_);
void protobuf_AddDesc_adaboost_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_adaboost_2eproto_once_,
                 &protobuf_AddDesc_adaboost_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_adaboost_2eproto {
  StaticDescriptorInitializer_adaboost_2eproto() {
    protobuf_AddDesc_adaboost_2eproto();
  }
} static_descriptor_initializer_adaboost_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

static ::std::string* MutableUnknownFieldsForAdaBoostProto(
    AdaBoostProto* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdaBoostProto::kNumStumpsFieldNumber;
const int AdaBoostProto::kNumFeaturesFieldNumber;
const int AdaBoostProto::kStumpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdaBoostProto::AdaBoostProto()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dom_distiller.AdaBoostProto)
}

void AdaBoostProto::InitAsDefaultInstance() {
}

AdaBoostProto::AdaBoostProto(const AdaBoostProto& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dom_distiller.AdaBoostProto)
}

void AdaBoostProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_stumps_ = 0;
  num_features_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AdaBoostProto::~AdaBoostProto() {
  // @@protoc_insertion_point(destructor:dom_distiller.AdaBoostProto)
  SharedDtor();
}

void AdaBoostProto::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void AdaBoostProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AdaBoostProto& AdaBoostProto::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_adaboost_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_adaboost_2eproto();
#endif
  return *default_instance_;
}

AdaBoostProto* AdaBoostProto::default_instance_ = NULL;

AdaBoostProto* AdaBoostProto::New(::google::protobuf::Arena* arena) const {
  AdaBoostProto* n = new AdaBoostProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdaBoostProto::Clear() {
// @@protoc_insertion_point(message_clear_start:dom_distiller.AdaBoostProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AdaBoostProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AdaBoostProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(num_stumps_, num_features_);

#undef ZR_HELPER_
#undef ZR_

  stump_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AdaBoostProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForAdaBoostProto, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:dom_distiller.AdaBoostProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 num_stumps = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_stumps_)));
          set_has_num_stumps();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num_features;
        break;
      }

      // required int32 num_features = 2;
      case 2: {
        if (tag == 16) {
         parse_num_features:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_features_)));
          set_has_num_features();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_stump;
        break;
      }

      // repeated .dom_distiller.StumpProto stump = 3;
      case 3: {
        if (tag == 26) {
         parse_stump:
          DO_(input->IncrementRecursionDepth());
         parse_loop_stump:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_stump()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_stump;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dom_distiller.AdaBoostProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dom_distiller.AdaBoostProto)
  return false;
#undef DO_
}

void AdaBoostProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dom_distiller.AdaBoostProto)
  // required int32 num_stumps = 1;
  if (has_num_stumps()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_stumps(), output);
  }

  // required int32 num_features = 2;
  if (has_num_features()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_features(), output);
  }

  // repeated .dom_distiller.StumpProto stump = 3;
  for (unsigned int i = 0, n = this->stump_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->stump(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:dom_distiller.AdaBoostProto)
}

int AdaBoostProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dom_distiller.AdaBoostProto)
  int total_size = 0;

  if (has_num_stumps()) {
    // required int32 num_stumps = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_stumps());
  }

  if (has_num_features()) {
    // required int32 num_features = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_features());
  }

  return total_size;
}
int AdaBoostProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dom_distiller.AdaBoostProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 num_stumps = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_stumps());

    // required int32 num_features = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_features());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .dom_distiller.StumpProto stump = 3;
  total_size += 1 * this->stump_size();
  for (int i = 0; i < this->stump_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stump(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdaBoostProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AdaBoostProto*>(&from));
}

void AdaBoostProto::MergeFrom(const AdaBoostProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dom_distiller.AdaBoostProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  stump_.MergeFrom(from.stump_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num_stumps()) {
      set_num_stumps(from.num_stumps());
    }
    if (from.has_num_features()) {
      set_num_features(from.num_features());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void AdaBoostProto::CopyFrom(const AdaBoostProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dom_distiller.AdaBoostProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdaBoostProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->stump())) return false;
  return true;
}

void AdaBoostProto::Swap(AdaBoostProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdaBoostProto::InternalSwap(AdaBoostProto* other) {
  std::swap(num_stumps_, other->num_stumps_);
  std::swap(num_features_, other->num_features_);
  stump_.UnsafeArenaSwap(&other->stump_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string AdaBoostProto::GetTypeName() const {
  return "dom_distiller.AdaBoostProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdaBoostProto

// required int32 num_stumps = 1;
bool AdaBoostProto::has_num_stumps() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AdaBoostProto::set_has_num_stumps() {
  _has_bits_[0] |= 0x00000001u;
}
void AdaBoostProto::clear_has_num_stumps() {
  _has_bits_[0] &= ~0x00000001u;
}
void AdaBoostProto::clear_num_stumps() {
  num_stumps_ = 0;
  clear_has_num_stumps();
}
 ::google::protobuf::int32 AdaBoostProto::num_stumps() const {
  // @@protoc_insertion_point(field_get:dom_distiller.AdaBoostProto.num_stumps)
  return num_stumps_;
}
 void AdaBoostProto::set_num_stumps(::google::protobuf::int32 value) {
  set_has_num_stumps();
  num_stumps_ = value;
  // @@protoc_insertion_point(field_set:dom_distiller.AdaBoostProto.num_stumps)
}

// required int32 num_features = 2;
bool AdaBoostProto::has_num_features() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AdaBoostProto::set_has_num_features() {
  _has_bits_[0] |= 0x00000002u;
}
void AdaBoostProto::clear_has_num_features() {
  _has_bits_[0] &= ~0x00000002u;
}
void AdaBoostProto::clear_num_features() {
  num_features_ = 0;
  clear_has_num_features();
}
 ::google::protobuf::int32 AdaBoostProto::num_features() const {
  // @@protoc_insertion_point(field_get:dom_distiller.AdaBoostProto.num_features)
  return num_features_;
}
 void AdaBoostProto::set_num_features(::google::protobuf::int32 value) {
  set_has_num_features();
  num_features_ = value;
  // @@protoc_insertion_point(field_set:dom_distiller.AdaBoostProto.num_features)
}

// repeated .dom_distiller.StumpProto stump = 3;
int AdaBoostProto::stump_size() const {
  return stump_.size();
}
void AdaBoostProto::clear_stump() {
  stump_.Clear();
}
const ::dom_distiller::StumpProto& AdaBoostProto::stump(int index) const {
  // @@protoc_insertion_point(field_get:dom_distiller.AdaBoostProto.stump)
  return stump_.Get(index);
}
::dom_distiller::StumpProto* AdaBoostProto::mutable_stump(int index) {
  // @@protoc_insertion_point(field_mutable:dom_distiller.AdaBoostProto.stump)
  return stump_.Mutable(index);
}
::dom_distiller::StumpProto* AdaBoostProto::add_stump() {
  // @@protoc_insertion_point(field_add:dom_distiller.AdaBoostProto.stump)
  return stump_.Add();
}
::google::protobuf::RepeatedPtrField< ::dom_distiller::StumpProto >*
AdaBoostProto::mutable_stump() {
  // @@protoc_insertion_point(field_mutable_list:dom_distiller.AdaBoostProto.stump)
  return &stump_;
}
const ::google::protobuf::RepeatedPtrField< ::dom_distiller::StumpProto >&
AdaBoostProto::stump() const {
  // @@protoc_insertion_point(field_list:dom_distiller.AdaBoostProto.stump)
  return stump_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForStumpProto(
    StumpProto* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StumpProto::kFeatureNumberFieldNumber;
const int StumpProto::kSplitFieldNumber;
const int StumpProto::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StumpProto::StumpProto()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dom_distiller.StumpProto)
}

void StumpProto::InitAsDefaultInstance() {
}

StumpProto::StumpProto(const StumpProto& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dom_distiller.StumpProto)
}

void StumpProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feature_number_ = 0;
  split_ = 0;
  weight_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StumpProto::~StumpProto() {
  // @@protoc_insertion_point(destructor:dom_distiller.StumpProto)
  SharedDtor();
}

void StumpProto::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void StumpProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StumpProto& StumpProto::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_adaboost_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_adaboost_2eproto();
#endif
  return *default_instance_;
}

StumpProto* StumpProto::default_instance_ = NULL;

StumpProto* StumpProto::New(::google::protobuf::Arena* arena) const {
  StumpProto* n = new StumpProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StumpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:dom_distiller.StumpProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(StumpProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StumpProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(split_, feature_number_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StumpProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForStumpProto, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:dom_distiller.StumpProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 feature_number = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feature_number_)));
          set_has_feature_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_split;
        break;
      }

      // required double split = 2;
      case 2: {
        if (tag == 17) {
         parse_split:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &split_)));
          set_has_split();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_weight;
        break;
      }

      // required double weight = 3;
      case 3: {
        if (tag == 25) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dom_distiller.StumpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dom_distiller.StumpProto)
  return false;
#undef DO_
}

void StumpProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dom_distiller.StumpProto)
  // required int32 feature_number = 1;
  if (has_feature_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->feature_number(), output);
  }

  // required double split = 2;
  if (has_split()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->split(), output);
  }

  // required double weight = 3;
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->weight(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:dom_distiller.StumpProto)
}

int StumpProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dom_distiller.StumpProto)
  int total_size = 0;

  if (has_feature_number()) {
    // required int32 feature_number = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->feature_number());
  }

  if (has_split()) {
    // required double split = 2;
    total_size += 1 + 8;
  }

  if (has_weight()) {
    // required double weight = 3;
    total_size += 1 + 8;
  }

  return total_size;
}
int StumpProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dom_distiller.StumpProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 feature_number = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->feature_number());

    // required double split = 2;
    total_size += 1 + 8;

    // required double weight = 3;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StumpProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StumpProto*>(&from));
}

void StumpProto::MergeFrom(const StumpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dom_distiller.StumpProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_feature_number()) {
      set_feature_number(from.feature_number());
    }
    if (from.has_split()) {
      set_split(from.split());
    }
    if (from.has_weight()) {
      set_weight(from.weight());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void StumpProto::CopyFrom(const StumpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dom_distiller.StumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StumpProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void StumpProto::Swap(StumpProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StumpProto::InternalSwap(StumpProto* other) {
  std::swap(feature_number_, other->feature_number_);
  std::swap(split_, other->split_);
  std::swap(weight_, other->weight_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StumpProto::GetTypeName() const {
  return "dom_distiller.StumpProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StumpProto

// required int32 feature_number = 1;
bool StumpProto::has_feature_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StumpProto::set_has_feature_number() {
  _has_bits_[0] |= 0x00000001u;
}
void StumpProto::clear_has_feature_number() {
  _has_bits_[0] &= ~0x00000001u;
}
void StumpProto::clear_feature_number() {
  feature_number_ = 0;
  clear_has_feature_number();
}
 ::google::protobuf::int32 StumpProto::feature_number() const {
  // @@protoc_insertion_point(field_get:dom_distiller.StumpProto.feature_number)
  return feature_number_;
}
 void StumpProto::set_feature_number(::google::protobuf::int32 value) {
  set_has_feature_number();
  feature_number_ = value;
  // @@protoc_insertion_point(field_set:dom_distiller.StumpProto.feature_number)
}

// required double split = 2;
bool StumpProto::has_split() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StumpProto::set_has_split() {
  _has_bits_[0] |= 0x00000002u;
}
void StumpProto::clear_has_split() {
  _has_bits_[0] &= ~0x00000002u;
}
void StumpProto::clear_split() {
  split_ = 0;
  clear_has_split();
}
 double StumpProto::split() const {
  // @@protoc_insertion_point(field_get:dom_distiller.StumpProto.split)
  return split_;
}
 void StumpProto::set_split(double value) {
  set_has_split();
  split_ = value;
  // @@protoc_insertion_point(field_set:dom_distiller.StumpProto.split)
}

// required double weight = 3;
bool StumpProto::has_weight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StumpProto::set_has_weight() {
  _has_bits_[0] |= 0x00000004u;
}
void StumpProto::clear_has_weight() {
  _has_bits_[0] &= ~0x00000004u;
}
void StumpProto::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
 double StumpProto::weight() const {
  // @@protoc_insertion_point(field_get:dom_distiller.StumpProto.weight)
  return weight_;
}
 void StumpProto::set_weight(double value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:dom_distiller.StumpProto.weight)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dom_distiller

// @@protoc_insertion_point(global_scope)
