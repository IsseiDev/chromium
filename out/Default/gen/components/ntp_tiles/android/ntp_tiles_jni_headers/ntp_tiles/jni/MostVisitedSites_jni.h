// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/ntptiles/MostVisitedSites

#ifndef org_chromium_components_ntptiles_MostVisitedSites_JNI
#define org_chromium_components_ntptiles_MostVisitedSites_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kMostVisitedSitesClassPath[] =
    "org/chromium/components/ntptiles/MostVisitedSites";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_MostVisitedSites_clazz __attribute__((unused)) = 0;
#define MostVisitedSites_clazz(env) base::android::LazyGetClass(env, kMostVisitedSitesClassPath, &g_MostVisitedSites_clazz)

}  // namespace

// Step 2: method stubs.

static base::subtle::AtomicWord g_MostVisitedSites_isPopularSitesForceEnabled =
    0;
static jboolean Java_MostVisitedSites_isPopularSitesForceEnabled(JNIEnv* env) {
  CHECK_CLAZZ(env, MostVisitedSites_clazz(env),
      MostVisitedSites_clazz(env), false);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, MostVisitedSites_clazz(env),
      "isPopularSitesForceEnabled",

"("
")"
"Z",
      &g_MostVisitedSites_isPopularSitesForceEnabled);

  jboolean ret =
      env->CallStaticBooleanMethod(MostVisitedSites_clazz(env),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

// Step 3: RegisterNatives.

#endif  // org_chromium_components_ntptiles_MostVisitedSites_JNI
