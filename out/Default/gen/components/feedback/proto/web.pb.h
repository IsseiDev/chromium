// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: web.proto

#ifndef PROTOBUF_web_2eproto__INCLUDED
#define PROTOBUF_web_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "annotations.pb.h"
#include "dom.pb.h"
// @@protoc_insertion_point(includes)

namespace userfeedback {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_web_2eproto();
void protobuf_AssignDesc_web_2eproto();
void protobuf_ShutdownFile_web_2eproto();

class ExtensionDetails;
class InternalWebData;
class ProductSpecificBinaryData;
class ProductSpecificData;
class WebData;

// ===================================================================

class WebData : public ::google::protobuf::MessageLite {
 public:
  WebData();
  virtual ~WebData();

  WebData(const WebData& from);

  inline WebData& operator=(const WebData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const WebData& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WebData* internal_default_instance() {
    return default_instance_;
  }
  #endif

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(WebData* other);

  // implements Message ----------------------------------------------

  inline WebData* New() const { return New(NULL); }

  WebData* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WebData& from);
  void MergeFrom(const WebData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .userfeedback.Navigator navigator = 1;
  bool has_navigator() const;
  void clear_navigator();
  static const int kNavigatorFieldNumber = 1;
  const ::userfeedback::Navigator& navigator() const;
  ::userfeedback::Navigator* mutable_navigator();
  ::userfeedback::Navigator* release_navigator();
  void set_allocated_navigator(::userfeedback::Navigator* navigator);

  // optional .userfeedback.ExtensionDetails extension_details = 2;
  bool has_extension_details() const;
  void clear_extension_details();
  static const int kExtensionDetailsFieldNumber = 2;
  const ::userfeedback::ExtensionDetails& extension_details() const;
  ::userfeedback::ExtensionDetails* mutable_extension_details();
  ::userfeedback::ExtensionDetails* release_extension_details();
  void set_allocated_extension_details(::userfeedback::ExtensionDetails* extension_details);

  // optional string url = 3;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // repeated .userfeedback.Annotation annotation = 4;
  int annotation_size() const;
  void clear_annotation();
  static const int kAnnotationFieldNumber = 4;
  const ::userfeedback::Annotation& annotation(int index) const;
  ::userfeedback::Annotation* mutable_annotation(int index);
  ::userfeedback::Annotation* add_annotation();
  ::google::protobuf::RepeatedPtrField< ::userfeedback::Annotation >*
      mutable_annotation();
  const ::google::protobuf::RepeatedPtrField< ::userfeedback::Annotation >&
      annotation() const;

  // optional string suggestion_id = 5;
  bool has_suggestion_id() const;
  void clear_suggestion_id();
  static const int kSuggestionIdFieldNumber = 5;
  const ::std::string& suggestion_id() const;
  void set_suggestion_id(const ::std::string& value);
  void set_suggestion_id(const char* value);
  void set_suggestion_id(const char* value, size_t size);
  ::std::string* mutable_suggestion_id();
  ::std::string* release_suggestion_id();
  void set_allocated_suggestion_id(::std::string* suggestion_id);

  // repeated .userfeedback.ProductSpecificData product_specific_data = 6;
  int product_specific_data_size() const;
  void clear_product_specific_data();
  static const int kProductSpecificDataFieldNumber = 6;
  const ::userfeedback::ProductSpecificData& product_specific_data(int index) const;
  ::userfeedback::ProductSpecificData* mutable_product_specific_data(int index);
  ::userfeedback::ProductSpecificData* add_product_specific_data();
  ::google::protobuf::RepeatedPtrField< ::userfeedback::ProductSpecificData >*
      mutable_product_specific_data();
  const ::google::protobuf::RepeatedPtrField< ::userfeedback::ProductSpecificData >&
      product_specific_data() const;

  // repeated string product_specific_binary_data_name = 7;
  int product_specific_binary_data_name_size() const;
  void clear_product_specific_binary_data_name();
  static const int kProductSpecificBinaryDataNameFieldNumber = 7;
  const ::std::string& product_specific_binary_data_name(int index) const;
  ::std::string* mutable_product_specific_binary_data_name(int index);
  void set_product_specific_binary_data_name(int index, const ::std::string& value);
  void set_product_specific_binary_data_name(int index, const char* value);
  void set_product_specific_binary_data_name(int index, const char* value, size_t size);
  ::std::string* add_product_specific_binary_data_name();
  void add_product_specific_binary_data_name(const ::std::string& value);
  void add_product_specific_binary_data_name(const char* value);
  void add_product_specific_binary_data_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& product_specific_binary_data_name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_product_specific_binary_data_name();

  // @@protoc_insertion_point(class_scope:userfeedback.WebData)
 private:
  inline void set_has_navigator();
  inline void clear_has_navigator();
  inline void set_has_extension_details();
  inline void clear_has_extension_details();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_suggestion_id();
  inline void clear_has_suggestion_id();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::userfeedback::Navigator* navigator_;
  ::userfeedback::ExtensionDetails* extension_details_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::RepeatedPtrField< ::userfeedback::Annotation > annotation_;
  ::google::protobuf::internal::ArenaStringPtr suggestion_id_;
  ::google::protobuf::RepeatedPtrField< ::userfeedback::ProductSpecificData > product_specific_data_;
  ::google::protobuf::RepeatedPtrField< ::std::string> product_specific_binary_data_name_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_web_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_web_2eproto();
  #endif
  friend void protobuf_AssignDesc_web_2eproto();
  friend void protobuf_ShutdownFile_web_2eproto();

  void InitAsDefaultInstance();
  static WebData* default_instance_;
};
// -------------------------------------------------------------------

class ExtensionDetails : public ::google::protobuf::MessageLite {
 public:
  ExtensionDetails();
  virtual ~ExtensionDetails();

  ExtensionDetails(const ExtensionDetails& from);

  inline ExtensionDetails& operator=(const ExtensionDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const ExtensionDetails& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ExtensionDetails* internal_default_instance() {
    return default_instance_;
  }
  #endif

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(ExtensionDetails* other);

  // implements Message ----------------------------------------------

  inline ExtensionDetails* New() const { return New(NULL); }

  ExtensionDetails* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ExtensionDetails& from);
  void MergeFrom(const ExtensionDetails& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExtensionDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string extension_version = 1;
  bool has_extension_version() const;
  void clear_extension_version();
  static const int kExtensionVersionFieldNumber = 1;
  const ::std::string& extension_version() const;
  void set_extension_version(const ::std::string& value);
  void set_extension_version(const char* value);
  void set_extension_version(const char* value, size_t size);
  ::std::string* mutable_extension_version();
  ::std::string* release_extension_version();
  void set_allocated_extension_version(::std::string* extension_version);

  // required string protocol_version = 2;
  bool has_protocol_version() const;
  void clear_protocol_version();
  static const int kProtocolVersionFieldNumber = 2;
  const ::std::string& protocol_version() const;
  void set_protocol_version(const ::std::string& value);
  void set_protocol_version(const char* value);
  void set_protocol_version(const char* value, size_t size);
  ::std::string* mutable_protocol_version();
  ::std::string* release_protocol_version();
  void set_allocated_protocol_version(::std::string* protocol_version);

  // @@protoc_insertion_point(class_scope:userfeedback.ExtensionDetails)
 private:
  inline void set_has_extension_version();
  inline void clear_has_extension_version();
  inline void set_has_protocol_version();
  inline void clear_has_protocol_version();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr extension_version_;
  ::google::protobuf::internal::ArenaStringPtr protocol_version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_web_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_web_2eproto();
  #endif
  friend void protobuf_AssignDesc_web_2eproto();
  friend void protobuf_ShutdownFile_web_2eproto();

  void InitAsDefaultInstance();
  static ExtensionDetails* default_instance_;
};
// -------------------------------------------------------------------

class InternalWebData : public ::google::protobuf::MessageLite {
 public:
  InternalWebData();
  virtual ~InternalWebData();

  InternalWebData(const InternalWebData& from);

  inline InternalWebData& operator=(const InternalWebData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const InternalWebData& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InternalWebData* internal_default_instance() {
    return default_instance_;
  }
  #endif

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(InternalWebData* other);

  // implements Message ----------------------------------------------

  inline InternalWebData* New() const { return New(NULL); }

  InternalWebData* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InternalWebData& from);
  void MergeFrom(const InternalWebData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InternalWebData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string email_receiver = 1;
  int email_receiver_size() const;
  void clear_email_receiver();
  static const int kEmailReceiverFieldNumber = 1;
  const ::std::string& email_receiver(int index) const;
  ::std::string* mutable_email_receiver(int index);
  void set_email_receiver(int index, const ::std::string& value);
  void set_email_receiver(int index, const char* value);
  void set_email_receiver(int index, const char* value, size_t size);
  ::std::string* add_email_receiver();
  void add_email_receiver(const ::std::string& value);
  void add_email_receiver(const char* value);
  void add_email_receiver(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& email_receiver() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_email_receiver();

  // optional string subject = 2;
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 2;
  const ::std::string& subject() const;
  void set_subject(const ::std::string& value);
  void set_subject(const char* value);
  void set_subject(const char* value, size_t size);
  ::std::string* mutable_subject();
  ::std::string* release_subject();
  void set_allocated_subject(::std::string* subject);

  // optional bool DEPRECATED_urgent = 3 [default = false];
  bool has_deprecated_urgent() const;
  void clear_deprecated_urgent();
  static const int kDEPRECATEDUrgentFieldNumber = 3;
  bool deprecated_urgent() const;
  void set_deprecated_urgent(bool value);

  // @@protoc_insertion_point(class_scope:userfeedback.InternalWebData)
 private:
  inline void set_has_subject();
  inline void clear_has_subject();
  inline void set_has_deprecated_urgent();
  inline void clear_has_deprecated_urgent();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> email_receiver_;
  ::google::protobuf::internal::ArenaStringPtr subject_;
  bool deprecated_urgent_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_web_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_web_2eproto();
  #endif
  friend void protobuf_AssignDesc_web_2eproto();
  friend void protobuf_ShutdownFile_web_2eproto();

  void InitAsDefaultInstance();
  static InternalWebData* default_instance_;
};
// -------------------------------------------------------------------

class ProductSpecificData : public ::google::protobuf::MessageLite {
 public:
  ProductSpecificData();
  virtual ~ProductSpecificData();

  ProductSpecificData(const ProductSpecificData& from);

  inline ProductSpecificData& operator=(const ProductSpecificData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const ProductSpecificData& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ProductSpecificData* internal_default_instance() {
    return default_instance_;
  }
  #endif

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(ProductSpecificData* other);

  // implements Message ----------------------------------------------

  inline ProductSpecificData* New() const { return New(NULL); }

  ProductSpecificData* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ProductSpecificData& from);
  void MergeFrom(const ProductSpecificData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProductSpecificData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:userfeedback.ProductSpecificData)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_web_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_web_2eproto();
  #endif
  friend void protobuf_AssignDesc_web_2eproto();
  friend void protobuf_ShutdownFile_web_2eproto();

  void InitAsDefaultInstance();
  static ProductSpecificData* default_instance_;
};
// -------------------------------------------------------------------

class ProductSpecificBinaryData : public ::google::protobuf::MessageLite {
 public:
  ProductSpecificBinaryData();
  virtual ~ProductSpecificBinaryData();

  ProductSpecificBinaryData(const ProductSpecificBinaryData& from);

  inline ProductSpecificBinaryData& operator=(const ProductSpecificBinaryData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const ProductSpecificBinaryData& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ProductSpecificBinaryData* internal_default_instance() {
    return default_instance_;
  }
  #endif

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(ProductSpecificBinaryData* other);

  // implements Message ----------------------------------------------

  inline ProductSpecificBinaryData* New() const { return New(NULL); }

  ProductSpecificBinaryData* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ProductSpecificBinaryData& from);
  void MergeFrom(const ProductSpecificBinaryData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProductSpecificBinaryData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string mime_type = 2;
  bool has_mime_type() const;
  void clear_mime_type();
  static const int kMimeTypeFieldNumber = 2;
  const ::std::string& mime_type() const;
  void set_mime_type(const ::std::string& value);
  void set_mime_type(const char* value);
  void set_mime_type(const char* value, size_t size);
  ::std::string* mutable_mime_type();
  ::std::string* release_mime_type();
  void set_allocated_mime_type(::std::string* mime_type);

  // optional bytes data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:userfeedback.ProductSpecificBinaryData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_mime_type();
  inline void clear_has_mime_type();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr mime_type_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_web_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_web_2eproto();
  #endif
  friend void protobuf_AssignDesc_web_2eproto();
  friend void protobuf_ShutdownFile_web_2eproto();

  void InitAsDefaultInstance();
  static ProductSpecificBinaryData* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// WebData

// optional .userfeedback.Navigator navigator = 1;
inline bool WebData::has_navigator() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebData::set_has_navigator() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebData::clear_has_navigator() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebData::clear_navigator() {
  if (navigator_ != NULL) navigator_->::userfeedback::Navigator::Clear();
  clear_has_navigator();
}
inline const ::userfeedback::Navigator& WebData::navigator() const {
  // @@protoc_insertion_point(field_get:userfeedback.WebData.navigator)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return navigator_ != NULL ? *navigator_ : *default_instance().navigator_;
#else
  return navigator_ != NULL ? *navigator_ : *default_instance_->navigator_;
#endif
}
inline ::userfeedback::Navigator* WebData::mutable_navigator() {
  set_has_navigator();
  if (navigator_ == NULL) {
    navigator_ = new ::userfeedback::Navigator;
  }
  // @@protoc_insertion_point(field_mutable:userfeedback.WebData.navigator)
  return navigator_;
}
inline ::userfeedback::Navigator* WebData::release_navigator() {
  // @@protoc_insertion_point(field_release:userfeedback.WebData.navigator)
  clear_has_navigator();
  ::userfeedback::Navigator* temp = navigator_;
  navigator_ = NULL;
  return temp;
}
inline void WebData::set_allocated_navigator(::userfeedback::Navigator* navigator) {
  delete navigator_;
  navigator_ = navigator;
  if (navigator) {
    set_has_navigator();
  } else {
    clear_has_navigator();
  }
  // @@protoc_insertion_point(field_set_allocated:userfeedback.WebData.navigator)
}

// optional .userfeedback.ExtensionDetails extension_details = 2;
inline bool WebData::has_extension_details() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebData::set_has_extension_details() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebData::clear_has_extension_details() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebData::clear_extension_details() {
  if (extension_details_ != NULL) extension_details_->::userfeedback::ExtensionDetails::Clear();
  clear_has_extension_details();
}
inline const ::userfeedback::ExtensionDetails& WebData::extension_details() const {
  // @@protoc_insertion_point(field_get:userfeedback.WebData.extension_details)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return extension_details_ != NULL ? *extension_details_ : *default_instance().extension_details_;
#else
  return extension_details_ != NULL ? *extension_details_ : *default_instance_->extension_details_;
#endif
}
inline ::userfeedback::ExtensionDetails* WebData::mutable_extension_details() {
  set_has_extension_details();
  if (extension_details_ == NULL) {
    extension_details_ = new ::userfeedback::ExtensionDetails;
  }
  // @@protoc_insertion_point(field_mutable:userfeedback.WebData.extension_details)
  return extension_details_;
}
inline ::userfeedback::ExtensionDetails* WebData::release_extension_details() {
  // @@protoc_insertion_point(field_release:userfeedback.WebData.extension_details)
  clear_has_extension_details();
  ::userfeedback::ExtensionDetails* temp = extension_details_;
  extension_details_ = NULL;
  return temp;
}
inline void WebData::set_allocated_extension_details(::userfeedback::ExtensionDetails* extension_details) {
  delete extension_details_;
  extension_details_ = extension_details;
  if (extension_details) {
    set_has_extension_details();
  } else {
    clear_has_extension_details();
  }
  // @@protoc_insertion_point(field_set_allocated:userfeedback.WebData.extension_details)
}

// optional string url = 3;
inline bool WebData::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebData::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebData::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebData::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& WebData::url() const {
  // @@protoc_insertion_point(field_get:userfeedback.WebData.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebData::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userfeedback.WebData.url)
}
inline void WebData::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userfeedback.WebData.url)
}
inline void WebData::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userfeedback.WebData.url)
}
inline ::std::string* WebData::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:userfeedback.WebData.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebData::release_url() {
  // @@protoc_insertion_point(field_release:userfeedback.WebData.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebData::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:userfeedback.WebData.url)
}

// repeated .userfeedback.Annotation annotation = 4;
inline int WebData::annotation_size() const {
  return annotation_.size();
}
inline void WebData::clear_annotation() {
  annotation_.Clear();
}
inline const ::userfeedback::Annotation& WebData::annotation(int index) const {
  // @@protoc_insertion_point(field_get:userfeedback.WebData.annotation)
  return annotation_.Get(index);
}
inline ::userfeedback::Annotation* WebData::mutable_annotation(int index) {
  // @@protoc_insertion_point(field_mutable:userfeedback.WebData.annotation)
  return annotation_.Mutable(index);
}
inline ::userfeedback::Annotation* WebData::add_annotation() {
  // @@protoc_insertion_point(field_add:userfeedback.WebData.annotation)
  return annotation_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userfeedback::Annotation >*
WebData::mutable_annotation() {
  // @@protoc_insertion_point(field_mutable_list:userfeedback.WebData.annotation)
  return &annotation_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userfeedback::Annotation >&
WebData::annotation() const {
  // @@protoc_insertion_point(field_list:userfeedback.WebData.annotation)
  return annotation_;
}

// optional string suggestion_id = 5;
inline bool WebData::has_suggestion_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebData::set_has_suggestion_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebData::clear_has_suggestion_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebData::clear_suggestion_id() {
  suggestion_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_suggestion_id();
}
inline const ::std::string& WebData::suggestion_id() const {
  // @@protoc_insertion_point(field_get:userfeedback.WebData.suggestion_id)
  return suggestion_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebData::set_suggestion_id(const ::std::string& value) {
  set_has_suggestion_id();
  suggestion_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userfeedback.WebData.suggestion_id)
}
inline void WebData::set_suggestion_id(const char* value) {
  set_has_suggestion_id();
  suggestion_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userfeedback.WebData.suggestion_id)
}
inline void WebData::set_suggestion_id(const char* value, size_t size) {
  set_has_suggestion_id();
  suggestion_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userfeedback.WebData.suggestion_id)
}
inline ::std::string* WebData::mutable_suggestion_id() {
  set_has_suggestion_id();
  // @@protoc_insertion_point(field_mutable:userfeedback.WebData.suggestion_id)
  return suggestion_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebData::release_suggestion_id() {
  // @@protoc_insertion_point(field_release:userfeedback.WebData.suggestion_id)
  clear_has_suggestion_id();
  return suggestion_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebData::set_allocated_suggestion_id(::std::string* suggestion_id) {
  if (suggestion_id != NULL) {
    set_has_suggestion_id();
  } else {
    clear_has_suggestion_id();
  }
  suggestion_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suggestion_id);
  // @@protoc_insertion_point(field_set_allocated:userfeedback.WebData.suggestion_id)
}

// repeated .userfeedback.ProductSpecificData product_specific_data = 6;
inline int WebData::product_specific_data_size() const {
  return product_specific_data_.size();
}
inline void WebData::clear_product_specific_data() {
  product_specific_data_.Clear();
}
inline const ::userfeedback::ProductSpecificData& WebData::product_specific_data(int index) const {
  // @@protoc_insertion_point(field_get:userfeedback.WebData.product_specific_data)
  return product_specific_data_.Get(index);
}
inline ::userfeedback::ProductSpecificData* WebData::mutable_product_specific_data(int index) {
  // @@protoc_insertion_point(field_mutable:userfeedback.WebData.product_specific_data)
  return product_specific_data_.Mutable(index);
}
inline ::userfeedback::ProductSpecificData* WebData::add_product_specific_data() {
  // @@protoc_insertion_point(field_add:userfeedback.WebData.product_specific_data)
  return product_specific_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::userfeedback::ProductSpecificData >*
WebData::mutable_product_specific_data() {
  // @@protoc_insertion_point(field_mutable_list:userfeedback.WebData.product_specific_data)
  return &product_specific_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::userfeedback::ProductSpecificData >&
WebData::product_specific_data() const {
  // @@protoc_insertion_point(field_list:userfeedback.WebData.product_specific_data)
  return product_specific_data_;
}

// repeated string product_specific_binary_data_name = 7;
inline int WebData::product_specific_binary_data_name_size() const {
  return product_specific_binary_data_name_.size();
}
inline void WebData::clear_product_specific_binary_data_name() {
  product_specific_binary_data_name_.Clear();
}
inline const ::std::string& WebData::product_specific_binary_data_name(int index) const {
  // @@protoc_insertion_point(field_get:userfeedback.WebData.product_specific_binary_data_name)
  return product_specific_binary_data_name_.Get(index);
}
inline ::std::string* WebData::mutable_product_specific_binary_data_name(int index) {
  // @@protoc_insertion_point(field_mutable:userfeedback.WebData.product_specific_binary_data_name)
  return product_specific_binary_data_name_.Mutable(index);
}
inline void WebData::set_product_specific_binary_data_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:userfeedback.WebData.product_specific_binary_data_name)
  product_specific_binary_data_name_.Mutable(index)->assign(value);
}
inline void WebData::set_product_specific_binary_data_name(int index, const char* value) {
  product_specific_binary_data_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:userfeedback.WebData.product_specific_binary_data_name)
}
inline void WebData::set_product_specific_binary_data_name(int index, const char* value, size_t size) {
  product_specific_binary_data_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:userfeedback.WebData.product_specific_binary_data_name)
}
inline ::std::string* WebData::add_product_specific_binary_data_name() {
  // @@protoc_insertion_point(field_add_mutable:userfeedback.WebData.product_specific_binary_data_name)
  return product_specific_binary_data_name_.Add();
}
inline void WebData::add_product_specific_binary_data_name(const ::std::string& value) {
  product_specific_binary_data_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:userfeedback.WebData.product_specific_binary_data_name)
}
inline void WebData::add_product_specific_binary_data_name(const char* value) {
  product_specific_binary_data_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:userfeedback.WebData.product_specific_binary_data_name)
}
inline void WebData::add_product_specific_binary_data_name(const char* value, size_t size) {
  product_specific_binary_data_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:userfeedback.WebData.product_specific_binary_data_name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
WebData::product_specific_binary_data_name() const {
  // @@protoc_insertion_point(field_list:userfeedback.WebData.product_specific_binary_data_name)
  return product_specific_binary_data_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
WebData::mutable_product_specific_binary_data_name() {
  // @@protoc_insertion_point(field_mutable_list:userfeedback.WebData.product_specific_binary_data_name)
  return &product_specific_binary_data_name_;
}

// -------------------------------------------------------------------

// ExtensionDetails

// required string extension_version = 1;
inline bool ExtensionDetails::has_extension_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtensionDetails::set_has_extension_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtensionDetails::clear_has_extension_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExtensionDetails::clear_extension_version() {
  extension_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extension_version();
}
inline const ::std::string& ExtensionDetails::extension_version() const {
  // @@protoc_insertion_point(field_get:userfeedback.ExtensionDetails.extension_version)
  return extension_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtensionDetails::set_extension_version(const ::std::string& value) {
  set_has_extension_version();
  extension_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userfeedback.ExtensionDetails.extension_version)
}
inline void ExtensionDetails::set_extension_version(const char* value) {
  set_has_extension_version();
  extension_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userfeedback.ExtensionDetails.extension_version)
}
inline void ExtensionDetails::set_extension_version(const char* value, size_t size) {
  set_has_extension_version();
  extension_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userfeedback.ExtensionDetails.extension_version)
}
inline ::std::string* ExtensionDetails::mutable_extension_version() {
  set_has_extension_version();
  // @@protoc_insertion_point(field_mutable:userfeedback.ExtensionDetails.extension_version)
  return extension_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExtensionDetails::release_extension_version() {
  // @@protoc_insertion_point(field_release:userfeedback.ExtensionDetails.extension_version)
  clear_has_extension_version();
  return extension_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtensionDetails::set_allocated_extension_version(::std::string* extension_version) {
  if (extension_version != NULL) {
    set_has_extension_version();
  } else {
    clear_has_extension_version();
  }
  extension_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extension_version);
  // @@protoc_insertion_point(field_set_allocated:userfeedback.ExtensionDetails.extension_version)
}

// required string protocol_version = 2;
inline bool ExtensionDetails::has_protocol_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExtensionDetails::set_has_protocol_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExtensionDetails::clear_has_protocol_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExtensionDetails::clear_protocol_version() {
  protocol_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_protocol_version();
}
inline const ::std::string& ExtensionDetails::protocol_version() const {
  // @@protoc_insertion_point(field_get:userfeedback.ExtensionDetails.protocol_version)
  return protocol_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtensionDetails::set_protocol_version(const ::std::string& value) {
  set_has_protocol_version();
  protocol_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userfeedback.ExtensionDetails.protocol_version)
}
inline void ExtensionDetails::set_protocol_version(const char* value) {
  set_has_protocol_version();
  protocol_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userfeedback.ExtensionDetails.protocol_version)
}
inline void ExtensionDetails::set_protocol_version(const char* value, size_t size) {
  set_has_protocol_version();
  protocol_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userfeedback.ExtensionDetails.protocol_version)
}
inline ::std::string* ExtensionDetails::mutable_protocol_version() {
  set_has_protocol_version();
  // @@protoc_insertion_point(field_mutable:userfeedback.ExtensionDetails.protocol_version)
  return protocol_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExtensionDetails::release_protocol_version() {
  // @@protoc_insertion_point(field_release:userfeedback.ExtensionDetails.protocol_version)
  clear_has_protocol_version();
  return protocol_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtensionDetails::set_allocated_protocol_version(::std::string* protocol_version) {
  if (protocol_version != NULL) {
    set_has_protocol_version();
  } else {
    clear_has_protocol_version();
  }
  protocol_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocol_version);
  // @@protoc_insertion_point(field_set_allocated:userfeedback.ExtensionDetails.protocol_version)
}

// -------------------------------------------------------------------

// InternalWebData

// repeated string email_receiver = 1;
inline int InternalWebData::email_receiver_size() const {
  return email_receiver_.size();
}
inline void InternalWebData::clear_email_receiver() {
  email_receiver_.Clear();
}
inline const ::std::string& InternalWebData::email_receiver(int index) const {
  // @@protoc_insertion_point(field_get:userfeedback.InternalWebData.email_receiver)
  return email_receiver_.Get(index);
}
inline ::std::string* InternalWebData::mutable_email_receiver(int index) {
  // @@protoc_insertion_point(field_mutable:userfeedback.InternalWebData.email_receiver)
  return email_receiver_.Mutable(index);
}
inline void InternalWebData::set_email_receiver(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:userfeedback.InternalWebData.email_receiver)
  email_receiver_.Mutable(index)->assign(value);
}
inline void InternalWebData::set_email_receiver(int index, const char* value) {
  email_receiver_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:userfeedback.InternalWebData.email_receiver)
}
inline void InternalWebData::set_email_receiver(int index, const char* value, size_t size) {
  email_receiver_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:userfeedback.InternalWebData.email_receiver)
}
inline ::std::string* InternalWebData::add_email_receiver() {
  // @@protoc_insertion_point(field_add_mutable:userfeedback.InternalWebData.email_receiver)
  return email_receiver_.Add();
}
inline void InternalWebData::add_email_receiver(const ::std::string& value) {
  email_receiver_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:userfeedback.InternalWebData.email_receiver)
}
inline void InternalWebData::add_email_receiver(const char* value) {
  email_receiver_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:userfeedback.InternalWebData.email_receiver)
}
inline void InternalWebData::add_email_receiver(const char* value, size_t size) {
  email_receiver_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:userfeedback.InternalWebData.email_receiver)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
InternalWebData::email_receiver() const {
  // @@protoc_insertion_point(field_list:userfeedback.InternalWebData.email_receiver)
  return email_receiver_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
InternalWebData::mutable_email_receiver() {
  // @@protoc_insertion_point(field_mutable_list:userfeedback.InternalWebData.email_receiver)
  return &email_receiver_;
}

// optional string subject = 2;
inline bool InternalWebData::has_subject() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InternalWebData::set_has_subject() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InternalWebData::clear_has_subject() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InternalWebData::clear_subject() {
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subject();
}
inline const ::std::string& InternalWebData::subject() const {
  // @@protoc_insertion_point(field_get:userfeedback.InternalWebData.subject)
  return subject_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalWebData::set_subject(const ::std::string& value) {
  set_has_subject();
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userfeedback.InternalWebData.subject)
}
inline void InternalWebData::set_subject(const char* value) {
  set_has_subject();
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userfeedback.InternalWebData.subject)
}
inline void InternalWebData::set_subject(const char* value, size_t size) {
  set_has_subject();
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userfeedback.InternalWebData.subject)
}
inline ::std::string* InternalWebData::mutable_subject() {
  set_has_subject();
  // @@protoc_insertion_point(field_mutable:userfeedback.InternalWebData.subject)
  return subject_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InternalWebData::release_subject() {
  // @@protoc_insertion_point(field_release:userfeedback.InternalWebData.subject)
  clear_has_subject();
  return subject_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalWebData::set_allocated_subject(::std::string* subject) {
  if (subject != NULL) {
    set_has_subject();
  } else {
    clear_has_subject();
  }
  subject_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subject);
  // @@protoc_insertion_point(field_set_allocated:userfeedback.InternalWebData.subject)
}

// optional bool DEPRECATED_urgent = 3 [default = false];
inline bool InternalWebData::has_deprecated_urgent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InternalWebData::set_has_deprecated_urgent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InternalWebData::clear_has_deprecated_urgent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InternalWebData::clear_deprecated_urgent() {
  deprecated_urgent_ = false;
  clear_has_deprecated_urgent();
}
inline bool InternalWebData::deprecated_urgent() const {
  // @@protoc_insertion_point(field_get:userfeedback.InternalWebData.DEPRECATED_urgent)
  return deprecated_urgent_;
}
inline void InternalWebData::set_deprecated_urgent(bool value) {
  set_has_deprecated_urgent();
  deprecated_urgent_ = value;
  // @@protoc_insertion_point(field_set:userfeedback.InternalWebData.DEPRECATED_urgent)
}

// -------------------------------------------------------------------

// ProductSpecificData

// required string key = 1;
inline bool ProductSpecificData::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductSpecificData::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductSpecificData::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductSpecificData::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& ProductSpecificData::key() const {
  // @@protoc_insertion_point(field_get:userfeedback.ProductSpecificData.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductSpecificData::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userfeedback.ProductSpecificData.key)
}
inline void ProductSpecificData::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userfeedback.ProductSpecificData.key)
}
inline void ProductSpecificData::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userfeedback.ProductSpecificData.key)
}
inline ::std::string* ProductSpecificData::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:userfeedback.ProductSpecificData.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductSpecificData::release_key() {
  // @@protoc_insertion_point(field_release:userfeedback.ProductSpecificData.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductSpecificData::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:userfeedback.ProductSpecificData.key)
}

// optional string value = 2;
inline bool ProductSpecificData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductSpecificData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductSpecificData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductSpecificData::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& ProductSpecificData::value() const {
  // @@protoc_insertion_point(field_get:userfeedback.ProductSpecificData.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductSpecificData::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userfeedback.ProductSpecificData.value)
}
inline void ProductSpecificData::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userfeedback.ProductSpecificData.value)
}
inline void ProductSpecificData::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userfeedback.ProductSpecificData.value)
}
inline ::std::string* ProductSpecificData::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:userfeedback.ProductSpecificData.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductSpecificData::release_value() {
  // @@protoc_insertion_point(field_release:userfeedback.ProductSpecificData.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductSpecificData::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:userfeedback.ProductSpecificData.value)
}

// -------------------------------------------------------------------

// ProductSpecificBinaryData

// required string name = 1;
inline bool ProductSpecificBinaryData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductSpecificBinaryData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductSpecificBinaryData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductSpecificBinaryData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ProductSpecificBinaryData::name() const {
  // @@protoc_insertion_point(field_get:userfeedback.ProductSpecificBinaryData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductSpecificBinaryData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userfeedback.ProductSpecificBinaryData.name)
}
inline void ProductSpecificBinaryData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userfeedback.ProductSpecificBinaryData.name)
}
inline void ProductSpecificBinaryData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userfeedback.ProductSpecificBinaryData.name)
}
inline ::std::string* ProductSpecificBinaryData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:userfeedback.ProductSpecificBinaryData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductSpecificBinaryData::release_name() {
  // @@protoc_insertion_point(field_release:userfeedback.ProductSpecificBinaryData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductSpecificBinaryData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:userfeedback.ProductSpecificBinaryData.name)
}

// optional string mime_type = 2;
inline bool ProductSpecificBinaryData::has_mime_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductSpecificBinaryData::set_has_mime_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductSpecificBinaryData::clear_has_mime_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductSpecificBinaryData::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mime_type();
}
inline const ::std::string& ProductSpecificBinaryData::mime_type() const {
  // @@protoc_insertion_point(field_get:userfeedback.ProductSpecificBinaryData.mime_type)
  return mime_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductSpecificBinaryData::set_mime_type(const ::std::string& value) {
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userfeedback.ProductSpecificBinaryData.mime_type)
}
inline void ProductSpecificBinaryData::set_mime_type(const char* value) {
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userfeedback.ProductSpecificBinaryData.mime_type)
}
inline void ProductSpecificBinaryData::set_mime_type(const char* value, size_t size) {
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userfeedback.ProductSpecificBinaryData.mime_type)
}
inline ::std::string* ProductSpecificBinaryData::mutable_mime_type() {
  set_has_mime_type();
  // @@protoc_insertion_point(field_mutable:userfeedback.ProductSpecificBinaryData.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductSpecificBinaryData::release_mime_type() {
  // @@protoc_insertion_point(field_release:userfeedback.ProductSpecificBinaryData.mime_type)
  clear_has_mime_type();
  return mime_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductSpecificBinaryData::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    set_has_mime_type();
  } else {
    clear_has_mime_type();
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:userfeedback.ProductSpecificBinaryData.mime_type)
}

// optional bytes data = 3;
inline bool ProductSpecificBinaryData::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductSpecificBinaryData::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductSpecificBinaryData::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductSpecificBinaryData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& ProductSpecificBinaryData::data() const {
  // @@protoc_insertion_point(field_get:userfeedback.ProductSpecificBinaryData.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductSpecificBinaryData::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:userfeedback.ProductSpecificBinaryData.data)
}
inline void ProductSpecificBinaryData::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:userfeedback.ProductSpecificBinaryData.data)
}
inline void ProductSpecificBinaryData::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:userfeedback.ProductSpecificBinaryData.data)
}
inline ::std::string* ProductSpecificBinaryData::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:userfeedback.ProductSpecificBinaryData.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductSpecificBinaryData::release_data() {
  // @@protoc_insertion_point(field_release:userfeedback.ProductSpecificBinaryData.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductSpecificBinaryData::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:userfeedback.ProductSpecificBinaryData.data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace userfeedback

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_web_2eproto__INCLUDED
