// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: math.proto

#ifndef PROTOBUF_math_2eproto__INCLUDED
#define PROTOBUF_math_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace userfeedback {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_math_2eproto();
void protobuf_AssignDesc_math_2eproto();
void protobuf_ShutdownFile_math_2eproto();

class Dimensions;
class Rectangle;

// ===================================================================

class Dimensions : public ::google::protobuf::MessageLite {
 public:
  Dimensions();
  virtual ~Dimensions();

  Dimensions(const Dimensions& from);

  inline Dimensions& operator=(const Dimensions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const Dimensions& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Dimensions* internal_default_instance() {
    return default_instance_;
  }
  #endif

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(Dimensions* other);

  // implements Message ----------------------------------------------

  inline Dimensions* New() const { return New(NULL); }

  Dimensions* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Dimensions& from);
  void MergeFrom(const Dimensions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Dimensions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float width = 1;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  float width() const;
  void set_width(float value);

  // required float height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  float height() const;
  void set_height(float value);

  // @@protoc_insertion_point(class_scope:userfeedback.Dimensions)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float width_;
  float height_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_math_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_math_2eproto();
  #endif
  friend void protobuf_AssignDesc_math_2eproto();
  friend void protobuf_ShutdownFile_math_2eproto();

  void InitAsDefaultInstance();
  static Dimensions* default_instance_;
};
// -------------------------------------------------------------------

class Rectangle : public ::google::protobuf::MessageLite {
 public:
  Rectangle();
  virtual ~Rectangle();

  Rectangle(const Rectangle& from);

  inline Rectangle& operator=(const Rectangle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const Rectangle& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Rectangle* internal_default_instance() {
    return default_instance_;
  }
  #endif

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(Rectangle* other);

  // implements Message ----------------------------------------------

  inline Rectangle* New() const { return New(NULL); }

  Rectangle* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Rectangle& from);
  void MergeFrom(const Rectangle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Rectangle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float left = 1;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  float left() const;
  void set_left(float value);

  // required float top = 2;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 2;
  float top() const;
  void set_top(float value);

  // required float width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  float width() const;
  void set_width(float value);

  // required float height = 4;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  float height() const;
  void set_height(float value);

  // @@protoc_insertion_point(class_scope:userfeedback.Rectangle)
 private:
  inline void set_has_left();
  inline void clear_has_left();
  inline void set_has_top();
  inline void clear_has_top();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float left_;
  float top_;
  float width_;
  float height_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_math_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_math_2eproto();
  #endif
  friend void protobuf_AssignDesc_math_2eproto();
  friend void protobuf_ShutdownFile_math_2eproto();

  void InitAsDefaultInstance();
  static Rectangle* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Dimensions

// required float width = 1;
inline bool Dimensions::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dimensions::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dimensions::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dimensions::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline float Dimensions::width() const {
  // @@protoc_insertion_point(field_get:userfeedback.Dimensions.width)
  return width_;
}
inline void Dimensions::set_width(float value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:userfeedback.Dimensions.width)
}

// required float height = 2;
inline bool Dimensions::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dimensions::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dimensions::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dimensions::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline float Dimensions::height() const {
  // @@protoc_insertion_point(field_get:userfeedback.Dimensions.height)
  return height_;
}
inline void Dimensions::set_height(float value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:userfeedback.Dimensions.height)
}

// -------------------------------------------------------------------

// Rectangle

// required float left = 1;
inline bool Rectangle::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Rectangle::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Rectangle::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Rectangle::clear_left() {
  left_ = 0;
  clear_has_left();
}
inline float Rectangle::left() const {
  // @@protoc_insertion_point(field_get:userfeedback.Rectangle.left)
  return left_;
}
inline void Rectangle::set_left(float value) {
  set_has_left();
  left_ = value;
  // @@protoc_insertion_point(field_set:userfeedback.Rectangle.left)
}

// required float top = 2;
inline bool Rectangle::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Rectangle::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Rectangle::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Rectangle::clear_top() {
  top_ = 0;
  clear_has_top();
}
inline float Rectangle::top() const {
  // @@protoc_insertion_point(field_get:userfeedback.Rectangle.top)
  return top_;
}
inline void Rectangle::set_top(float value) {
  set_has_top();
  top_ = value;
  // @@protoc_insertion_point(field_set:userfeedback.Rectangle.top)
}

// required float width = 3;
inline bool Rectangle::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Rectangle::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Rectangle::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Rectangle::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline float Rectangle::width() const {
  // @@protoc_insertion_point(field_get:userfeedback.Rectangle.width)
  return width_;
}
inline void Rectangle::set_width(float value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:userfeedback.Rectangle.width)
}

// required float height = 4;
inline bool Rectangle::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Rectangle::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Rectangle::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Rectangle::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline float Rectangle::height() const {
  // @@protoc_insertion_point(field_get:userfeedback.Rectangle.height)
  return height_;
}
inline void Rectangle::set_height(float value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:userfeedback.Rectangle.height)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace userfeedback

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_math_2eproto__INCLUDED
