// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_store.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "data_store.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace data_reduction_proxy {

void protobuf_ShutdownFile_data_5fstore_2eproto() {
  delete DataUsageBucket::default_instance_;
  delete PerConnectionDataUsage::default_instance_;
  delete PerSiteDataUsage::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_data_5fstore_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_data_5fstore_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  DataUsageBucket::default_instance_ = new DataUsageBucket();
  PerConnectionDataUsage::default_instance_ = new PerConnectionDataUsage();
  PerSiteDataUsage::default_instance_ = new PerSiteDataUsage();
  DataUsageBucket::default_instance_->InitAsDefaultInstance();
  PerConnectionDataUsage::default_instance_->InitAsDefaultInstance();
  PerSiteDataUsage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_data_5fstore_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_data_5fstore_2eproto_once_);
void protobuf_AddDesc_data_5fstore_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_data_5fstore_2eproto_once_,
                 &protobuf_AddDesc_data_5fstore_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_data_5fstore_2eproto {
  StaticDescriptorInitializer_data_5fstore_2eproto() {
    protobuf_AddDesc_data_5fstore_2eproto();
  }
} static_descriptor_initializer_data_5fstore_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

static ::std::string* MutableUnknownFieldsForDataUsageBucket(
    DataUsageBucket* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataUsageBucket::kConnectionUsageFieldNumber;
const int DataUsageBucket::kLastUpdatedTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataUsageBucket::DataUsageBucket()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.DataUsageBucket)
}

void DataUsageBucket::InitAsDefaultInstance() {
}

DataUsageBucket::DataUsageBucket(const DataUsageBucket& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.DataUsageBucket)
}

void DataUsageBucket::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_updated_timestamp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataUsageBucket::~DataUsageBucket() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.DataUsageBucket)
  SharedDtor();
}

void DataUsageBucket::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void DataUsageBucket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DataUsageBucket& DataUsageBucket::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_data_5fstore_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_data_5fstore_2eproto();
#endif
  return *default_instance_;
}

DataUsageBucket* DataUsageBucket::default_instance_ = NULL;

DataUsageBucket* DataUsageBucket::New(::google::protobuf::Arena* arena) const {
  DataUsageBucket* n = new DataUsageBucket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataUsageBucket::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.DataUsageBucket)
  last_updated_timestamp_ = GOOGLE_LONGLONG(0);
  connection_usage_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DataUsageBucket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForDataUsageBucket, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.DataUsageBucket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .data_reduction_proxy.PerConnectionDataUsage connection_usage = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_connection_usage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_connection_usage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_connection_usage;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_last_updated_timestamp;
        break;
      }

      // optional int64 last_updated_timestamp = 2;
      case 2: {
        if (tag == 16) {
         parse_last_updated_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_updated_timestamp_)));
          set_has_last_updated_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.DataUsageBucket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.DataUsageBucket)
  return false;
#undef DO_
}

void DataUsageBucket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.DataUsageBucket)
  // repeated .data_reduction_proxy.PerConnectionDataUsage connection_usage = 1;
  for (unsigned int i = 0, n = this->connection_usage_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->connection_usage(i), output);
  }

  // optional int64 last_updated_timestamp = 2;
  if (has_last_updated_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->last_updated_timestamp(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.DataUsageBucket)
}

int DataUsageBucket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.DataUsageBucket)
  int total_size = 0;

  // optional int64 last_updated_timestamp = 2;
  if (has_last_updated_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->last_updated_timestamp());
  }

  // repeated .data_reduction_proxy.PerConnectionDataUsage connection_usage = 1;
  total_size += 1 * this->connection_usage_size();
  for (int i = 0; i < this->connection_usage_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->connection_usage(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataUsageBucket::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DataUsageBucket*>(&from));
}

void DataUsageBucket::MergeFrom(const DataUsageBucket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.DataUsageBucket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  connection_usage_.MergeFrom(from.connection_usage_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_last_updated_timestamp()) {
      set_last_updated_timestamp(from.last_updated_timestamp());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void DataUsageBucket::CopyFrom(const DataUsageBucket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.DataUsageBucket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataUsageBucket::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->connection_usage())) return false;
  return true;
}

void DataUsageBucket::Swap(DataUsageBucket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataUsageBucket::InternalSwap(DataUsageBucket* other) {
  connection_usage_.UnsafeArenaSwap(&other->connection_usage_);
  std::swap(last_updated_timestamp_, other->last_updated_timestamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DataUsageBucket::GetTypeName() const {
  return "data_reduction_proxy.DataUsageBucket";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataUsageBucket

// repeated .data_reduction_proxy.PerConnectionDataUsage connection_usage = 1;
int DataUsageBucket::connection_usage_size() const {
  return connection_usage_.size();
}
void DataUsageBucket::clear_connection_usage() {
  connection_usage_.Clear();
}
const ::data_reduction_proxy::PerConnectionDataUsage& DataUsageBucket::connection_usage(int index) const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.DataUsageBucket.connection_usage)
  return connection_usage_.Get(index);
}
::data_reduction_proxy::PerConnectionDataUsage* DataUsageBucket::mutable_connection_usage(int index) {
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.DataUsageBucket.connection_usage)
  return connection_usage_.Mutable(index);
}
::data_reduction_proxy::PerConnectionDataUsage* DataUsageBucket::add_connection_usage() {
  // @@protoc_insertion_point(field_add:data_reduction_proxy.DataUsageBucket.connection_usage)
  return connection_usage_.Add();
}
::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::PerConnectionDataUsage >*
DataUsageBucket::mutable_connection_usage() {
  // @@protoc_insertion_point(field_mutable_list:data_reduction_proxy.DataUsageBucket.connection_usage)
  return &connection_usage_;
}
const ::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::PerConnectionDataUsage >&
DataUsageBucket::connection_usage() const {
  // @@protoc_insertion_point(field_list:data_reduction_proxy.DataUsageBucket.connection_usage)
  return connection_usage_;
}

// optional int64 last_updated_timestamp = 2;
bool DataUsageBucket::has_last_updated_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DataUsageBucket::set_has_last_updated_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
void DataUsageBucket::clear_has_last_updated_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void DataUsageBucket::clear_last_updated_timestamp() {
  last_updated_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_last_updated_timestamp();
}
 ::google::protobuf::int64 DataUsageBucket::last_updated_timestamp() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.DataUsageBucket.last_updated_timestamp)
  return last_updated_timestamp_;
}
 void DataUsageBucket::set_last_updated_timestamp(::google::protobuf::int64 value) {
  set_has_last_updated_timestamp();
  last_updated_timestamp_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.DataUsageBucket.last_updated_timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForPerConnectionDataUsage(
    PerConnectionDataUsage* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerConnectionDataUsage::kSiteUsageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerConnectionDataUsage::PerConnectionDataUsage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.PerConnectionDataUsage)
}

void PerConnectionDataUsage::InitAsDefaultInstance() {
}

PerConnectionDataUsage::PerConnectionDataUsage(const PerConnectionDataUsage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.PerConnectionDataUsage)
}

void PerConnectionDataUsage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PerConnectionDataUsage::~PerConnectionDataUsage() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.PerConnectionDataUsage)
  SharedDtor();
}

void PerConnectionDataUsage::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void PerConnectionDataUsage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PerConnectionDataUsage& PerConnectionDataUsage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_data_5fstore_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_data_5fstore_2eproto();
#endif
  return *default_instance_;
}

PerConnectionDataUsage* PerConnectionDataUsage::default_instance_ = NULL;

PerConnectionDataUsage* PerConnectionDataUsage::New(::google::protobuf::Arena* arena) const {
  PerConnectionDataUsage* n = new PerConnectionDataUsage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerConnectionDataUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.PerConnectionDataUsage)
  site_usage_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PerConnectionDataUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForPerConnectionDataUsage, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.PerConnectionDataUsage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .data_reduction_proxy.PerSiteDataUsage site_usage = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_site_usage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_site_usage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_site_usage;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.PerConnectionDataUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.PerConnectionDataUsage)
  return false;
#undef DO_
}

void PerConnectionDataUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.PerConnectionDataUsage)
  // repeated .data_reduction_proxy.PerSiteDataUsage site_usage = 1;
  for (unsigned int i = 0, n = this->site_usage_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->site_usage(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.PerConnectionDataUsage)
}

int PerConnectionDataUsage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.PerConnectionDataUsage)
  int total_size = 0;

  // repeated .data_reduction_proxy.PerSiteDataUsage site_usage = 1;
  total_size += 1 * this->site_usage_size();
  for (int i = 0; i < this->site_usage_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->site_usage(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerConnectionDataUsage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PerConnectionDataUsage*>(&from));
}

void PerConnectionDataUsage::MergeFrom(const PerConnectionDataUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.PerConnectionDataUsage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  site_usage_.MergeFrom(from.site_usage_);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void PerConnectionDataUsage::CopyFrom(const PerConnectionDataUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.PerConnectionDataUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerConnectionDataUsage::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->site_usage())) return false;
  return true;
}

void PerConnectionDataUsage::Swap(PerConnectionDataUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerConnectionDataUsage::InternalSwap(PerConnectionDataUsage* other) {
  site_usage_.UnsafeArenaSwap(&other->site_usage_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PerConnectionDataUsage::GetTypeName() const {
  return "data_reduction_proxy.PerConnectionDataUsage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PerConnectionDataUsage

// repeated .data_reduction_proxy.PerSiteDataUsage site_usage = 1;
int PerConnectionDataUsage::site_usage_size() const {
  return site_usage_.size();
}
void PerConnectionDataUsage::clear_site_usage() {
  site_usage_.Clear();
}
const ::data_reduction_proxy::PerSiteDataUsage& PerConnectionDataUsage::site_usage(int index) const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.PerConnectionDataUsage.site_usage)
  return site_usage_.Get(index);
}
::data_reduction_proxy::PerSiteDataUsage* PerConnectionDataUsage::mutable_site_usage(int index) {
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.PerConnectionDataUsage.site_usage)
  return site_usage_.Mutable(index);
}
::data_reduction_proxy::PerSiteDataUsage* PerConnectionDataUsage::add_site_usage() {
  // @@protoc_insertion_point(field_add:data_reduction_proxy.PerConnectionDataUsage.site_usage)
  return site_usage_.Add();
}
::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::PerSiteDataUsage >*
PerConnectionDataUsage::mutable_site_usage() {
  // @@protoc_insertion_point(field_mutable_list:data_reduction_proxy.PerConnectionDataUsage.site_usage)
  return &site_usage_;
}
const ::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::PerSiteDataUsage >&
PerConnectionDataUsage::site_usage() const {
  // @@protoc_insertion_point(field_list:data_reduction_proxy.PerConnectionDataUsage.site_usage)
  return site_usage_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForPerSiteDataUsage(
    PerSiteDataUsage* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerSiteDataUsage::kHostnameFieldNumber;
const int PerSiteDataUsage::kDataUsedFieldNumber;
const int PerSiteDataUsage::kOriginalSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerSiteDataUsage::PerSiteDataUsage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.PerSiteDataUsage)
}

void PerSiteDataUsage::InitAsDefaultInstance() {
}

PerSiteDataUsage::PerSiteDataUsage(const PerSiteDataUsage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.PerSiteDataUsage)
}

void PerSiteDataUsage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_used_ = GOOGLE_LONGLONG(0);
  original_size_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PerSiteDataUsage::~PerSiteDataUsage() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.PerSiteDataUsage)
  SharedDtor();
}

void PerSiteDataUsage::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void PerSiteDataUsage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PerSiteDataUsage& PerSiteDataUsage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_data_5fstore_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_data_5fstore_2eproto();
#endif
  return *default_instance_;
}

PerSiteDataUsage* PerSiteDataUsage::default_instance_ = NULL;

PerSiteDataUsage* PerSiteDataUsage::New(::google::protobuf::Arena* arena) const {
  PerSiteDataUsage* n = new PerSiteDataUsage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerSiteDataUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.PerSiteDataUsage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PerSiteDataUsage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PerSiteDataUsage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(data_used_, original_size_);
    if (has_hostname()) {
      hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PerSiteDataUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForPerSiteDataUsage, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.PerSiteDataUsage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string hostname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_data_used;
        break;
      }

      // required int64 data_used = 2;
      case 2: {
        if (tag == 16) {
         parse_data_used:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_used_)));
          set_has_data_used();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_original_size;
        break;
      }

      // required int64 original_size = 3;
      case 3: {
        if (tag == 24) {
         parse_original_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &original_size_)));
          set_has_original_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.PerSiteDataUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.PerSiteDataUsage)
  return false;
#undef DO_
}

void PerSiteDataUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.PerSiteDataUsage)
  // required string hostname = 1;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hostname(), output);
  }

  // required int64 data_used = 2;
  if (has_data_used()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->data_used(), output);
  }

  // required int64 original_size = 3;
  if (has_original_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->original_size(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.PerSiteDataUsage)
}

int PerSiteDataUsage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:data_reduction_proxy.PerSiteDataUsage)
  int total_size = 0;

  if (has_hostname()) {
    // required string hostname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());
  }

  if (has_data_used()) {
    // required int64 data_used = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->data_used());
  }

  if (has_original_size()) {
    // required int64 original_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->original_size());
  }

  return total_size;
}
int PerSiteDataUsage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.PerSiteDataUsage)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string hostname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());

    // required int64 data_used = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->data_used());

    // required int64 original_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->original_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerSiteDataUsage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PerSiteDataUsage*>(&from));
}

void PerSiteDataUsage::MergeFrom(const PerSiteDataUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.PerSiteDataUsage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hostname()) {
      set_has_hostname();
      hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
    }
    if (from.has_data_used()) {
      set_data_used(from.data_used());
    }
    if (from.has_original_size()) {
      set_original_size(from.original_size());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void PerSiteDataUsage::CopyFrom(const PerSiteDataUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.PerSiteDataUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerSiteDataUsage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PerSiteDataUsage::Swap(PerSiteDataUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerSiteDataUsage::InternalSwap(PerSiteDataUsage* other) {
  hostname_.Swap(&other->hostname_);
  std::swap(data_used_, other->data_used_);
  std::swap(original_size_, other->original_size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PerSiteDataUsage::GetTypeName() const {
  return "data_reduction_proxy.PerSiteDataUsage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PerSiteDataUsage

// required string hostname = 1;
bool PerSiteDataUsage::has_hostname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PerSiteDataUsage::set_has_hostname() {
  _has_bits_[0] |= 0x00000001u;
}
void PerSiteDataUsage::clear_has_hostname() {
  _has_bits_[0] &= ~0x00000001u;
}
void PerSiteDataUsage::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hostname();
}
 const ::std::string& PerSiteDataUsage::hostname() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.PerSiteDataUsage.hostname)
  return hostname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PerSiteDataUsage::set_hostname(const ::std::string& value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.PerSiteDataUsage.hostname)
}
 void PerSiteDataUsage::set_hostname(const char* value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.PerSiteDataUsage.hostname)
}
 void PerSiteDataUsage::set_hostname(const char* value, size_t size) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.PerSiteDataUsage.hostname)
}
 ::std::string* PerSiteDataUsage::mutable_hostname() {
  set_has_hostname();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.PerSiteDataUsage.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PerSiteDataUsage::release_hostname() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.PerSiteDataUsage.hostname)
  clear_has_hostname();
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PerSiteDataUsage::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    set_has_hostname();
  } else {
    clear_has_hostname();
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.PerSiteDataUsage.hostname)
}

// required int64 data_used = 2;
bool PerSiteDataUsage::has_data_used() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PerSiteDataUsage::set_has_data_used() {
  _has_bits_[0] |= 0x00000002u;
}
void PerSiteDataUsage::clear_has_data_used() {
  _has_bits_[0] &= ~0x00000002u;
}
void PerSiteDataUsage::clear_data_used() {
  data_used_ = GOOGLE_LONGLONG(0);
  clear_has_data_used();
}
 ::google::protobuf::int64 PerSiteDataUsage::data_used() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.PerSiteDataUsage.data_used)
  return data_used_;
}
 void PerSiteDataUsage::set_data_used(::google::protobuf::int64 value) {
  set_has_data_used();
  data_used_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.PerSiteDataUsage.data_used)
}

// required int64 original_size = 3;
bool PerSiteDataUsage::has_original_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PerSiteDataUsage::set_has_original_size() {
  _has_bits_[0] |= 0x00000004u;
}
void PerSiteDataUsage::clear_has_original_size() {
  _has_bits_[0] &= ~0x00000004u;
}
void PerSiteDataUsage::clear_original_size() {
  original_size_ = GOOGLE_LONGLONG(0);
  clear_has_original_size();
}
 ::google::protobuf::int64 PerSiteDataUsage::original_size() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.PerSiteDataUsage.original_size)
  return original_size_;
}
 void PerSiteDataUsage::set_original_size(::google::protobuf::int64 value) {
  set_has_original_size();
  original_size_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.PerSiteDataUsage.original_size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace data_reduction_proxy

// @@protoc_insertion_point(global_scope)
