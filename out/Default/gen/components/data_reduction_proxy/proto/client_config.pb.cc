// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace data_reduction_proxy {

void protobuf_ShutdownFile_client_5fconfig_2eproto() {
  delete ClientConfig::default_instance_;
  delete PageloadMetricsConfig::default_instance_;
  delete Timestamp::default_instance_;
  delete Duration::default_instance_;
  delete ProxyConfig::default_instance_;
  delete ProxyServer::default_instance_;
  delete CreateClientConfigRequest::default_instance_;
  delete VersionInfo::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_client_5fconfig_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_client_5fconfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ClientConfig::default_instance_ = new ClientConfig();
  PageloadMetricsConfig::default_instance_ = new PageloadMetricsConfig();
  Timestamp::default_instance_ = new Timestamp();
  Duration::default_instance_ = new Duration();
  ProxyConfig::default_instance_ = new ProxyConfig();
  ProxyServer::default_instance_ = new ProxyServer();
  CreateClientConfigRequest::default_instance_ = new CreateClientConfigRequest();
  VersionInfo::default_instance_ = new VersionInfo();
  ClientConfig::default_instance_->InitAsDefaultInstance();
  PageloadMetricsConfig::default_instance_->InitAsDefaultInstance();
  Timestamp::default_instance_->InitAsDefaultInstance();
  Duration::default_instance_->InitAsDefaultInstance();
  ProxyConfig::default_instance_->InitAsDefaultInstance();
  ProxyServer::default_instance_->InitAsDefaultInstance();
  CreateClientConfigRequest::default_instance_->InitAsDefaultInstance();
  VersionInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_client_5fconfig_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_client_5fconfig_2eproto_once_);
void protobuf_AddDesc_client_5fconfig_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_client_5fconfig_2eproto_once_,
                 &protobuf_AddDesc_client_5fconfig_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_client_5fconfig_2eproto {
  StaticDescriptorInitializer_client_5fconfig_2eproto() {
    protobuf_AddDesc_client_5fconfig_2eproto();
  }
} static_descriptor_initializer_client_5fconfig_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

static ::std::string* MutableUnknownFieldsForClientConfig(
    ClientConfig* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConfig::kSessionKeyFieldNumber;
const int ClientConfig::kRefreshTimeFieldNumber;
const int ClientConfig::kProxyConfigFieldNumber;
const int ClientConfig::kRefreshDurationFieldNumber;
const int ClientConfig::kPageloadMetricsConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientConfig::ClientConfig()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.ClientConfig)
}

void ClientConfig::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  refresh_time_ = const_cast< ::data_reduction_proxy::Timestamp*>(
      ::data_reduction_proxy::Timestamp::internal_default_instance());
#else
  refresh_time_ = const_cast< ::data_reduction_proxy::Timestamp*>(&::data_reduction_proxy::Timestamp::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  proxy_config_ = const_cast< ::data_reduction_proxy::ProxyConfig*>(
      ::data_reduction_proxy::ProxyConfig::internal_default_instance());
#else
  proxy_config_ = const_cast< ::data_reduction_proxy::ProxyConfig*>(&::data_reduction_proxy::ProxyConfig::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  refresh_duration_ = const_cast< ::data_reduction_proxy::Duration*>(
      ::data_reduction_proxy::Duration::internal_default_instance());
#else
  refresh_duration_ = const_cast< ::data_reduction_proxy::Duration*>(&::data_reduction_proxy::Duration::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  pageload_metrics_config_ = const_cast< ::data_reduction_proxy::PageloadMetricsConfig*>(
      ::data_reduction_proxy::PageloadMetricsConfig::internal_default_instance());
#else
  pageload_metrics_config_ = const_cast< ::data_reduction_proxy::PageloadMetricsConfig*>(&::data_reduction_proxy::PageloadMetricsConfig::default_instance());
#endif
}

ClientConfig::ClientConfig(const ClientConfig& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.ClientConfig)
}

void ClientConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refresh_time_ = NULL;
  proxy_config_ = NULL;
  refresh_duration_ = NULL;
  pageload_metrics_config_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientConfig::~ClientConfig() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.ClientConfig)
  SharedDtor();
}

void ClientConfig::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete refresh_time_;
    delete proxy_config_;
    delete refresh_duration_;
    delete pageload_metrics_config_;
  }
}

void ClientConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ClientConfig& ClientConfig::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_client_5fconfig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fconfig_2eproto();
#endif
  return *default_instance_;
}

ClientConfig* ClientConfig::default_instance_ = NULL;

ClientConfig* ClientConfig::New(::google::protobuf::Arena* arena) const {
  ClientConfig* n = new ClientConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.ClientConfig)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_session_key()) {
      session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_refresh_time()) {
      if (refresh_time_ != NULL) refresh_time_->::data_reduction_proxy::Timestamp::Clear();
    }
    if (has_proxy_config()) {
      if (proxy_config_ != NULL) proxy_config_->::data_reduction_proxy::ProxyConfig::Clear();
    }
    if (has_refresh_duration()) {
      if (refresh_duration_ != NULL) refresh_duration_->::data_reduction_proxy::Duration::Clear();
    }
    if (has_pageload_metrics_config()) {
      if (pageload_metrics_config_ != NULL) pageload_metrics_config_->::data_reduction_proxy::PageloadMetricsConfig::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ClientConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForClientConfig, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.ClientConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string session_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_refresh_time;
        break;
      }

      // optional .data_reduction_proxy.Timestamp refresh_time = 2;
      case 2: {
        if (tag == 18) {
         parse_refresh_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refresh_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_proxy_config;
        break;
      }

      // optional .data_reduction_proxy.ProxyConfig proxy_config = 3;
      case 3: {
        if (tag == 26) {
         parse_proxy_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proxy_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_refresh_duration;
        break;
      }

      // optional .data_reduction_proxy.Duration refresh_duration = 4;
      case 4: {
        if (tag == 34) {
         parse_refresh_duration:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refresh_duration()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_pageload_metrics_config;
        break;
      }

      // optional .data_reduction_proxy.PageloadMetricsConfig pageload_metrics_config = 5;
      case 5: {
        if (tag == 42) {
         parse_pageload_metrics_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pageload_metrics_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.ClientConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.ClientConfig)
  return false;
#undef DO_
}

void ClientConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.ClientConfig)
  // optional string session_key = 1;
  if (has_session_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_key(), output);
  }

  // optional .data_reduction_proxy.Timestamp refresh_time = 2;
  if (has_refresh_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->refresh_time_, output);
  }

  // optional .data_reduction_proxy.ProxyConfig proxy_config = 3;
  if (has_proxy_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->proxy_config_, output);
  }

  // optional .data_reduction_proxy.Duration refresh_duration = 4;
  if (has_refresh_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *this->refresh_duration_, output);
  }

  // optional .data_reduction_proxy.PageloadMetricsConfig pageload_metrics_config = 5;
  if (has_pageload_metrics_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *this->pageload_metrics_config_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.ClientConfig)
}

int ClientConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.ClientConfig)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional string session_key = 1;
    if (has_session_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->session_key());
    }

    // optional .data_reduction_proxy.Timestamp refresh_time = 2;
    if (has_refresh_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->refresh_time_);
    }

    // optional .data_reduction_proxy.ProxyConfig proxy_config = 3;
    if (has_proxy_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->proxy_config_);
    }

    // optional .data_reduction_proxy.Duration refresh_duration = 4;
    if (has_refresh_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->refresh_duration_);
    }

    // optional .data_reduction_proxy.PageloadMetricsConfig pageload_metrics_config = 5;
    if (has_pageload_metrics_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pageload_metrics_config_);
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ClientConfig*>(&from));
}

void ClientConfig::MergeFrom(const ClientConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.ClientConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_session_key()) {
      set_has_session_key();
      session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
    }
    if (from.has_refresh_time()) {
      mutable_refresh_time()->::data_reduction_proxy::Timestamp::MergeFrom(from.refresh_time());
    }
    if (from.has_proxy_config()) {
      mutable_proxy_config()->::data_reduction_proxy::ProxyConfig::MergeFrom(from.proxy_config());
    }
    if (from.has_refresh_duration()) {
      mutable_refresh_duration()->::data_reduction_proxy::Duration::MergeFrom(from.refresh_duration());
    }
    if (from.has_pageload_metrics_config()) {
      mutable_pageload_metrics_config()->::data_reduction_proxy::PageloadMetricsConfig::MergeFrom(from.pageload_metrics_config());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void ClientConfig::CopyFrom(const ClientConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.ClientConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientConfig::IsInitialized() const {

  return true;
}

void ClientConfig::Swap(ClientConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConfig::InternalSwap(ClientConfig* other) {
  session_key_.Swap(&other->session_key_);
  std::swap(refresh_time_, other->refresh_time_);
  std::swap(proxy_config_, other->proxy_config_);
  std::swap(refresh_duration_, other->refresh_duration_);
  std::swap(pageload_metrics_config_, other->pageload_metrics_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ClientConfig::GetTypeName() const {
  return "data_reduction_proxy.ClientConfig";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientConfig

// optional string session_key = 1;
bool ClientConfig::has_session_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ClientConfig::set_has_session_key() {
  _has_bits_[0] |= 0x00000001u;
}
void ClientConfig::clear_has_session_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void ClientConfig::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_session_key();
}
 const ::std::string& ClientConfig::session_key() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ClientConfig.session_key)
  return session_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ClientConfig::set_session_key(const ::std::string& value) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.ClientConfig.session_key)
}
 void ClientConfig::set_session_key(const char* value) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.ClientConfig.session_key)
}
 void ClientConfig::set_session_key(const char* value, size_t size) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.ClientConfig.session_key)
}
 ::std::string* ClientConfig::mutable_session_key() {
  set_has_session_key();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ClientConfig.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ClientConfig::release_session_key() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ClientConfig.session_key)
  clear_has_session_key();
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ClientConfig::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    set_has_session_key();
  } else {
    clear_has_session_key();
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ClientConfig.session_key)
}

// optional .data_reduction_proxy.Timestamp refresh_time = 2;
bool ClientConfig::has_refresh_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ClientConfig::set_has_refresh_time() {
  _has_bits_[0] |= 0x00000002u;
}
void ClientConfig::clear_has_refresh_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void ClientConfig::clear_refresh_time() {
  if (refresh_time_ != NULL) refresh_time_->::data_reduction_proxy::Timestamp::Clear();
  clear_has_refresh_time();
}
const ::data_reduction_proxy::Timestamp& ClientConfig::refresh_time() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ClientConfig.refresh_time)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return refresh_time_ != NULL ? *refresh_time_ : *default_instance().refresh_time_;
#else
  return refresh_time_ != NULL ? *refresh_time_ : *default_instance_->refresh_time_;
#endif
}
::data_reduction_proxy::Timestamp* ClientConfig::mutable_refresh_time() {
  set_has_refresh_time();
  if (refresh_time_ == NULL) {
    refresh_time_ = new ::data_reduction_proxy::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ClientConfig.refresh_time)
  return refresh_time_;
}
::data_reduction_proxy::Timestamp* ClientConfig::release_refresh_time() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ClientConfig.refresh_time)
  clear_has_refresh_time();
  ::data_reduction_proxy::Timestamp* temp = refresh_time_;
  refresh_time_ = NULL;
  return temp;
}
void ClientConfig::set_allocated_refresh_time(::data_reduction_proxy::Timestamp* refresh_time) {
  delete refresh_time_;
  refresh_time_ = refresh_time;
  if (refresh_time) {
    set_has_refresh_time();
  } else {
    clear_has_refresh_time();
  }
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ClientConfig.refresh_time)
}

// optional .data_reduction_proxy.ProxyConfig proxy_config = 3;
bool ClientConfig::has_proxy_config() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ClientConfig::set_has_proxy_config() {
  _has_bits_[0] |= 0x00000004u;
}
void ClientConfig::clear_has_proxy_config() {
  _has_bits_[0] &= ~0x00000004u;
}
void ClientConfig::clear_proxy_config() {
  if (proxy_config_ != NULL) proxy_config_->::data_reduction_proxy::ProxyConfig::Clear();
  clear_has_proxy_config();
}
const ::data_reduction_proxy::ProxyConfig& ClientConfig::proxy_config() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ClientConfig.proxy_config)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return proxy_config_ != NULL ? *proxy_config_ : *default_instance().proxy_config_;
#else
  return proxy_config_ != NULL ? *proxy_config_ : *default_instance_->proxy_config_;
#endif
}
::data_reduction_proxy::ProxyConfig* ClientConfig::mutable_proxy_config() {
  set_has_proxy_config();
  if (proxy_config_ == NULL) {
    proxy_config_ = new ::data_reduction_proxy::ProxyConfig;
  }
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ClientConfig.proxy_config)
  return proxy_config_;
}
::data_reduction_proxy::ProxyConfig* ClientConfig::release_proxy_config() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ClientConfig.proxy_config)
  clear_has_proxy_config();
  ::data_reduction_proxy::ProxyConfig* temp = proxy_config_;
  proxy_config_ = NULL;
  return temp;
}
void ClientConfig::set_allocated_proxy_config(::data_reduction_proxy::ProxyConfig* proxy_config) {
  delete proxy_config_;
  proxy_config_ = proxy_config;
  if (proxy_config) {
    set_has_proxy_config();
  } else {
    clear_has_proxy_config();
  }
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ClientConfig.proxy_config)
}

// optional .data_reduction_proxy.Duration refresh_duration = 4;
bool ClientConfig::has_refresh_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ClientConfig::set_has_refresh_duration() {
  _has_bits_[0] |= 0x00000008u;
}
void ClientConfig::clear_has_refresh_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
void ClientConfig::clear_refresh_duration() {
  if (refresh_duration_ != NULL) refresh_duration_->::data_reduction_proxy::Duration::Clear();
  clear_has_refresh_duration();
}
const ::data_reduction_proxy::Duration& ClientConfig::refresh_duration() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ClientConfig.refresh_duration)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return refresh_duration_ != NULL ? *refresh_duration_ : *default_instance().refresh_duration_;
#else
  return refresh_duration_ != NULL ? *refresh_duration_ : *default_instance_->refresh_duration_;
#endif
}
::data_reduction_proxy::Duration* ClientConfig::mutable_refresh_duration() {
  set_has_refresh_duration();
  if (refresh_duration_ == NULL) {
    refresh_duration_ = new ::data_reduction_proxy::Duration;
  }
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ClientConfig.refresh_duration)
  return refresh_duration_;
}
::data_reduction_proxy::Duration* ClientConfig::release_refresh_duration() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ClientConfig.refresh_duration)
  clear_has_refresh_duration();
  ::data_reduction_proxy::Duration* temp = refresh_duration_;
  refresh_duration_ = NULL;
  return temp;
}
void ClientConfig::set_allocated_refresh_duration(::data_reduction_proxy::Duration* refresh_duration) {
  delete refresh_duration_;
  refresh_duration_ = refresh_duration;
  if (refresh_duration) {
    set_has_refresh_duration();
  } else {
    clear_has_refresh_duration();
  }
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ClientConfig.refresh_duration)
}

// optional .data_reduction_proxy.PageloadMetricsConfig pageload_metrics_config = 5;
bool ClientConfig::has_pageload_metrics_config() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ClientConfig::set_has_pageload_metrics_config() {
  _has_bits_[0] |= 0x00000010u;
}
void ClientConfig::clear_has_pageload_metrics_config() {
  _has_bits_[0] &= ~0x00000010u;
}
void ClientConfig::clear_pageload_metrics_config() {
  if (pageload_metrics_config_ != NULL) pageload_metrics_config_->::data_reduction_proxy::PageloadMetricsConfig::Clear();
  clear_has_pageload_metrics_config();
}
const ::data_reduction_proxy::PageloadMetricsConfig& ClientConfig::pageload_metrics_config() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ClientConfig.pageload_metrics_config)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return pageload_metrics_config_ != NULL ? *pageload_metrics_config_ : *default_instance().pageload_metrics_config_;
#else
  return pageload_metrics_config_ != NULL ? *pageload_metrics_config_ : *default_instance_->pageload_metrics_config_;
#endif
}
::data_reduction_proxy::PageloadMetricsConfig* ClientConfig::mutable_pageload_metrics_config() {
  set_has_pageload_metrics_config();
  if (pageload_metrics_config_ == NULL) {
    pageload_metrics_config_ = new ::data_reduction_proxy::PageloadMetricsConfig;
  }
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ClientConfig.pageload_metrics_config)
  return pageload_metrics_config_;
}
::data_reduction_proxy::PageloadMetricsConfig* ClientConfig::release_pageload_metrics_config() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ClientConfig.pageload_metrics_config)
  clear_has_pageload_metrics_config();
  ::data_reduction_proxy::PageloadMetricsConfig* temp = pageload_metrics_config_;
  pageload_metrics_config_ = NULL;
  return temp;
}
void ClientConfig::set_allocated_pageload_metrics_config(::data_reduction_proxy::PageloadMetricsConfig* pageload_metrics_config) {
  delete pageload_metrics_config_;
  pageload_metrics_config_ = pageload_metrics_config;
  if (pageload_metrics_config) {
    set_has_pageload_metrics_config();
  } else {
    clear_has_pageload_metrics_config();
  }
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ClientConfig.pageload_metrics_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForPageloadMetricsConfig(
    PageloadMetricsConfig* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PageloadMetricsConfig::kReportingFractionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PageloadMetricsConfig::PageloadMetricsConfig()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.PageloadMetricsConfig)
}

void PageloadMetricsConfig::InitAsDefaultInstance() {
}

PageloadMetricsConfig::PageloadMetricsConfig(const PageloadMetricsConfig& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.PageloadMetricsConfig)
}

void PageloadMetricsConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reporting_fraction_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PageloadMetricsConfig::~PageloadMetricsConfig() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.PageloadMetricsConfig)
  SharedDtor();
}

void PageloadMetricsConfig::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void PageloadMetricsConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PageloadMetricsConfig& PageloadMetricsConfig::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_client_5fconfig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fconfig_2eproto();
#endif
  return *default_instance_;
}

PageloadMetricsConfig* PageloadMetricsConfig::default_instance_ = NULL;

PageloadMetricsConfig* PageloadMetricsConfig::New(::google::protobuf::Arena* arena) const {
  PageloadMetricsConfig* n = new PageloadMetricsConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PageloadMetricsConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.PageloadMetricsConfig)
  reporting_fraction_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PageloadMetricsConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForPageloadMetricsConfig, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.PageloadMetricsConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float reporting_fraction = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reporting_fraction_)));
          set_has_reporting_fraction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.PageloadMetricsConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.PageloadMetricsConfig)
  return false;
#undef DO_
}

void PageloadMetricsConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.PageloadMetricsConfig)
  // optional float reporting_fraction = 1;
  if (has_reporting_fraction()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->reporting_fraction(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.PageloadMetricsConfig)
}

int PageloadMetricsConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.PageloadMetricsConfig)
  int total_size = 0;

  // optional float reporting_fraction = 1;
  if (has_reporting_fraction()) {
    total_size += 1 + 4;
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PageloadMetricsConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PageloadMetricsConfig*>(&from));
}

void PageloadMetricsConfig::MergeFrom(const PageloadMetricsConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.PageloadMetricsConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reporting_fraction()) {
      set_reporting_fraction(from.reporting_fraction());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void PageloadMetricsConfig::CopyFrom(const PageloadMetricsConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.PageloadMetricsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PageloadMetricsConfig::IsInitialized() const {

  return true;
}

void PageloadMetricsConfig::Swap(PageloadMetricsConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PageloadMetricsConfig::InternalSwap(PageloadMetricsConfig* other) {
  std::swap(reporting_fraction_, other->reporting_fraction_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PageloadMetricsConfig::GetTypeName() const {
  return "data_reduction_proxy.PageloadMetricsConfig";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PageloadMetricsConfig

// optional float reporting_fraction = 1;
bool PageloadMetricsConfig::has_reporting_fraction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PageloadMetricsConfig::set_has_reporting_fraction() {
  _has_bits_[0] |= 0x00000001u;
}
void PageloadMetricsConfig::clear_has_reporting_fraction() {
  _has_bits_[0] &= ~0x00000001u;
}
void PageloadMetricsConfig::clear_reporting_fraction() {
  reporting_fraction_ = 0;
  clear_has_reporting_fraction();
}
 float PageloadMetricsConfig::reporting_fraction() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.PageloadMetricsConfig.reporting_fraction)
  return reporting_fraction_;
}
 void PageloadMetricsConfig::set_reporting_fraction(float value) {
  set_has_reporting_fraction();
  reporting_fraction_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.PageloadMetricsConfig.reporting_fraction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForTimestamp(
    Timestamp* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timestamp::kSecondsFieldNumber;
const int Timestamp::kNanosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timestamp::Timestamp()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.Timestamp)
}

void Timestamp::InitAsDefaultInstance() {
}

Timestamp::Timestamp(const Timestamp& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.Timestamp)
}

void Timestamp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seconds_ = GOOGLE_LONGLONG(0);
  nanos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Timestamp::~Timestamp() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.Timestamp)
  SharedDtor();
}

void Timestamp::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Timestamp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Timestamp& Timestamp::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_client_5fconfig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fconfig_2eproto();
#endif
  return *default_instance_;
}

Timestamp* Timestamp::default_instance_ = NULL;

Timestamp* Timestamp::New(::google::protobuf::Arena* arena) const {
  Timestamp* n = new Timestamp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Timestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.Timestamp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Timestamp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Timestamp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seconds_, nanos_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Timestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForTimestamp, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.Timestamp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 seconds = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seconds_)));
          set_has_seconds();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nanos;
        break;
      }

      // optional int32 nanos = 2;
      case 2: {
        if (tag == 16) {
         parse_nanos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nanos_)));
          set_has_nanos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.Timestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.Timestamp)
  return false;
#undef DO_
}

void Timestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.Timestamp)
  // optional int64 seconds = 1;
  if (has_seconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seconds(), output);
  }

  // optional int32 nanos = 2;
  if (has_nanos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nanos(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.Timestamp)
}

int Timestamp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.Timestamp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 seconds = 1;
    if (has_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->seconds());
    }

    // optional int32 nanos = 2;
    if (has_nanos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nanos());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Timestamp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Timestamp*>(&from));
}

void Timestamp::MergeFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.Timestamp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seconds()) {
      set_seconds(from.seconds());
    }
    if (from.has_nanos()) {
      set_nanos(from.nanos());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Timestamp::CopyFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timestamp::IsInitialized() const {

  return true;
}

void Timestamp::Swap(Timestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timestamp::InternalSwap(Timestamp* other) {
  std::swap(seconds_, other->seconds_);
  std::swap(nanos_, other->nanos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Timestamp::GetTypeName() const {
  return "data_reduction_proxy.Timestamp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Timestamp

// optional int64 seconds = 1;
bool Timestamp::has_seconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Timestamp::set_has_seconds() {
  _has_bits_[0] |= 0x00000001u;
}
void Timestamp::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000001u;
}
void Timestamp::clear_seconds() {
  seconds_ = GOOGLE_LONGLONG(0);
  clear_has_seconds();
}
 ::google::protobuf::int64 Timestamp::seconds() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.Timestamp.seconds)
  return seconds_;
}
 void Timestamp::set_seconds(::google::protobuf::int64 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.Timestamp.seconds)
}

// optional int32 nanos = 2;
bool Timestamp::has_nanos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Timestamp::set_has_nanos() {
  _has_bits_[0] |= 0x00000002u;
}
void Timestamp::clear_has_nanos() {
  _has_bits_[0] &= ~0x00000002u;
}
void Timestamp::clear_nanos() {
  nanos_ = 0;
  clear_has_nanos();
}
 ::google::protobuf::int32 Timestamp::nanos() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.Timestamp.nanos)
  return nanos_;
}
 void Timestamp::set_nanos(::google::protobuf::int32 value) {
  set_has_nanos();
  nanos_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.Timestamp.nanos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForDuration(
    Duration* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Duration::kSecondsFieldNumber;
const int Duration::kNanosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Duration::Duration()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.Duration)
}

void Duration::InitAsDefaultInstance() {
}

Duration::Duration(const Duration& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.Duration)
}

void Duration::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seconds_ = GOOGLE_LONGLONG(0);
  nanos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Duration::~Duration() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.Duration)
  SharedDtor();
}

void Duration::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Duration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Duration& Duration::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_client_5fconfig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fconfig_2eproto();
#endif
  return *default_instance_;
}

Duration* Duration::default_instance_ = NULL;

Duration* Duration::New(::google::protobuf::Arena* arena) const {
  Duration* n = new Duration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Duration::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.Duration)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Duration, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Duration*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seconds_, nanos_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Duration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForDuration, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.Duration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 seconds = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seconds_)));
          set_has_seconds();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nanos;
        break;
      }

      // optional int32 nanos = 2;
      case 2: {
        if (tag == 16) {
         parse_nanos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nanos_)));
          set_has_nanos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.Duration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.Duration)
  return false;
#undef DO_
}

void Duration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.Duration)
  // optional int64 seconds = 1;
  if (has_seconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seconds(), output);
  }

  // optional int32 nanos = 2;
  if (has_nanos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nanos(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.Duration)
}

int Duration::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.Duration)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 seconds = 1;
    if (has_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->seconds());
    }

    // optional int32 nanos = 2;
    if (has_nanos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nanos());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Duration::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Duration*>(&from));
}

void Duration::MergeFrom(const Duration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.Duration)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seconds()) {
      set_seconds(from.seconds());
    }
    if (from.has_nanos()) {
      set_nanos(from.nanos());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Duration::CopyFrom(const Duration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.Duration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Duration::IsInitialized() const {

  return true;
}

void Duration::Swap(Duration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Duration::InternalSwap(Duration* other) {
  std::swap(seconds_, other->seconds_);
  std::swap(nanos_, other->nanos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Duration::GetTypeName() const {
  return "data_reduction_proxy.Duration";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Duration

// optional int64 seconds = 1;
bool Duration::has_seconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Duration::set_has_seconds() {
  _has_bits_[0] |= 0x00000001u;
}
void Duration::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000001u;
}
void Duration::clear_seconds() {
  seconds_ = GOOGLE_LONGLONG(0);
  clear_has_seconds();
}
 ::google::protobuf::int64 Duration::seconds() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.Duration.seconds)
  return seconds_;
}
 void Duration::set_seconds(::google::protobuf::int64 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.Duration.seconds)
}

// optional int32 nanos = 2;
bool Duration::has_nanos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Duration::set_has_nanos() {
  _has_bits_[0] |= 0x00000002u;
}
void Duration::clear_has_nanos() {
  _has_bits_[0] &= ~0x00000002u;
}
void Duration::clear_nanos() {
  nanos_ = 0;
  clear_has_nanos();
}
 ::google::protobuf::int32 Duration::nanos() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.Duration.nanos)
  return nanos_;
}
 void Duration::set_nanos(::google::protobuf::int32 value) {
  set_has_nanos();
  nanos_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.Duration.nanos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForProxyConfig(
    ProxyConfig* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyConfig::kHttpProxyServersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProxyConfig::ProxyConfig()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.ProxyConfig)
}

void ProxyConfig::InitAsDefaultInstance() {
}

ProxyConfig::ProxyConfig(const ProxyConfig& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.ProxyConfig)
}

void ProxyConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyConfig::~ProxyConfig() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.ProxyConfig)
  SharedDtor();
}

void ProxyConfig::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ProxyConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ProxyConfig& ProxyConfig::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_client_5fconfig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fconfig_2eproto();
#endif
  return *default_instance_;
}

ProxyConfig* ProxyConfig::default_instance_ = NULL;

ProxyConfig* ProxyConfig::New(::google::protobuf::Arena* arena) const {
  ProxyConfig* n = new ProxyConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProxyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.ProxyConfig)
  http_proxy_servers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ProxyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForProxyConfig, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.ProxyConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .data_reduction_proxy.ProxyServer http_proxy_servers = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_http_proxy_servers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_http_proxy_servers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_http_proxy_servers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.ProxyConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.ProxyConfig)
  return false;
#undef DO_
}

void ProxyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.ProxyConfig)
  // repeated .data_reduction_proxy.ProxyServer http_proxy_servers = 1;
  for (unsigned int i = 0, n = this->http_proxy_servers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->http_proxy_servers(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.ProxyConfig)
}

int ProxyConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.ProxyConfig)
  int total_size = 0;

  // repeated .data_reduction_proxy.ProxyServer http_proxy_servers = 1;
  total_size += 1 * this->http_proxy_servers_size();
  for (int i = 0; i < this->http_proxy_servers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->http_proxy_servers(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProxyConfig*>(&from));
}

void ProxyConfig::MergeFrom(const ProxyConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.ProxyConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  http_proxy_servers_.MergeFrom(from.http_proxy_servers_);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void ProxyConfig::CopyFrom(const ProxyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.ProxyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyConfig::IsInitialized() const {

  return true;
}

void ProxyConfig::Swap(ProxyConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProxyConfig::InternalSwap(ProxyConfig* other) {
  http_proxy_servers_.UnsafeArenaSwap(&other->http_proxy_servers_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ProxyConfig::GetTypeName() const {
  return "data_reduction_proxy.ProxyConfig";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProxyConfig

// repeated .data_reduction_proxy.ProxyServer http_proxy_servers = 1;
int ProxyConfig::http_proxy_servers_size() const {
  return http_proxy_servers_.size();
}
void ProxyConfig::clear_http_proxy_servers() {
  http_proxy_servers_.Clear();
}
const ::data_reduction_proxy::ProxyServer& ProxyConfig::http_proxy_servers(int index) const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ProxyConfig.http_proxy_servers)
  return http_proxy_servers_.Get(index);
}
::data_reduction_proxy::ProxyServer* ProxyConfig::mutable_http_proxy_servers(int index) {
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ProxyConfig.http_proxy_servers)
  return http_proxy_servers_.Mutable(index);
}
::data_reduction_proxy::ProxyServer* ProxyConfig::add_http_proxy_servers() {
  // @@protoc_insertion_point(field_add:data_reduction_proxy.ProxyConfig.http_proxy_servers)
  return http_proxy_servers_.Add();
}
::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::ProxyServer >*
ProxyConfig::mutable_http_proxy_servers() {
  // @@protoc_insertion_point(field_mutable_list:data_reduction_proxy.ProxyConfig.http_proxy_servers)
  return &http_proxy_servers_;
}
const ::google::protobuf::RepeatedPtrField< ::data_reduction_proxy::ProxyServer >&
ProxyConfig::http_proxy_servers() const {
  // @@protoc_insertion_point(field_list:data_reduction_proxy.ProxyConfig.http_proxy_servers)
  return http_proxy_servers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForProxyServer(
    ProxyServer* ptr) {
  return ptr->mutable_unknown_fields();
}

bool ProxyServer_ProxyScheme_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProxyServer_ProxyScheme ProxyServer::UNSPECIFIED;
const ProxyServer_ProxyScheme ProxyServer::HTTP;
const ProxyServer_ProxyScheme ProxyServer::HTTPS;
const ProxyServer_ProxyScheme ProxyServer::QUIC;
const ProxyServer_ProxyScheme ProxyServer::ProxyScheme_MIN;
const ProxyServer_ProxyScheme ProxyServer::ProxyScheme_MAX;
const int ProxyServer::ProxyScheme_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyServer::kSchemeFieldNumber;
const int ProxyServer::kHostFieldNumber;
const int ProxyServer::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProxyServer::ProxyServer()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.ProxyServer)
}

void ProxyServer::InitAsDefaultInstance() {
}

ProxyServer::ProxyServer(const ProxyServer& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.ProxyServer)
}

void ProxyServer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scheme_ = 0;
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyServer::~ProxyServer() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.ProxyServer)
  SharedDtor();
}

void ProxyServer::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ProxyServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ProxyServer& ProxyServer::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_client_5fconfig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fconfig_2eproto();
#endif
  return *default_instance_;
}

ProxyServer* ProxyServer::default_instance_ = NULL;

ProxyServer* ProxyServer::New(::google::protobuf::Arena* arena) const {
  ProxyServer* n = new ProxyServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProxyServer::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.ProxyServer)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ProxyServer, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProxyServer*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(scheme_, port_);
    if (has_host()) {
      host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ProxyServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForProxyServer, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.ProxyServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .data_reduction_proxy.ProxyServer.ProxyScheme scheme = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::data_reduction_proxy::ProxyServer_ProxyScheme_IsValid(value)) {
            set_scheme(static_cast< ::data_reduction_proxy::ProxyServer_ProxyScheme >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host;
        break;
      }

      // optional string host = 2;
      case 2: {
        if (tag == 18) {
         parse_host:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_port;
        break;
      }

      // optional int32 port = 3;
      case 3: {
        if (tag == 24) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
          set_has_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.ProxyServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.ProxyServer)
  return false;
#undef DO_
}

void ProxyServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.ProxyServer)
  // optional .data_reduction_proxy.ProxyServer.ProxyScheme scheme = 1;
  if (has_scheme()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->scheme(), output);
  }

  // optional string host = 2;
  if (has_host()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // optional int32 port = 3;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.ProxyServer)
}

int ProxyServer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.ProxyServer)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional .data_reduction_proxy.ProxyServer.ProxyScheme scheme = 1;
    if (has_scheme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->scheme());
    }

    // optional string host = 2;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional int32 port = 3;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyServer::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProxyServer*>(&from));
}

void ProxyServer::MergeFrom(const ProxyServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.ProxyServer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scheme()) {
      set_scheme(from.scheme());
    }
    if (from.has_host()) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (from.has_port()) {
      set_port(from.port());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void ProxyServer::CopyFrom(const ProxyServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.ProxyServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyServer::IsInitialized() const {

  return true;
}

void ProxyServer::Swap(ProxyServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProxyServer::InternalSwap(ProxyServer* other) {
  std::swap(scheme_, other->scheme_);
  host_.Swap(&other->host_);
  std::swap(port_, other->port_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ProxyServer::GetTypeName() const {
  return "data_reduction_proxy.ProxyServer";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProxyServer

// optional .data_reduction_proxy.ProxyServer.ProxyScheme scheme = 1;
bool ProxyServer::has_scheme() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProxyServer::set_has_scheme() {
  _has_bits_[0] |= 0x00000001u;
}
void ProxyServer::clear_has_scheme() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProxyServer::clear_scheme() {
  scheme_ = 0;
  clear_has_scheme();
}
 ::data_reduction_proxy::ProxyServer_ProxyScheme ProxyServer::scheme() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ProxyServer.scheme)
  return static_cast< ::data_reduction_proxy::ProxyServer_ProxyScheme >(scheme_);
}
 void ProxyServer::set_scheme(::data_reduction_proxy::ProxyServer_ProxyScheme value) {
  assert(::data_reduction_proxy::ProxyServer_ProxyScheme_IsValid(value));
  set_has_scheme();
  scheme_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.ProxyServer.scheme)
}

// optional string host = 2;
bool ProxyServer::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProxyServer::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
void ProxyServer::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProxyServer::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
 const ::std::string& ProxyServer::host() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ProxyServer.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyServer::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.ProxyServer.host)
}
 void ProxyServer::set_host(const char* value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.ProxyServer.host)
}
 void ProxyServer::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.ProxyServer.host)
}
 ::std::string* ProxyServer::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.ProxyServer.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProxyServer::release_host() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.ProxyServer.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyServer::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.ProxyServer.host)
}

// optional int32 port = 3;
bool ProxyServer::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProxyServer::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
void ProxyServer::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProxyServer::clear_port() {
  port_ = 0;
  clear_has_port();
}
 ::google::protobuf::int32 ProxyServer::port() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.ProxyServer.port)
  return port_;
}
 void ProxyServer::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.ProxyServer.port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForCreateClientConfigRequest(
    CreateClientConfigRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClientConfigRequest::kSessionKeyFieldNumber;
const int CreateClientConfigRequest::kVersionInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClientConfigRequest::CreateClientConfigRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.CreateClientConfigRequest)
}

void CreateClientConfigRequest::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  version_info_ = const_cast< ::data_reduction_proxy::VersionInfo*>(
      ::data_reduction_proxy::VersionInfo::internal_default_instance());
#else
  version_info_ = const_cast< ::data_reduction_proxy::VersionInfo*>(&::data_reduction_proxy::VersionInfo::default_instance());
#endif
}

CreateClientConfigRequest::CreateClientConfigRequest(const CreateClientConfigRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.CreateClientConfigRequest)
}

void CreateClientConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateClientConfigRequest::~CreateClientConfigRequest() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.CreateClientConfigRequest)
  SharedDtor();
}

void CreateClientConfigRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete version_info_;
  }
}

void CreateClientConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CreateClientConfigRequest& CreateClientConfigRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_client_5fconfig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fconfig_2eproto();
#endif
  return *default_instance_;
}

CreateClientConfigRequest* CreateClientConfigRequest::default_instance_ = NULL;

CreateClientConfigRequest* CreateClientConfigRequest::New(::google::protobuf::Arena* arena) const {
  CreateClientConfigRequest* n = new CreateClientConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateClientConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.CreateClientConfigRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_session_key()) {
      session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_version_info()) {
      if (version_info_ != NULL) version_info_->::data_reduction_proxy::VersionInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CreateClientConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForCreateClientConfigRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.CreateClientConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string session_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_version_info;
        break;
      }

      // optional .data_reduction_proxy.VersionInfo version_info = 2;
      case 2: {
        if (tag == 18) {
         parse_version_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_version_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.CreateClientConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.CreateClientConfigRequest)
  return false;
#undef DO_
}

void CreateClientConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.CreateClientConfigRequest)
  // optional string session_key = 1;
  if (has_session_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_key(), output);
  }

  // optional .data_reduction_proxy.VersionInfo version_info = 2;
  if (has_version_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->version_info_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.CreateClientConfigRequest)
}

int CreateClientConfigRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.CreateClientConfigRequest)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string session_key = 1;
    if (has_session_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->session_key());
    }

    // optional .data_reduction_proxy.VersionInfo version_info = 2;
    if (has_version_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->version_info_);
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateClientConfigRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CreateClientConfigRequest*>(&from));
}

void CreateClientConfigRequest::MergeFrom(const CreateClientConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.CreateClientConfigRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_session_key()) {
      set_has_session_key();
      session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
    }
    if (from.has_version_info()) {
      mutable_version_info()->::data_reduction_proxy::VersionInfo::MergeFrom(from.version_info());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void CreateClientConfigRequest::CopyFrom(const CreateClientConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.CreateClientConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClientConfigRequest::IsInitialized() const {

  return true;
}

void CreateClientConfigRequest::Swap(CreateClientConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClientConfigRequest::InternalSwap(CreateClientConfigRequest* other) {
  session_key_.Swap(&other->session_key_);
  std::swap(version_info_, other->version_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CreateClientConfigRequest::GetTypeName() const {
  return "data_reduction_proxy.CreateClientConfigRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateClientConfigRequest

// optional string session_key = 1;
bool CreateClientConfigRequest::has_session_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateClientConfigRequest::set_has_session_key() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateClientConfigRequest::clear_has_session_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateClientConfigRequest::clear_session_key() {
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_session_key();
}
 const ::std::string& CreateClientConfigRequest::session_key() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.CreateClientConfigRequest.session_key)
  return session_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateClientConfigRequest::set_session_key(const ::std::string& value) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.CreateClientConfigRequest.session_key)
}
 void CreateClientConfigRequest::set_session_key(const char* value) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.CreateClientConfigRequest.session_key)
}
 void CreateClientConfigRequest::set_session_key(const char* value, size_t size) {
  set_has_session_key();
  session_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.CreateClientConfigRequest.session_key)
}
 ::std::string* CreateClientConfigRequest::mutable_session_key() {
  set_has_session_key();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.CreateClientConfigRequest.session_key)
  return session_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateClientConfigRequest::release_session_key() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.CreateClientConfigRequest.session_key)
  clear_has_session_key();
  return session_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateClientConfigRequest::set_allocated_session_key(::std::string* session_key) {
  if (session_key != NULL) {
    set_has_session_key();
  } else {
    clear_has_session_key();
  }
  session_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_key);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.CreateClientConfigRequest.session_key)
}

// optional .data_reduction_proxy.VersionInfo version_info = 2;
bool CreateClientConfigRequest::has_version_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateClientConfigRequest::set_has_version_info() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateClientConfigRequest::clear_has_version_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateClientConfigRequest::clear_version_info() {
  if (version_info_ != NULL) version_info_->::data_reduction_proxy::VersionInfo::Clear();
  clear_has_version_info();
}
const ::data_reduction_proxy::VersionInfo& CreateClientConfigRequest::version_info() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.CreateClientConfigRequest.version_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return version_info_ != NULL ? *version_info_ : *default_instance().version_info_;
#else
  return version_info_ != NULL ? *version_info_ : *default_instance_->version_info_;
#endif
}
::data_reduction_proxy::VersionInfo* CreateClientConfigRequest::mutable_version_info() {
  set_has_version_info();
  if (version_info_ == NULL) {
    version_info_ = new ::data_reduction_proxy::VersionInfo;
  }
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.CreateClientConfigRequest.version_info)
  return version_info_;
}
::data_reduction_proxy::VersionInfo* CreateClientConfigRequest::release_version_info() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.CreateClientConfigRequest.version_info)
  clear_has_version_info();
  ::data_reduction_proxy::VersionInfo* temp = version_info_;
  version_info_ = NULL;
  return temp;
}
void CreateClientConfigRequest::set_allocated_version_info(::data_reduction_proxy::VersionInfo* version_info) {
  delete version_info_;
  version_info_ = version_info;
  if (version_info) {
    set_has_version_info();
  } else {
    clear_has_version_info();
  }
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.CreateClientConfigRequest.version_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForVersionInfo(
    VersionInfo* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionInfo::kClientFieldNumber;
const int VersionInfo::kBuildFieldNumber;
const int VersionInfo::kPatchFieldNumber;
const int VersionInfo::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionInfo::VersionInfo()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:data_reduction_proxy.VersionInfo)
}

void VersionInfo::InitAsDefaultInstance() {
}

VersionInfo::VersionInfo(const VersionInfo& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:data_reduction_proxy.VersionInfo)
}

void VersionInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_ = 0;
  patch_ = 0;
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VersionInfo::~VersionInfo() {
  // @@protoc_insertion_point(destructor:data_reduction_proxy.VersionInfo)
  SharedDtor();
}

void VersionInfo::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void VersionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VersionInfo& VersionInfo::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_client_5fconfig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_client_5fconfig_2eproto();
#endif
  return *default_instance_;
}

VersionInfo* VersionInfo::default_instance_ = NULL;

VersionInfo* VersionInfo::New(::google::protobuf::Arena* arena) const {
  VersionInfo* n = new VersionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VersionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:data_reduction_proxy.VersionInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(VersionInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<VersionInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(build_, patch_);
    if (has_client()) {
      client_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_channel()) {
      channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool VersionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForVersionInfo, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:data_reduction_proxy.VersionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string client = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_build;
        break;
      }

      // optional int32 build = 2;
      case 2: {
        if (tag == 16) {
         parse_build:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &build_)));
          set_has_build();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_patch;
        break;
      }

      // optional int32 patch = 3;
      case 3: {
        if (tag == 24) {
         parse_patch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &patch_)));
          set_has_patch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_channel;
        break;
      }

      // optional string channel = 4;
      case 4: {
        if (tag == 34) {
         parse_channel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data_reduction_proxy.VersionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data_reduction_proxy.VersionInfo)
  return false;
#undef DO_
}

void VersionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data_reduction_proxy.VersionInfo)
  // optional string client = 1;
  if (has_client()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->client(), output);
  }

  // optional int32 build = 2;
  if (has_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->build(), output);
  }

  // optional int32 patch = 3;
  if (has_patch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->patch(), output);
  }

  // optional string channel = 4;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->channel(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:data_reduction_proxy.VersionInfo)
}

int VersionInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:data_reduction_proxy.VersionInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string client = 1;
    if (has_client()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->client());
    }

    // optional int32 build = 2;
    if (has_build()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->build());
    }

    // optional int32 patch = 3;
    if (has_patch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->patch());
    }

    // optional string channel = 4;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VersionInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VersionInfo*>(&from));
}

void VersionInfo::MergeFrom(const VersionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data_reduction_proxy.VersionInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_client()) {
      set_has_client();
      client_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_);
    }
    if (from.has_build()) {
      set_build(from.build());
    }
    if (from.has_patch()) {
      set_patch(from.patch());
    }
    if (from.has_channel()) {
      set_has_channel();
      channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void VersionInfo::CopyFrom(const VersionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data_reduction_proxy.VersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionInfo::IsInitialized() const {

  return true;
}

void VersionInfo::Swap(VersionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionInfo::InternalSwap(VersionInfo* other) {
  client_.Swap(&other->client_);
  std::swap(build_, other->build_);
  std::swap(patch_, other->patch_);
  channel_.Swap(&other->channel_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string VersionInfo::GetTypeName() const {
  return "data_reduction_proxy.VersionInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VersionInfo

// optional string client = 1;
bool VersionInfo::has_client() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VersionInfo::set_has_client() {
  _has_bits_[0] |= 0x00000001u;
}
void VersionInfo::clear_has_client() {
  _has_bits_[0] &= ~0x00000001u;
}
void VersionInfo::clear_client() {
  client_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client();
}
 const ::std::string& VersionInfo::client() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.VersionInfo.client)
  return client_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VersionInfo::set_client(const ::std::string& value) {
  set_has_client();
  client_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.VersionInfo.client)
}
 void VersionInfo::set_client(const char* value) {
  set_has_client();
  client_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.VersionInfo.client)
}
 void VersionInfo::set_client(const char* value, size_t size) {
  set_has_client();
  client_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.VersionInfo.client)
}
 ::std::string* VersionInfo::mutable_client() {
  set_has_client();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.VersionInfo.client)
  return client_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* VersionInfo::release_client() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.VersionInfo.client)
  clear_has_client();
  return client_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VersionInfo::set_allocated_client(::std::string* client) {
  if (client != NULL) {
    set_has_client();
  } else {
    clear_has_client();
  }
  client_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.VersionInfo.client)
}

// optional int32 build = 2;
bool VersionInfo::has_build() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VersionInfo::set_has_build() {
  _has_bits_[0] |= 0x00000002u;
}
void VersionInfo::clear_has_build() {
  _has_bits_[0] &= ~0x00000002u;
}
void VersionInfo::clear_build() {
  build_ = 0;
  clear_has_build();
}
 ::google::protobuf::int32 VersionInfo::build() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.VersionInfo.build)
  return build_;
}
 void VersionInfo::set_build(::google::protobuf::int32 value) {
  set_has_build();
  build_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.VersionInfo.build)
}

// optional int32 patch = 3;
bool VersionInfo::has_patch() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VersionInfo::set_has_patch() {
  _has_bits_[0] |= 0x00000004u;
}
void VersionInfo::clear_has_patch() {
  _has_bits_[0] &= ~0x00000004u;
}
void VersionInfo::clear_patch() {
  patch_ = 0;
  clear_has_patch();
}
 ::google::protobuf::int32 VersionInfo::patch() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.VersionInfo.patch)
  return patch_;
}
 void VersionInfo::set_patch(::google::protobuf::int32 value) {
  set_has_patch();
  patch_ = value;
  // @@protoc_insertion_point(field_set:data_reduction_proxy.VersionInfo.patch)
}

// optional string channel = 4;
bool VersionInfo::has_channel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VersionInfo::set_has_channel() {
  _has_bits_[0] |= 0x00000008u;
}
void VersionInfo::clear_has_channel() {
  _has_bits_[0] &= ~0x00000008u;
}
void VersionInfo::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel();
}
 const ::std::string& VersionInfo::channel() const {
  // @@protoc_insertion_point(field_get:data_reduction_proxy.VersionInfo.channel)
  return channel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VersionInfo::set_channel(const ::std::string& value) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:data_reduction_proxy.VersionInfo.channel)
}
 void VersionInfo::set_channel(const char* value) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:data_reduction_proxy.VersionInfo.channel)
}
 void VersionInfo::set_channel(const char* value, size_t size) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:data_reduction_proxy.VersionInfo.channel)
}
 ::std::string* VersionInfo::mutable_channel() {
  set_has_channel();
  // @@protoc_insertion_point(field_mutable:data_reduction_proxy.VersionInfo.channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* VersionInfo::release_channel() {
  // @@protoc_insertion_point(field_release:data_reduction_proxy.VersionInfo.channel)
  clear_has_channel();
  return channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VersionInfo::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    set_has_channel();
  } else {
    clear_has_channel();
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:data_reduction_proxy.VersionInfo.channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace data_reduction_proxy

// @@protoc_insertion_point(global_scope)
