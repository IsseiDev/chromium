// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v4_store.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "v4_store.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace safe_browsing {

void protobuf_ShutdownFile_v4_5fstore_2eproto() {
  delete V4StoreFileFormat::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_v4_5fstore_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_v4_5fstore_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::safe_browsing::protobuf_AddDesc_safebrowsing_2eproto();
  V4StoreFileFormat::default_instance_ = new V4StoreFileFormat();
  V4StoreFileFormat::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_v4_5fstore_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_v4_5fstore_2eproto_once_);
void protobuf_AddDesc_v4_5fstore_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_v4_5fstore_2eproto_once_,
                 &protobuf_AddDesc_v4_5fstore_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_v4_5fstore_2eproto {
  StaticDescriptorInitializer_v4_5fstore_2eproto() {
    protobuf_AddDesc_v4_5fstore_2eproto();
  }
} static_descriptor_initializer_v4_5fstore_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

static ::std::string* MutableUnknownFieldsForV4StoreFileFormat(
    V4StoreFileFormat* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int V4StoreFileFormat::kMagicNumberFieldNumber;
const int V4StoreFileFormat::kVersionNumberFieldNumber;
const int V4StoreFileFormat::kListUpdateResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

V4StoreFileFormat::V4StoreFileFormat()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:safe_browsing.V4StoreFileFormat)
}

void V4StoreFileFormat::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  list_update_response_ = const_cast< ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse*>(
      ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse::internal_default_instance());
#else
  list_update_response_ = const_cast< ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse*>(&::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse::default_instance());
#endif
}

V4StoreFileFormat::V4StoreFileFormat(const V4StoreFileFormat& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:safe_browsing.V4StoreFileFormat)
}

void V4StoreFileFormat::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  magic_number_ = 0u;
  version_number_ = 0u;
  list_update_response_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

V4StoreFileFormat::~V4StoreFileFormat() {
  // @@protoc_insertion_point(destructor:safe_browsing.V4StoreFileFormat)
  SharedDtor();
}

void V4StoreFileFormat::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete list_update_response_;
  }
}

void V4StoreFileFormat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const V4StoreFileFormat& V4StoreFileFormat::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_v4_5fstore_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_v4_5fstore_2eproto();
#endif
  return *default_instance_;
}

V4StoreFileFormat* V4StoreFileFormat::default_instance_ = NULL;

V4StoreFileFormat* V4StoreFileFormat::New(::google::protobuf::Arena* arena) const {
  V4StoreFileFormat* n = new V4StoreFileFormat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void V4StoreFileFormat::Clear() {
// @@protoc_insertion_point(message_clear_start:safe_browsing.V4StoreFileFormat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(V4StoreFileFormat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<V4StoreFileFormat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(magic_number_, version_number_);
    if (has_list_update_response()) {
      if (list_update_response_ != NULL) list_update_response_->::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool V4StoreFileFormat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForV4StoreFileFormat, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:safe_browsing.V4StoreFileFormat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 magic_number = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magic_number_)));
          set_has_magic_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version_number;
        break;
      }

      // optional uint32 version_number = 2;
      case 2: {
        if (tag == 16) {
         parse_version_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_number_)));
          set_has_version_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_list_update_response;
        break;
      }

      // optional .safe_browsing.FetchThreatListUpdatesResponse.ListUpdateResponse list_update_response = 3;
      case 3: {
        if (tag == 26) {
         parse_list_update_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_list_update_response()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:safe_browsing.V4StoreFileFormat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:safe_browsing.V4StoreFileFormat)
  return false;
#undef DO_
}

void V4StoreFileFormat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:safe_browsing.V4StoreFileFormat)
  // optional uint32 magic_number = 1;
  if (has_magic_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->magic_number(), output);
  }

  // optional uint32 version_number = 2;
  if (has_version_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version_number(), output);
  }

  // optional .safe_browsing.FetchThreatListUpdatesResponse.ListUpdateResponse list_update_response = 3;
  if (has_list_update_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->list_update_response_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:safe_browsing.V4StoreFileFormat)
}

int V4StoreFileFormat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:safe_browsing.V4StoreFileFormat)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 magic_number = 1;
    if (has_magic_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->magic_number());
    }

    // optional uint32 version_number = 2;
    if (has_version_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version_number());
    }

    // optional .safe_browsing.FetchThreatListUpdatesResponse.ListUpdateResponse list_update_response = 3;
    if (has_list_update_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->list_update_response_);
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void V4StoreFileFormat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const V4StoreFileFormat*>(&from));
}

void V4StoreFileFormat::MergeFrom(const V4StoreFileFormat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:safe_browsing.V4StoreFileFormat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_magic_number()) {
      set_magic_number(from.magic_number());
    }
    if (from.has_version_number()) {
      set_version_number(from.version_number());
    }
    if (from.has_list_update_response()) {
      mutable_list_update_response()->::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse::MergeFrom(from.list_update_response());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void V4StoreFileFormat::CopyFrom(const V4StoreFileFormat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:safe_browsing.V4StoreFileFormat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool V4StoreFileFormat::IsInitialized() const {

  return true;
}

void V4StoreFileFormat::Swap(V4StoreFileFormat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void V4StoreFileFormat::InternalSwap(V4StoreFileFormat* other) {
  std::swap(magic_number_, other->magic_number_);
  std::swap(version_number_, other->version_number_);
  std::swap(list_update_response_, other->list_update_response_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string V4StoreFileFormat::GetTypeName() const {
  return "safe_browsing.V4StoreFileFormat";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// V4StoreFileFormat

// optional uint32 magic_number = 1;
bool V4StoreFileFormat::has_magic_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void V4StoreFileFormat::set_has_magic_number() {
  _has_bits_[0] |= 0x00000001u;
}
void V4StoreFileFormat::clear_has_magic_number() {
  _has_bits_[0] &= ~0x00000001u;
}
void V4StoreFileFormat::clear_magic_number() {
  magic_number_ = 0u;
  clear_has_magic_number();
}
 ::google::protobuf::uint32 V4StoreFileFormat::magic_number() const {
  // @@protoc_insertion_point(field_get:safe_browsing.V4StoreFileFormat.magic_number)
  return magic_number_;
}
 void V4StoreFileFormat::set_magic_number(::google::protobuf::uint32 value) {
  set_has_magic_number();
  magic_number_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.V4StoreFileFormat.magic_number)
}

// optional uint32 version_number = 2;
bool V4StoreFileFormat::has_version_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void V4StoreFileFormat::set_has_version_number() {
  _has_bits_[0] |= 0x00000002u;
}
void V4StoreFileFormat::clear_has_version_number() {
  _has_bits_[0] &= ~0x00000002u;
}
void V4StoreFileFormat::clear_version_number() {
  version_number_ = 0u;
  clear_has_version_number();
}
 ::google::protobuf::uint32 V4StoreFileFormat::version_number() const {
  // @@protoc_insertion_point(field_get:safe_browsing.V4StoreFileFormat.version_number)
  return version_number_;
}
 void V4StoreFileFormat::set_version_number(::google::protobuf::uint32 value) {
  set_has_version_number();
  version_number_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.V4StoreFileFormat.version_number)
}

// optional .safe_browsing.FetchThreatListUpdatesResponse.ListUpdateResponse list_update_response = 3;
bool V4StoreFileFormat::has_list_update_response() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void V4StoreFileFormat::set_has_list_update_response() {
  _has_bits_[0] |= 0x00000004u;
}
void V4StoreFileFormat::clear_has_list_update_response() {
  _has_bits_[0] &= ~0x00000004u;
}
void V4StoreFileFormat::clear_list_update_response() {
  if (list_update_response_ != NULL) list_update_response_->::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse::Clear();
  clear_has_list_update_response();
}
const ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse& V4StoreFileFormat::list_update_response() const {
  // @@protoc_insertion_point(field_get:safe_browsing.V4StoreFileFormat.list_update_response)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return list_update_response_ != NULL ? *list_update_response_ : *default_instance().list_update_response_;
#else
  return list_update_response_ != NULL ? *list_update_response_ : *default_instance_->list_update_response_;
#endif
}
::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse* V4StoreFileFormat::mutable_list_update_response() {
  set_has_list_update_response();
  if (list_update_response_ == NULL) {
    list_update_response_ = new ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.V4StoreFileFormat.list_update_response)
  return list_update_response_;
}
::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse* V4StoreFileFormat::release_list_update_response() {
  // @@protoc_insertion_point(field_release:safe_browsing.V4StoreFileFormat.list_update_response)
  clear_has_list_update_response();
  ::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse* temp = list_update_response_;
  list_update_response_ = NULL;
  return temp;
}
void V4StoreFileFormat::set_allocated_list_update_response(::safe_browsing::FetchThreatListUpdatesResponse_ListUpdateResponse* list_update_response) {
  delete list_update_response_;
  list_update_response_ = list_update_response;
  if (list_update_response) {
    set_has_list_update_response();
  } else {
    clear_has_list_update_response();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.V4StoreFileFormat.list_update_response)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace safe_browsing

// @@protoc_insertion_point(global_scope)
