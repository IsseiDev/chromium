// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef V8ResizeObserverCallback_h
#define V8ResizeObserverCallback_h

#include "bindings/core/v8/ActiveDOMCallback.h"
#include "bindings/core/v8/DOMWrapperWorld.h"
#include "bindings/core/v8/ScopedPersistent.h"
#include "core/CoreExport.h"
#include "core/observer/ResizeObserverCallback.h"

namespace blink {

class V8ResizeObserverCallback final : public ResizeObserverCallback, public ActiveDOMCallback {
    USING_GARBAGE_COLLECTED_MIXIN(V8ResizeObserverCallback);
public:
    static V8ResizeObserverCallback* create(v8::Local<v8::Function> callback, ScriptState* scriptState)
    {
        return new V8ResizeObserverCallback(callback, scriptState);
    }

    ~V8ResizeObserverCallback() override;

    DECLARE_VIRTUAL_TRACE();

    void handleEvent(const HeapVector<Member<ResizeObserverEntry>>& entries, ResizeObserver* observer) override;
private:
    CORE_EXPORT V8ResizeObserverCallback(v8::Local<v8::Function>, ScriptState*);

    ScopedPersistent<v8::Function> m_callback;
    RefPtr<ScriptState> m_scriptState;
};
}
#endif // V8ResizeObserverCallback_h
