// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef FontFaceSetLoadEventInit_h
#define FontFaceSetLoadEventInit_h

#include "bindings/core/v8/Nullable.h"
#include "core/CoreExport.h"
#include "core/css/FontFace.h"
#include "core/events/EventInit.h"
#include "platform/heap/Handle.h"
#include "wtf/Vector.h"

namespace blink {

class CORE_EXPORT FontFaceSetLoadEventInit : public EventInit {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
public:
    FontFaceSetLoadEventInit();
    virtual ~FontFaceSetLoadEventInit();

    bool hasFontfaces() const { return !m_fontfaces.isNull(); }
    const HeapVector<Member<FontFace>>& fontfaces() const { return m_fontfaces.get(); }
    void setFontfaces(const HeapVector<Member<FontFace>>& value) { m_fontfaces = value; }

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    Nullable<HeapVector<Member<FontFace>>> m_fontfaces;

    friend class V8FontFaceSetLoadEventInit;
};

} // namespace blink

#endif // FontFaceSetLoadEventInit_h
