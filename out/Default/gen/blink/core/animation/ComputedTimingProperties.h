// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef ComputedTimingProperties_h
#define ComputedTimingProperties_h

#include "bindings/core/v8/Nullable.h"
#include "core/CoreExport.h"
#include "core/animation/AnimationEffectTimingProperties.h"
#include "platform/heap/Handle.h"

namespace blink {

class CORE_EXPORT ComputedTimingProperties : public AnimationEffectTimingProperties {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
public:
    ComputedTimingProperties();
    virtual ~ComputedTimingProperties();

    bool hasActiveDuration() const { return !m_activeDuration.isNull(); }
    double activeDuration() const { return m_activeDuration.get(); }
    void setActiveDuration(double value) { m_activeDuration = value; }

    bool hasCurrentIteration() const { return !m_currentIteration.isNull(); }
    double currentIteration() const { return m_currentIteration.get(); }
    void setCurrentIteration(double value) { m_currentIteration = value; }
    void setCurrentIterationToNull() { m_currentIteration = Nullable<double>(); }

    bool hasEndTime() const { return !m_endTime.isNull(); }
    double endTime() const { return m_endTime.get(); }
    void setEndTime(double value) { m_endTime = value; }

    bool hasLocalTime() const { return !m_localTime.isNull(); }
    double localTime() const { return m_localTime.get(); }
    void setLocalTime(double value) { m_localTime = value; }
    void setLocalTimeToNull() { m_localTime = Nullable<double>(); }

    bool hasProgress() const { return !m_progress.isNull(); }
    double progress() const { return m_progress.get(); }
    void setProgress(double value) { m_progress = value; }
    void setProgressToNull() { m_progress = Nullable<double>(); }

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    Nullable<double> m_activeDuration;
    Nullable<double> m_currentIteration;
    Nullable<double> m_endTime;
    Nullable<double> m_localTime;
    Nullable<double> m_progress;

    friend class V8ComputedTimingProperties;
};

} // namespace blink

#endif // ComputedTimingProperties_h
