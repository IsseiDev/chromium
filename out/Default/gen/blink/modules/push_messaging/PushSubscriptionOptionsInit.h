// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef PushSubscriptionOptionsInit_h
#define PushSubscriptionOptionsInit_h

#include "bindings/core/v8/ArrayBufferOrArrayBufferView.h"
#include "bindings/core/v8/IDLDictionaryBase.h"
#include "bindings/core/v8/Nullable.h"
#include "bindings/core/v8/V8ArrayBufferView.h"
#include "core/dom/DOMArrayBuffer.h"
#include "core/dom/DOMArrayBufferView.h"
#include "core/dom/FlexibleArrayBufferView.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"

namespace blink {

class MODULES_EXPORT PushSubscriptionOptionsInit : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
public:
    PushSubscriptionOptionsInit();
    virtual ~PushSubscriptionOptionsInit();

    bool hasApplicationServerKey() const { return !m_applicationServerKey.isNull(); }
    const ArrayBufferOrArrayBufferView& applicationServerKey() const { return m_applicationServerKey; }
    void setApplicationServerKey(const ArrayBufferOrArrayBufferView& value) { m_applicationServerKey = value; }
    void setApplicationServerKeyToNull() { m_applicationServerKey = ArrayBufferOrArrayBufferView(); }

    bool hasUserVisibleOnly() const { return !m_userVisibleOnly.isNull(); }
    bool userVisibleOnly() const { return m_userVisibleOnly.get(); }
    void setUserVisibleOnly(bool value) { m_userVisibleOnly = value; }

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    ArrayBufferOrArrayBufferView m_applicationServerKey;
    Nullable<bool> m_userVisibleOnly;

    friend class V8PushSubscriptionOptionsInit;
};

} // namespace blink

#endif // PushSubscriptionOptionsInit_h
