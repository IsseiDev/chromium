// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef ForeignFetchOptions_h
#define ForeignFetchOptions_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "bindings/core/v8/Nullable.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"
#include "wtf/Vector.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT ForeignFetchOptions : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
public:
    ForeignFetchOptions();
    virtual ~ForeignFetchOptions();

    bool hasOrigins() const { return !m_origins.isNull(); }
    const Vector<String>& origins() const { return m_origins.get(); }
    void setOrigins(const Vector<String>& value) { m_origins = value; }

    bool hasScopes() const { return !m_scopes.isNull(); }
    const Vector<String>& scopes() const { return m_scopes.get(); }
    void setScopes(const Vector<String>& value) { m_scopes = value; }

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    Nullable<Vector<String>> m_origins;
    Nullable<Vector<String>> m_scopes;

    friend class V8ForeignFetchOptions;
};

} // namespace blink

#endif // ForeignFetchOptions_h
