// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef NFCPushOptions_h
#define NFCPushOptions_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "bindings/core/v8/Nullable.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT NFCPushOptions : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
public:
    NFCPushOptions();
    virtual ~NFCPushOptions();

    bool hasIgnoreRead() const { return !m_ignoreRead.isNull(); }
    bool ignoreRead() const { return m_ignoreRead.get(); }
    void setIgnoreRead(bool value) { m_ignoreRead = value; }

    bool hasTarget() const { return !m_target.isNull(); }
    String target() const { return m_target; }
    void setTarget(String value) { m_target = value; }

    bool hasTimeout() const { return !m_timeout.isNull(); }
    double timeout() const { return m_timeout.get(); }
    void setTimeout(double value) { m_timeout = value; }

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    Nullable<bool> m_ignoreRead;
    String m_target;
    Nullable<double> m_timeout;

    friend class V8NFCPushOptions;
};

} // namespace blink

#endif // NFCPushOptions_h
