// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef SensorOptions_h
#define SensorOptions_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "bindings/core/v8/Nullable.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"

namespace blink {

class MODULES_EXPORT SensorOptions : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
public:
    SensorOptions();
    virtual ~SensorOptions();

    bool hasFrequency() const { return !m_frequency.isNull(); }
    double frequency() const { return m_frequency.get(); }
    void setFrequency(double value) { m_frequency = value; }
    void setFrequencyToNull() { m_frequency = Nullable<double>(); }

    bool hasTimeout() const { return !m_timeout.isNull(); }
    double timeout() const { return m_timeout.get(); }
    void setTimeout(double value) { m_timeout = value; }
    void setTimeoutToNull() { m_timeout = Nullable<double>(); }

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    Nullable<double> m_frequency;
    Nullable<double> m_timeout;

    friend class V8SensorOptions;
};

} // namespace blink

#endif // SensorOptions_h
