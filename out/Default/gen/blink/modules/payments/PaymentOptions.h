// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef PaymentOptions_h
#define PaymentOptions_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "bindings/core/v8/Nullable.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"

namespace blink {

class MODULES_EXPORT PaymentOptions : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
public:
    PaymentOptions();
    virtual ~PaymentOptions();

    bool hasRequestPayerEmail() const { return !m_requestPayerEmail.isNull(); }
    bool requestPayerEmail() const { return m_requestPayerEmail.get(); }
    void setRequestPayerEmail(bool value) { m_requestPayerEmail = value; }

    bool hasRequestPayerPhone() const { return !m_requestPayerPhone.isNull(); }
    bool requestPayerPhone() const { return m_requestPayerPhone.get(); }
    void setRequestPayerPhone(bool value) { m_requestPayerPhone = value; }

    bool hasRequestShipping() const { return !m_requestShipping.isNull(); }
    bool requestShipping() const { return m_requestShipping.get(); }
    void setRequestShipping(bool value) { m_requestShipping = value; }

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    Nullable<bool> m_requestPayerEmail;
    Nullable<bool> m_requestPayerPhone;
    Nullable<bool> m_requestShipping;

    friend class V8PaymentOptions;
};

} // namespace blink

#endif // PaymentOptions_h
