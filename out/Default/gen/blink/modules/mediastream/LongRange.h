// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef LongRange_h
#define LongRange_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "bindings/core/v8/Nullable.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"

namespace blink {

class MODULES_EXPORT LongRange : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
public:
    LongRange();
    virtual ~LongRange();

    bool hasMax() const { return !m_max.isNull(); }
    int max() const { return m_max.get(); }
    void setMax(int value) { m_max = value; }

    bool hasMin() const { return !m_min.isNull(); }
    int min() const { return m_min.get(); }
    void setMin(int value) { m_min = value; }

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    Nullable<int> m_max;
    Nullable<int> m_min;

    friend class V8LongRange;
};

} // namespace blink

#endif // LongRange_h
