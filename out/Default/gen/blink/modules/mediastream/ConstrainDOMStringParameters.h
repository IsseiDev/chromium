// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef ConstrainDOMStringParameters_h
#define ConstrainDOMStringParameters_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "bindings/core/v8/Nullable.h"
#include "bindings/modules/v8/StringOrStringSequence.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"
#include "wtf/Vector.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT ConstrainDOMStringParameters : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
public:
    ConstrainDOMStringParameters();
    virtual ~ConstrainDOMStringParameters();

    bool hasExact() const { return !m_exact.isNull(); }
    const StringOrStringSequence& exact() const { return m_exact; }
    void setExact(const StringOrStringSequence& value) { m_exact = value; }

    bool hasIdeal() const { return !m_ideal.isNull(); }
    const StringOrStringSequence& ideal() const { return m_ideal; }
    void setIdeal(const StringOrStringSequence& value) { m_ideal = value; }

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    StringOrStringSequence m_exact;
    StringOrStringSequence m_ideal;

    friend class V8ConstrainDOMStringParameters;
};

} // namespace blink

#endif // ConstrainDOMStringParameters_h
