// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef ConstrainDoubleRange_h
#define ConstrainDoubleRange_h

#include "bindings/core/v8/Nullable.h"
#include "modules/ModulesExport.h"
#include "modules/mediastream/DoubleRange.h"
#include "platform/heap/Handle.h"

namespace blink {

class MODULES_EXPORT ConstrainDoubleRange : public DoubleRange {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
public:
    ConstrainDoubleRange();
    virtual ~ConstrainDoubleRange();

    bool hasExact() const { return !m_exact.isNull(); }
    double exact() const { return m_exact.get(); }
    void setExact(double value) { m_exact = value; }

    bool hasIdeal() const { return !m_ideal.isNull(); }
    double ideal() const { return m_ideal.get(); }
    void setIdeal(double value) { m_ideal = value; }

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    Nullable<double> m_exact;
    Nullable<double> m_ideal;

    friend class V8ConstrainDoubleRange;
};

} // namespace blink

#endif // ConstrainDoubleRange_h
