// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: delta_file.proto

#ifndef PROTOBUF_delta_5ffile_2eproto__INCLUDED
#define PROTOBUF_delta_5ffile_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace history_report {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_delta_5ffile_2eproto();
void protobuf_AssignDesc_delta_5ffile_2eproto();
void protobuf_ShutdownFile_delta_5ffile_2eproto();

class DeltaFileEntry;
class UsageReport;

// ===================================================================

class DeltaFileEntry : public ::google::protobuf::MessageLite {
 public:
  DeltaFileEntry();
  virtual ~DeltaFileEntry();

  DeltaFileEntry(const DeltaFileEntry& from);

  inline DeltaFileEntry& operator=(const DeltaFileEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const DeltaFileEntry& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeltaFileEntry* internal_default_instance() {
    return default_instance_;
  }
  #endif

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(DeltaFileEntry* other);

  // implements Message ----------------------------------------------

  inline DeltaFileEntry* New() const { return New(NULL); }

  DeltaFileEntry* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeltaFileEntry& from);
  void MergeFrom(const DeltaFileEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeltaFileEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 seq_no = 1;
  bool has_seq_no() const;
  void clear_seq_no();
  static const int kSeqNoFieldNumber = 1;
  ::google::protobuf::int64 seq_no() const;
  void set_seq_no(::google::protobuf::int64 value);

  // optional string type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // optional string url = 3;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:history_report.DeltaFileEntry)
 private:
  inline void set_has_seq_no();
  inline void clear_has_seq_no();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 seq_no_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_delta_5ffile_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_delta_5ffile_2eproto();
  #endif
  friend void protobuf_AssignDesc_delta_5ffile_2eproto();
  friend void protobuf_ShutdownFile_delta_5ffile_2eproto();

  void InitAsDefaultInstance();
  static DeltaFileEntry* default_instance_;
};
// -------------------------------------------------------------------

class UsageReport : public ::google::protobuf::MessageLite {
 public:
  UsageReport();
  virtual ~UsageReport();

  UsageReport(const UsageReport& from);

  inline UsageReport& operator=(const UsageReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const UsageReport& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UsageReport* internal_default_instance() {
    return default_instance_;
  }
  #endif

  GOOGLE_ATTRIBUTE_NOINLINE void Swap(UsageReport* other);

  // implements Message ----------------------------------------------

  inline UsageReport* New() const { return New(NULL); }

  UsageReport* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UsageReport& from);
  void MergeFrom(const UsageReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UsageReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional int64 timestamp_ms = 2;
  bool has_timestamp_ms() const;
  void clear_timestamp_ms();
  static const int kTimestampMsFieldNumber = 2;
  ::google::protobuf::int64 timestamp_ms() const;
  void set_timestamp_ms(::google::protobuf::int64 value);

  // optional bool typed_visit = 3;
  bool has_typed_visit() const;
  void clear_typed_visit();
  static const int kTypedVisitFieldNumber = 3;
  bool typed_visit() const;
  void set_typed_visit(bool value);

  // @@protoc_insertion_point(class_scope:history_report.UsageReport)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_timestamp_ms();
  inline void clear_has_timestamp_ms();
  inline void set_has_typed_visit();
  inline void clear_has_typed_visit();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int64 timestamp_ms_;
  bool typed_visit_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_delta_5ffile_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_delta_5ffile_2eproto();
  #endif
  friend void protobuf_AssignDesc_delta_5ffile_2eproto();
  friend void protobuf_ShutdownFile_delta_5ffile_2eproto();

  void InitAsDefaultInstance();
  static UsageReport* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DeltaFileEntry

// optional int64 seq_no = 1;
inline bool DeltaFileEntry::has_seq_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeltaFileEntry::set_has_seq_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeltaFileEntry::clear_has_seq_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeltaFileEntry::clear_seq_no() {
  seq_no_ = GOOGLE_LONGLONG(0);
  clear_has_seq_no();
}
inline ::google::protobuf::int64 DeltaFileEntry::seq_no() const {
  // @@protoc_insertion_point(field_get:history_report.DeltaFileEntry.seq_no)
  return seq_no_;
}
inline void DeltaFileEntry::set_seq_no(::google::protobuf::int64 value) {
  set_has_seq_no();
  seq_no_ = value;
  // @@protoc_insertion_point(field_set:history_report.DeltaFileEntry.seq_no)
}

// optional string type = 2;
inline bool DeltaFileEntry::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeltaFileEntry::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeltaFileEntry::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeltaFileEntry::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& DeltaFileEntry::type() const {
  // @@protoc_insertion_point(field_get:history_report.DeltaFileEntry.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeltaFileEntry::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:history_report.DeltaFileEntry.type)
}
inline void DeltaFileEntry::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:history_report.DeltaFileEntry.type)
}
inline void DeltaFileEntry::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:history_report.DeltaFileEntry.type)
}
inline ::std::string* DeltaFileEntry::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:history_report.DeltaFileEntry.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeltaFileEntry::release_type() {
  // @@protoc_insertion_point(field_release:history_report.DeltaFileEntry.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeltaFileEntry::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:history_report.DeltaFileEntry.type)
}

// optional string url = 3;
inline bool DeltaFileEntry::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeltaFileEntry::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeltaFileEntry::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeltaFileEntry::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& DeltaFileEntry::url() const {
  // @@protoc_insertion_point(field_get:history_report.DeltaFileEntry.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeltaFileEntry::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:history_report.DeltaFileEntry.url)
}
inline void DeltaFileEntry::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:history_report.DeltaFileEntry.url)
}
inline void DeltaFileEntry::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:history_report.DeltaFileEntry.url)
}
inline ::std::string* DeltaFileEntry::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:history_report.DeltaFileEntry.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeltaFileEntry::release_url() {
  // @@protoc_insertion_point(field_release:history_report.DeltaFileEntry.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeltaFileEntry::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:history_report.DeltaFileEntry.url)
}

// -------------------------------------------------------------------

// UsageReport

// optional string id = 1;
inline bool UsageReport::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UsageReport::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UsageReport::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UsageReport::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& UsageReport::id() const {
  // @@protoc_insertion_point(field_get:history_report.UsageReport.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UsageReport::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:history_report.UsageReport.id)
}
inline void UsageReport::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:history_report.UsageReport.id)
}
inline void UsageReport::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:history_report.UsageReport.id)
}
inline ::std::string* UsageReport::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:history_report.UsageReport.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UsageReport::release_id() {
  // @@protoc_insertion_point(field_release:history_report.UsageReport.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UsageReport::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:history_report.UsageReport.id)
}

// optional int64 timestamp_ms = 2;
inline bool UsageReport::has_timestamp_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UsageReport::set_has_timestamp_ms() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UsageReport::clear_has_timestamp_ms() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UsageReport::clear_timestamp_ms() {
  timestamp_ms_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp_ms();
}
inline ::google::protobuf::int64 UsageReport::timestamp_ms() const {
  // @@protoc_insertion_point(field_get:history_report.UsageReport.timestamp_ms)
  return timestamp_ms_;
}
inline void UsageReport::set_timestamp_ms(::google::protobuf::int64 value) {
  set_has_timestamp_ms();
  timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:history_report.UsageReport.timestamp_ms)
}

// optional bool typed_visit = 3;
inline bool UsageReport::has_typed_visit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UsageReport::set_has_typed_visit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UsageReport::clear_has_typed_visit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UsageReport::clear_typed_visit() {
  typed_visit_ = false;
  clear_has_typed_visit();
}
inline bool UsageReport::typed_visit() const {
  // @@protoc_insertion_point(field_get:history_report.UsageReport.typed_visit)
  return typed_visit_;
}
inline void UsageReport::set_typed_visit(bool value) {
  set_has_typed_visit();
  typed_visit_ = value;
  // @@protoc_insertion_point(field_set:history_report.UsageReport.typed_visit)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace history_report

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_delta_5ffile_2eproto__INCLUDED
