// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/WebContentsFactory

#ifndef org_chromium_chrome_browser_WebContentsFactory_JNI
#define org_chromium_chrome_browser_WebContentsFactory_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kWebContentsFactoryClassPath[] =
    "org/chromium/chrome/browser/WebContentsFactory";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_WebContentsFactory_clazz __attribute__((unused)) = 0;
#define WebContentsFactory_clazz(env) base::android::LazyGetClass(env, kWebContentsFactoryClassPath, &g_WebContentsFactory_clazz)

}  // namespace

// Step 2: method stubs.

static base::android::ScopedJavaLocalRef<jobject> CreateWebContents(JNIEnv* env,
    const base::android::JavaParamRef<jclass>& jcaller,
    jboolean incognito,
    jboolean initiallyHidden,
    jboolean initializeRenderer);

extern "C" __attribute__((visibility("default")))
jobject
    Java_org_chromium_chrome_browser_WebContentsFactory_nativeCreateWebContents(JNIEnv*
    env, jclass jcaller,
    jboolean incognito,
    jboolean initiallyHidden,
    jboolean initializeRenderer) {
  return CreateWebContents(env, base::android::JavaParamRef<jclass>(env,
      jcaller), incognito, initiallyHidden, initializeRenderer).Release();
}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsWebContentsFactory[] = {
    { "nativeCreateWebContents",
"("
"Z"
"Z"
"Z"
")"
"Lorg/chromium/content_public/browser/WebContents;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_WebContentsFactory_nativeCreateWebContents)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsWebContentsFactorySize =
      arraysize(kMethodsWebContentsFactory);

  if (env->RegisterNatives(WebContentsFactory_clazz(env),
                           kMethodsWebContentsFactory,
                           kMethodsWebContentsFactorySize) < 0) {
    jni_generator::HandleRegistrationError(
        env, WebContentsFactory_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // org_chromium_chrome_browser_WebContentsFactory_JNI
