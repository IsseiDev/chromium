// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/sync/ProfileSyncService

#ifndef org_chromium_chrome_browser_sync_ProfileSyncService_JNI
#define org_chromium_chrome_browser_sync_ProfileSyncService_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kProfileSyncServiceClassPath[] =
    "org/chromium/chrome/browser/sync/ProfileSyncService";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_ProfileSyncService_clazz __attribute__((unused)) = 0;
#define ProfileSyncService_clazz(env) base::android::LazyGetClass(env, kProfileSyncServiceClassPath, &g_ProfileSyncService_clazz)

}  // namespace

// Step 2: method stubs.

static jlong Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    jcaller);

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeInit(JNIEnv*
    env, jobject jcaller) {
  return Init(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeRequestStart(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "RequestStart");
  return native->RequestStart(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeRequestStop(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "RequestStop");
  return native->RequestStop(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeFlushDirectory(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "FlushDirectory");
  return native->FlushDirectory(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSignOutSync(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SignOutSync");
  return native->SignOutSync(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetSyncSessionsId(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid,
    jstring tag) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetSyncSessionsId");
  return native->SetSyncSessionsId(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, tag));
}

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeQuerySyncStatusSummary(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "QuerySyncStatusSummary", NULL);
  return native->QuerySyncStatusSummary(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetAuthError(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetAuthError", 0);
  return native->GetAuthError(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetProtocolErrorClientAction(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetProtocolErrorClientAction", 0);
  return native->GetProtocolErrorClientAction(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsBackendInitialized(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsBackendInitialized", false);
  return native->IsBackendInitialized(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsEncryptEverythingAllowed(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsEncryptEverythingAllowed", false);
  return native->IsEncryptEverythingAllowed(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsEncryptEverythingEnabled(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsEncryptEverythingEnabled", false);
  return native->IsEncryptEverythingEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeEnableEncryptEverything(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "EnableEncryptEverything");
  return native->EnableEncryptEverything(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsPassphraseRequiredForDecryption(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsPassphraseRequiredForDecryption",
      false);
  return native->IsPassphraseRequiredForDecryption(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsUsingSecondaryPassphrase(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsUsingSecondaryPassphrase", false);
  return native->IsUsingSecondaryPassphrase(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jbyteArray
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetCustomPassphraseKey(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCustomPassphraseKey", NULL);
  return native->GetCustomPassphraseKey(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetDecryptionPassphrase(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid,
    jstring passphrase) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetDecryptionPassphrase", false);
  return native->SetDecryptionPassphrase(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, passphrase));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetEncryptionPassphrase(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid,
    jstring passphrase) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetEncryptionPassphrase");
  return native->SetEncryptionPassphrase(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, passphrase));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsCryptographerReady(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsCryptographerReady", false);
  return native->IsCryptographerReady(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetPassphraseType(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetPassphraseType", 0);
  return native->GetPassphraseType(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeHasExplicitPassphraseTime(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "HasExplicitPassphraseTime", false);
  return native->HasExplicitPassphraseTime(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetExplicitPassphraseTime(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetExplicitPassphraseTime", 0);
  return native->GetExplicitPassphraseTime(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetSyncEnterGooglePassphraseBodyWithDateText(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native,
      "GetSyncEnterGooglePassphraseBodyWithDateText", NULL);
  return native->GetSyncEnterGooglePassphraseBodyWithDateText(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetSyncEnterCustomPassphraseBodyWithDateText(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native,
      "GetSyncEnterCustomPassphraseBodyWithDateText", NULL);
  return native->GetSyncEnterCustomPassphraseBodyWithDateText(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetCurrentSignedInAccountText(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCurrentSignedInAccountText", NULL);
  return native->GetCurrentSignedInAccountText(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetSyncEnterCustomPassphraseBodyText(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetSyncEnterCustomPassphraseBodyText",
      NULL);
  return native->GetSyncEnterCustomPassphraseBodyText(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jintArray
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetActiveDataTypes(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetActiveDataTypes", NULL);
  return native->GetActiveDataTypes(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jintArray
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetPreferredDataTypes(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetPreferredDataTypes", NULL);
  return native->GetPreferredDataTypes(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetPreferredDataTypes(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid,
    jboolean syncEverything,
    jintArray modelTypeArray) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetPreferredDataTypes");
  return native->SetPreferredDataTypes(env,
      base::android::JavaParamRef<jobject>(env, jcaller), syncEverything,
      base::android::JavaParamRef<jintArray>(env, modelTypeArray));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetSetupInProgress(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid,
    jboolean inProgress) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetSetupInProgress");
  return native->SetSetupInProgress(env,
      base::android::JavaParamRef<jobject>(env, jcaller), inProgress);
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetFirstSetupComplete(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetFirstSetupComplete");
  return native->SetFirstSetupComplete(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsFirstSetupComplete(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsFirstSetupComplete", false);
  return native->IsFirstSetupComplete(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsSyncRequested(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsSyncRequested", false);
  return native->IsSyncRequested(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsSyncActive(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsSyncActive", false);
  return native->IsSyncActive(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeHasKeepEverythingSynced(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "HasKeepEverythingSynced", false);
  return native->HasKeepEverythingSynced(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeHasUnrecoverableError(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "HasUnrecoverableError", false);
  return native->HasUnrecoverableError(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsPassphrasePrompted(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsPassphrasePrompted", false);
  return native->IsPassphrasePrompted(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetPassphrasePrompted(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid,
    jboolean prompted) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetPassphrasePrompted");
  return native->SetPassphrasePrompted(env,
      base::android::JavaParamRef<jobject>(env, jcaller), prompted);
}

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetAboutInfoForTest(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetAboutInfoForTest", NULL);
  return native->GetAboutInfoForTest(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetLastSyncedTimeForTest(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetLastSyncedTimeForTest", 0);
  return native->GetLastSyncedTimeForTest(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeOverrideNetworkResourcesForTest(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid,
    jlong networkResources) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OverrideNetworkResourcesForTest");
  return native->OverrideNetworkResourcesForTest(env,
      base::android::JavaParamRef<jobject>(env, jcaller), networkResources);
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetAllNodes(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeProfileSyncServiceAndroid,
    jobject callback) {
  ProfileSyncServiceAndroid* native =
      reinterpret_cast<ProfileSyncServiceAndroid*>(nativeProfileSyncServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetAllNodes");
  return native->GetAllNodes(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, callback));
}

static base::subtle::AtomicWord
    g_ProfileSyncService_getProfileSyncServiceAndroid = 0;
static jlong Java_ProfileSyncService_getProfileSyncServiceAndroid(JNIEnv* env) {
  CHECK_CLAZZ(env, ProfileSyncService_clazz(env),
      ProfileSyncService_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, ProfileSyncService_clazz(env),
      "getProfileSyncServiceAndroid",

"("
")"
"J",
      &g_ProfileSyncService_getProfileSyncServiceAndroid);

  jlong ret =
      env->CallStaticLongMethod(ProfileSyncService_clazz(env),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_ProfileSyncService_syncStateChanged = 0;
static void Java_ProfileSyncService_syncStateChanged(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      ProfileSyncService_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, ProfileSyncService_clazz(env),
      "syncStateChanged",

"("
")"
"V",
      &g_ProfileSyncService_syncStateChanged);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_ProfileSyncService_isMasterSyncEnabled = 0;
static jboolean Java_ProfileSyncService_isMasterSyncEnabled(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      ProfileSyncService_clazz(env), false);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, ProfileSyncService_clazz(env),
      "isMasterSyncEnabled",

"("
")"
"Z",
      &g_ProfileSyncService_isMasterSyncEnabled);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_ProfileSyncService_onGetAllNodesResult = 0;
static void Java_ProfileSyncService_onGetAllNodesResult(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& callback,
    const base::android::JavaRefOrBare<jstring>& nodes) {
  CHECK_CLAZZ(env, ProfileSyncService_clazz(env),
      ProfileSyncService_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, ProfileSyncService_clazz(env),
      "onGetAllNodesResult",

"("
"Lorg/chromium/chrome/browser/sync/ProfileSyncService$GetAllNodesCallback;"
"Ljava/lang/String;"
")"
"V",
      &g_ProfileSyncService_onGetAllNodesResult);

     env->CallStaticVoidMethod(ProfileSyncService_clazz(env),
          method_id, callback.obj(), nodes.obj());
  jni_generator::CheckException(env);

}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsProfileSyncService[] = {
    { "nativeInit",
"("
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeInit)
    },
    { "nativeRequestStart",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeRequestStart)
    },
    { "nativeRequestStop",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeRequestStop)
    },
    { "nativeFlushDirectory",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeFlushDirectory)
    },
    { "nativeSignOutSync",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSignOutSync)
    },
    { "nativeSetSyncSessionsId",
"("
"J"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetSyncSessionsId)
    },
    { "nativeQuerySyncStatusSummary",
"("
"J"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeQuerySyncStatusSummary)
    },
    { "nativeGetAuthError",
"("
"J"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetAuthError)
    },
    { "nativeGetProtocolErrorClientAction",
"("
"J"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetProtocolErrorClientAction)
    },
    { "nativeIsBackendInitialized",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsBackendInitialized)
    },
    { "nativeIsEncryptEverythingAllowed",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsEncryptEverythingAllowed)
    },
    { "nativeIsEncryptEverythingEnabled",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsEncryptEverythingEnabled)
    },
    { "nativeEnableEncryptEverything",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeEnableEncryptEverything)
    },
    { "nativeIsPassphraseRequiredForDecryption",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsPassphraseRequiredForDecryption)
    },
    { "nativeIsUsingSecondaryPassphrase",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsUsingSecondaryPassphrase)
    },
    { "nativeGetCustomPassphraseKey",
"("
"J"
")"
"[B",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetCustomPassphraseKey)
    },
    { "nativeSetDecryptionPassphrase",
"("
"J"
"Ljava/lang/String;"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetDecryptionPassphrase)
    },
    { "nativeSetEncryptionPassphrase",
"("
"J"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetEncryptionPassphrase)
    },
    { "nativeIsCryptographerReady",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsCryptographerReady)
    },
    { "nativeGetPassphraseType",
"("
"J"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetPassphraseType)
    },
    { "nativeHasExplicitPassphraseTime",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeHasExplicitPassphraseTime)
    },
    { "nativeGetExplicitPassphraseTime",
"("
"J"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetExplicitPassphraseTime)
    },
    { "nativeGetSyncEnterGooglePassphraseBodyWithDateText",
"("
"J"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetSyncEnterGooglePassphraseBodyWithDateText)
    },
    { "nativeGetSyncEnterCustomPassphraseBodyWithDateText",
"("
"J"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetSyncEnterCustomPassphraseBodyWithDateText)
    },
    { "nativeGetCurrentSignedInAccountText",
"("
"J"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetCurrentSignedInAccountText)
    },
    { "nativeGetSyncEnterCustomPassphraseBodyText",
"("
"J"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetSyncEnterCustomPassphraseBodyText)
    },
    { "nativeGetActiveDataTypes",
"("
"J"
")"
"[I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetActiveDataTypes)
    },
    { "nativeGetPreferredDataTypes",
"("
"J"
")"
"[I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetPreferredDataTypes)
    },
    { "nativeSetPreferredDataTypes",
"("
"J"
"Z"
"[I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetPreferredDataTypes)
    },
    { "nativeSetSetupInProgress",
"("
"J"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetSetupInProgress)
    },
    { "nativeSetFirstSetupComplete",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetFirstSetupComplete)
    },
    { "nativeIsFirstSetupComplete",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsFirstSetupComplete)
    },
    { "nativeIsSyncRequested",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsSyncRequested)
    },
    { "nativeIsSyncActive",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsSyncActive)
    },
    { "nativeHasKeepEverythingSynced",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeHasKeepEverythingSynced)
    },
    { "nativeHasUnrecoverableError",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeHasUnrecoverableError)
    },
    { "nativeIsPassphrasePrompted",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeIsPassphrasePrompted)
    },
    { "nativeSetPassphrasePrompted",
"("
"J"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeSetPassphrasePrompted)
    },
    { "nativeGetAboutInfoForTest",
"("
"J"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetAboutInfoForTest)
    },
    { "nativeGetLastSyncedTimeForTest",
"("
"J"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetLastSyncedTimeForTest)
    },
    { "nativeOverrideNetworkResourcesForTest",
"("
"J"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeOverrideNetworkResourcesForTest)
    },
    { "nativeGetAllNodes",
"("
"J"
"Lorg/chromium/chrome/browser/sync/ProfileSyncService$GetAllNodesCallback;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_sync_ProfileSyncService_nativeGetAllNodes)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsProfileSyncServiceSize =
      arraysize(kMethodsProfileSyncService);

  if (env->RegisterNatives(ProfileSyncService_clazz(env),
                           kMethodsProfileSyncService,
                           kMethodsProfileSyncServiceSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, ProfileSyncService_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // org_chromium_chrome_browser_sync_ProfileSyncService_JNI
