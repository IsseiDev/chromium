// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/ntp/RecentlyClosedBridge

#ifndef org_chromium_chrome_browser_ntp_RecentlyClosedBridge_JNI
#define org_chromium_chrome_browser_ntp_RecentlyClosedBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kRecentlyClosedCallbackClassPath[] =
    "org/chromium/chrome/browser/ntp/RecentlyClosedBridge$RecentlyClosedCallback";
const char kRecentlyClosedBridgeClassPath[] =
    "org/chromium/chrome/browser/ntp/RecentlyClosedBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_RecentlyClosedCallback_clazz __attribute__((unused))
    = 0;
#define RecentlyClosedCallback_clazz(env) base::android::LazyGetClass(env, kRecentlyClosedCallbackClassPath, &g_RecentlyClosedCallback_clazz)
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_RecentlyClosedBridge_clazz __attribute__((unused)) =
    0;
#define RecentlyClosedBridge_clazz(env) base::android::LazyGetClass(env, kRecentlyClosedBridgeClassPath, &g_RecentlyClosedBridge_clazz)

}  // namespace

// Step 2: method stubs.

static jlong Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    jcaller,
    const base::android::JavaParamRef<jobject>& profile);

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeInit(JNIEnv*
    env, jobject jcaller,
    jobject profile) {
  return Init(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, profile));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeDestroy(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeRecentlyClosedTabsBridge) {
  RecentlyClosedTabsBridge* native =
      reinterpret_cast<RecentlyClosedTabsBridge*>(nativeRecentlyClosedTabsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeSetRecentlyClosedCallback(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeRecentlyClosedTabsBridge,
    jobject callback) {
  RecentlyClosedTabsBridge* native =
      reinterpret_cast<RecentlyClosedTabsBridge*>(nativeRecentlyClosedTabsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetRecentlyClosedCallback");
  return native->SetRecentlyClosedCallback(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, callback));
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeGetRecentlyClosedTabs(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeRecentlyClosedTabsBridge,
    jobject tabs,
    jint maxTabCount) {
  RecentlyClosedTabsBridge* native =
      reinterpret_cast<RecentlyClosedTabsBridge*>(nativeRecentlyClosedTabsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetRecentlyClosedTabs", false);
  return native->GetRecentlyClosedTabs(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, tabs), maxTabCount);
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeOpenRecentlyClosedTab(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeRecentlyClosedTabsBridge,
    jobject tab,
    jint recentTabId,
    jint windowOpenDisposition) {
  RecentlyClosedTabsBridge* native =
      reinterpret_cast<RecentlyClosedTabsBridge*>(nativeRecentlyClosedTabsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OpenRecentlyClosedTab", false);
  return native->OpenRecentlyClosedTab(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, tab), recentTabId,
      windowOpenDisposition);
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeOpenMostRecentlyClosedTab(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeRecentlyClosedTabsBridge) {
  RecentlyClosedTabsBridge* native =
      reinterpret_cast<RecentlyClosedTabsBridge*>(nativeRecentlyClosedTabsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OpenMostRecentlyClosedTab", false);
  return native->OpenMostRecentlyClosedTab(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeClearRecentlyClosedTabs(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeRecentlyClosedTabsBridge) {
  RecentlyClosedTabsBridge* native =
      reinterpret_cast<RecentlyClosedTabsBridge*>(nativeRecentlyClosedTabsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "ClearRecentlyClosedTabs");
  return native->ClearRecentlyClosedTabs(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static base::subtle::AtomicWord g_RecentlyClosedCallback_onUpdated = 0;
static void Java_RecentlyClosedCallback_onUpdated(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      RecentlyClosedCallback_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, RecentlyClosedCallback_clazz(env),
      "onUpdated",

"("
")"
"V",
      &g_RecentlyClosedCallback_onUpdated);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_RecentlyClosedBridge_pushTab = 0;
static void Java_RecentlyClosedBridge_pushTab(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& tabs,
    JniIntWrapper id,
    const base::android::JavaRefOrBare<jstring>& title,
    const base::android::JavaRefOrBare<jstring>& url) {
  CHECK_CLAZZ(env, RecentlyClosedBridge_clazz(env),
      RecentlyClosedBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, RecentlyClosedBridge_clazz(env),
      "pushTab",

"("
"Ljava/util/List;"
"I"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_RecentlyClosedBridge_pushTab);

     env->CallStaticVoidMethod(RecentlyClosedBridge_clazz(env),
          method_id, tabs.obj(), as_jint(id), title.obj(), url.obj());
  jni_generator::CheckException(env);

}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsRecentlyClosedBridge[] = {
    { "nativeInit",
"("
"Lorg/chromium/chrome/browser/profiles/Profile;"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeInit)
    },
    { "nativeDestroy",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeDestroy)
    },
    { "nativeSetRecentlyClosedCallback",
"("
"J"
"Lorg/chromium/chrome/browser/ntp/RecentlyClosedBridge$RecentlyClosedCallback;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeSetRecentlyClosedCallback)
    },
    { "nativeGetRecentlyClosedTabs",
"("
"J"
"Ljava/util/List;"
"I"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeGetRecentlyClosedTabs)
    },
    { "nativeOpenRecentlyClosedTab",
"("
"J"
"Lorg/chromium/chrome/browser/tab/Tab;"
"I"
"I"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeOpenRecentlyClosedTab)
    },
    { "nativeOpenMostRecentlyClosedTab",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeOpenMostRecentlyClosedTab)
    },
    { "nativeClearRecentlyClosedTabs",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_RecentlyClosedBridge_nativeClearRecentlyClosedTabs)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsRecentlyClosedBridgeSize =
      arraysize(kMethodsRecentlyClosedBridge);

  if (env->RegisterNatives(RecentlyClosedBridge_clazz(env),
                           kMethodsRecentlyClosedBridge,
                           kMethodsRecentlyClosedBridgeSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, RecentlyClosedBridge_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // org_chromium_chrome_browser_ntp_RecentlyClosedBridge_JNI
