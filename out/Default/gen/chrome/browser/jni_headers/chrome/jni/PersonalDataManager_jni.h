// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/autofill/PersonalDataManager

#ifndef org_chromium_chrome_browser_autofill_PersonalDataManager_JNI
#define org_chromium_chrome_browser_autofill_PersonalDataManager_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kFullCardRequestDelegateClassPath[] =
    "org/chromium/chrome/browser/autofill/PersonalDataManager$FullCardRequestDelegate";
const char kAutofillProfileClassPath[] =
    "org/chromium/chrome/browser/autofill/PersonalDataManager$AutofillProfile";
const char kPersonalDataManagerClassPath[] =
    "org/chromium/chrome/browser/autofill/PersonalDataManager";
const char kCreditCardClassPath[] =
    "org/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_FullCardRequestDelegate_clazz __attribute__((unused))
    = 0;
#define FullCardRequestDelegate_clazz(env) base::android::LazyGetClass(env, kFullCardRequestDelegateClassPath, &g_FullCardRequestDelegate_clazz)
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_AutofillProfile_clazz __attribute__((unused)) = 0;
#define AutofillProfile_clazz(env) base::android::LazyGetClass(env, kAutofillProfileClassPath, &g_AutofillProfile_clazz)
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_PersonalDataManager_clazz __attribute__((unused)) =
    0;
#define PersonalDataManager_clazz(env) base::android::LazyGetClass(env, kPersonalDataManagerClassPath, &g_PersonalDataManager_clazz)
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_CreditCard_clazz __attribute__((unused)) = 0;
#define CreditCard_clazz(env) base::android::LazyGetClass(env, kCreditCardClassPath, &g_CreditCard_clazz)

}  // namespace

namespace autofill {

// Step 2: method stubs.

static jlong Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    jcaller);

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeInit(JNIEnv*
    env, jobject jcaller) {
  return Init(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
jobjectArray
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileGUIDsForSettings(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetProfileGUIDsForSettings", NULL);
  return native->GetProfileGUIDsForSettings(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jobjectArray
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileGUIDsToSuggest(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetProfileGUIDsToSuggest", NULL);
  return native->GetProfileGUIDsToSuggest(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jobjectArray
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileLabelsForSettings(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetProfileLabelsForSettings", NULL);
  return native->GetProfileLabelsForSettings(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jobjectArray
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileLabelsToSuggest(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetProfileLabelsToSuggest", NULL);
  return native->GetProfileLabelsToSuggest(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jobject
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileByGUID(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetProfileByGUID", NULL);
  return native->GetProfileByGUID(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, guid)).Release();
}

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetProfile(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jobject profile) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetProfile", NULL);
  return native->SetProfile(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, profile)).Release();
}

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetAddressLabelForPaymentRequest(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jobject profile) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetAddressLabelForPaymentRequest",
      NULL);
  return native->GetAddressLabelForPaymentRequest(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, profile)).Release();
}

extern "C" __attribute__((visibility("default")))
jobjectArray
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardGUIDsForSettings(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCreditCardGUIDsForSettings", NULL);
  return native->GetCreditCardGUIDsForSettings(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jobjectArray
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardGUIDsToSuggest(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCreditCardGUIDsToSuggest", NULL);
  return native->GetCreditCardGUIDsToSuggest(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jobject
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardByGUID(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCreditCardByGUID", NULL);
  return native->GetCreditCardByGUID(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, guid)).Release();
}

extern "C" __attribute__((visibility("default")))
jobject
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardForNumber(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring cardNumber) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCreditCardForNumber", NULL);
  return native->GetCreditCardForNumber(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, cardNumber)).Release();
}

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetCreditCard(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jobject card) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetCreditCard", NULL);
  return native->SetCreditCard(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, card)).Release();
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeUpdateServerCardBillingAddress(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid,
    jstring billingAddressId) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "UpdateServerCardBillingAddress");
  return native->UpdateServerCardBillingAddress(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, guid),
      base::android::JavaParamRef<jstring>(env, billingAddressId));
}

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetBasicCardPaymentTypeIfValid(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring cardNumber) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetBasicCardPaymentTypeIfValid",
      NULL);
  return native->GetBasicCardPaymentTypeIfValid(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, cardNumber)).Release();
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeAddServerCreditCardForTest(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jobject card) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "AddServerCreditCardForTest");
  return native->AddServerCreditCardForTest(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, card));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeRemoveByGUID(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "RemoveByGUID");
  return native->RemoveByGUID(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, guid));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeRecordAndLogProfileUse(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "RecordAndLogProfileUse");
  return native->RecordAndLogProfileUse(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, guid));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetProfileUseStatsForTesting(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid,
    jint count,
    jlong date) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetProfileUseStatsForTesting");
  return native->SetProfileUseStatsForTesting(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, guid), count, date);
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileUseCountForTesting(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetProfileUseCountForTesting", 0);
  return native->GetProfileUseCountForTesting(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, guid));
}

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileUseDateForTesting(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetProfileUseDateForTesting", 0);
  return native->GetProfileUseDateForTesting(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, guid));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeRecordAndLogCreditCardUse(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "RecordAndLogCreditCardUse");
  return native->RecordAndLogCreditCardUse(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, guid));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetCreditCardUseStatsForTesting(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid,
    jint count,
    jlong date) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetCreditCardUseStatsForTesting");
  return native->SetCreditCardUseStatsForTesting(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, guid), count, date);
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardUseCountForTesting(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCreditCardUseCountForTesting", 0);
  return native->GetCreditCardUseCountForTesting(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, guid));
}

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardUseDateForTesting(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCreditCardUseDateForTesting", 0);
  return native->GetCreditCardUseDateForTesting(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, guid));
}

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCurrentDateForTesting(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCurrentDateForTesting", 0);
  return native->GetCurrentDateForTesting(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeClearUnmaskedCache(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jstring guid) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ClearUnmaskedCache");
  return native->ClearUnmaskedCache(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, guid));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetFullCardForPaymentRequest(JNIEnv*
    env,
    jobject jcaller,
    jlong nativePersonalDataManagerAndroid,
    jobject webContents,
    jobject card,
    jobject delegate) {
  PersonalDataManagerAndroid* native =
      reinterpret_cast<PersonalDataManagerAndroid*>(nativePersonalDataManagerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetFullCardForPaymentRequest");
  return native->GetFullCardForPaymentRequest(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, webContents),
      base::android::JavaParamRef<jobject>(env, card),
      base::android::JavaParamRef<jobject>(env, delegate));
}

static jboolean IsAutofillEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeIsAutofillEnabled(JNIEnv*
    env, jclass jcaller) {
  return IsAutofillEnabled(env, base::android::JavaParamRef<jclass>(env,
      jcaller));
}

static void SetAutofillEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jboolean enable);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetAutofillEnabled(JNIEnv*
    env, jclass jcaller,
    jboolean enable) {
  return SetAutofillEnabled(env, base::android::JavaParamRef<jclass>(env,
      jcaller), enable);
}

static jboolean IsAutofillManaged(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeIsAutofillManaged(JNIEnv*
    env, jclass jcaller) {
  return IsAutofillManaged(env, base::android::JavaParamRef<jclass>(env,
      jcaller));
}

static jboolean IsPaymentsIntegrationEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeIsPaymentsIntegrationEnabled(JNIEnv*
    env, jclass jcaller) {
  return IsPaymentsIntegrationEnabled(env,
      base::android::JavaParamRef<jclass>(env, jcaller));
}

static void SetPaymentsIntegrationEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jboolean enable);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetPaymentsIntegrationEnabled(JNIEnv*
    env, jclass jcaller,
    jboolean enable) {
  return SetPaymentsIntegrationEnabled(env,
      base::android::JavaParamRef<jclass>(env, jcaller), enable);
}

static base::android::ScopedJavaLocalRef<jstring> ToCountryCode(JNIEnv* env,
    const base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& countryName);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeToCountryCode(JNIEnv*
    env, jclass jcaller,
    jstring countryName) {
  return ToCountryCode(env, base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, countryName)).Release();
}

static base::subtle::AtomicWord g_FullCardRequestDelegate_onFullCardDetails = 0;
static void Java_FullCardRequestDelegate_onFullCardDetails(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj, const
    base::android::JavaRefOrBare<jobject>& card,
    const base::android::JavaRefOrBare<jstring>& cvc) {
  CHECK_CLAZZ(env, obj.obj(),
      FullCardRequestDelegate_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, FullCardRequestDelegate_clazz(env),
      "onFullCardDetails",

"("
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard;"
"Ljava/lang/String;"
")"
"V",
      &g_FullCardRequestDelegate_onFullCardDetails);

     env->CallVoidMethod(obj.obj(),
          method_id, card.obj(), cvc.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_FullCardRequestDelegate_onFullCardError = 0;
static void Java_FullCardRequestDelegate_onFullCardError(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      FullCardRequestDelegate_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, FullCardRequestDelegate_clazz(env),
      "onFullCardError",

"("
")"
"V",
      &g_FullCardRequestDelegate_onFullCardError);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_AutofillProfile_create = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutofillProfile_create(JNIEnv* env, const
    base::android::JavaRefOrBare<jstring>& guid,
    const base::android::JavaRefOrBare<jstring>& origin,
    jboolean isLocal,
    const base::android::JavaRefOrBare<jstring>& fullName,
    const base::android::JavaRefOrBare<jstring>& companyName,
    const base::android::JavaRefOrBare<jstring>& streetAddress,
    const base::android::JavaRefOrBare<jstring>& region,
    const base::android::JavaRefOrBare<jstring>& locality,
    const base::android::JavaRefOrBare<jstring>& dependentLocality,
    const base::android::JavaRefOrBare<jstring>& postalCode,
    const base::android::JavaRefOrBare<jstring>& sortingCode,
    const base::android::JavaRefOrBare<jstring>& country,
    const base::android::JavaRefOrBare<jstring>& phoneNumber,
    const base::android::JavaRefOrBare<jstring>& emailAddress,
    const base::android::JavaRefOrBare<jstring>& languageCode) {
  CHECK_CLAZZ(env, AutofillProfile_clazz(env),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, AutofillProfile_clazz(env),
      "create",

"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$AutofillProfile;",
      &g_AutofillProfile_create);

  jobject ret =
      env->CallStaticObjectMethod(AutofillProfile_clazz(env),
          method_id, guid.obj(), origin.obj(), isLocal, fullName.obj(),
              companyName.obj(), streetAddress.obj(), region.obj(),
              locality.obj(), dependentLocality.obj(), postalCode.obj(),
              sortingCode.obj(), country.obj(), phoneNumber.obj(),
              emailAddress.obj(), languageCode.obj());
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getGUID = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getGUID(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getGUID",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getGUID);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getOrigin = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getOrigin(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getOrigin",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getOrigin);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getFullName = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getFullName(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getFullName",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getFullName);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getCompanyName = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getCompanyName(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getCompanyName",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getCompanyName);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getStreetAddress = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getStreetAddress(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getStreetAddress",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getStreetAddress);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getRegion = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getRegion(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getRegion",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getRegion);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getLocality = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getLocality(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getLocality",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getLocality);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getDependentLocality = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getDependentLocality(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getDependentLocality",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getDependentLocality);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getPostalCode = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getPostalCode(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getPostalCode",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getPostalCode);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getSortingCode = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getSortingCode(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getSortingCode",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getSortingCode);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getCountryCode = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getCountryCode(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getCountryCode",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getCountryCode);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getPhoneNumber = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getPhoneNumber(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getPhoneNumber",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getPhoneNumber);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getEmailAddress = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getEmailAddress(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getEmailAddress",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getEmailAddress);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_AutofillProfile_getLanguageCode = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillProfile_getLanguageCode(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutofillProfile_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutofillProfile_clazz(env),
      "getLanguageCode",

"("
")"
"Ljava/lang/String;",
      &g_AutofillProfile_getLanguageCode);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_create = 0;
static base::android::ScopedJavaLocalRef<jobject> Java_CreditCard_create(JNIEnv*
    env, const base::android::JavaRefOrBare<jstring>& guid,
    const base::android::JavaRefOrBare<jstring>& origin,
    jboolean isLocal,
    jboolean isCached,
    const base::android::JavaRefOrBare<jstring>& name,
    const base::android::JavaRefOrBare<jstring>& number,
    const base::android::JavaRefOrBare<jstring>& obfuscatedNumber,
    const base::android::JavaRefOrBare<jstring>& month,
    const base::android::JavaRefOrBare<jstring>& year,
    const base::android::JavaRefOrBare<jstring>& basicCardPaymentType,
    JniIntWrapper enumeratedIconId,
    const base::android::JavaRefOrBare<jstring>& billingAddressId,
    const base::android::JavaRefOrBare<jstring>& serverId) {
  CHECK_CLAZZ(env, CreditCard_clazz(env),
      CreditCard_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, CreditCard_clazz(env),
      "create",

"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
"Z"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"I"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard;",
      &g_CreditCard_create);

  jobject ret =
      env->CallStaticObjectMethod(CreditCard_clazz(env),
          method_id, guid.obj(), origin.obj(), isLocal, isCached, name.obj(),
              number.obj(), obfuscatedNumber.obj(), month.obj(), year.obj(),
              basicCardPaymentType.obj(), as_jint(enumeratedIconId),
              billingAddressId.obj(), serverId.obj());
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getGUID = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_CreditCard_getGUID(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      CreditCard_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, CreditCard_clazz(env),
      "getGUID",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getGUID);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getOrigin = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_CreditCard_getOrigin(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      CreditCard_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, CreditCard_clazz(env),
      "getOrigin",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getOrigin);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getName = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_CreditCard_getName(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      CreditCard_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, CreditCard_clazz(env),
      "getName",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getName);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getNumber = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_CreditCard_getNumber(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      CreditCard_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, CreditCard_clazz(env),
      "getNumber",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getNumber);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getMonth = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_CreditCard_getMonth(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      CreditCard_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, CreditCard_clazz(env),
      "getMonth",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getMonth);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getYear = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_CreditCard_getYear(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      CreditCard_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, CreditCard_clazz(env),
      "getYear",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getYear);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getIsLocal = 0;
static jboolean Java_CreditCard_getIsLocal(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      CreditCard_clazz(env), false);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, CreditCard_clazz(env),
      "getIsLocal",

"("
")"
"Z",
      &g_CreditCard_getIsLocal);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_CreditCard_getIsCached = 0;
static jboolean Java_CreditCard_getIsCached(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      CreditCard_clazz(env), false);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, CreditCard_clazz(env),
      "getIsCached",

"("
")"
"Z",
      &g_CreditCard_getIsCached);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

static base::subtle::AtomicWord g_CreditCard_getBasicCardPaymentType = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_CreditCard_getBasicCardPaymentType(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      CreditCard_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, CreditCard_clazz(env),
      "getBasicCardPaymentType",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getBasicCardPaymentType);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getBillingAddressId = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_CreditCard_getBillingAddressId(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      CreditCard_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, CreditCard_clazz(env),
      "getBillingAddressId",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getBillingAddressId);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_CreditCard_getServerId = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_CreditCard_getServerId(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      CreditCard_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, CreditCard_clazz(env),
      "getServerId",

"("
")"
"Ljava/lang/String;",
      &g_CreditCard_getServerId);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_PersonalDataManager_personalDataChanged = 0;
static void Java_PersonalDataManager_personalDataChanged(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PersonalDataManager_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PersonalDataManager_clazz(env),
      "personalDataChanged",

"("
")"
"V",
      &g_PersonalDataManager_personalDataChanged);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsPersonalDataManager[] = {
    { "nativeInit",
"("
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeInit)
    },
    { "nativeGetProfileGUIDsForSettings",
"("
"J"
")"
"[Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileGUIDsForSettings)
    },
    { "nativeGetProfileGUIDsToSuggest",
"("
"J"
")"
"[Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileGUIDsToSuggest)
    },
    { "nativeGetProfileLabelsForSettings",
"("
"J"
")"
"[Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileLabelsForSettings)
    },
    { "nativeGetProfileLabelsToSuggest",
"("
"J"
")"
"[Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileLabelsToSuggest)
    },
    { "nativeGetProfileByGUID",
"("
"J"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$AutofillProfile;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileByGUID)
    },
    { "nativeSetProfile",
"("
"J"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$AutofillProfile;"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetProfile)
    },
    { "nativeGetAddressLabelForPaymentRequest",
"("
"J"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$AutofillProfile;"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetAddressLabelForPaymentRequest)
    },
    { "nativeGetCreditCardGUIDsForSettings",
"("
"J"
")"
"[Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardGUIDsForSettings)
    },
    { "nativeGetCreditCardGUIDsToSuggest",
"("
"J"
")"
"[Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardGUIDsToSuggest)
    },
    { "nativeGetCreditCardByGUID",
"("
"J"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardByGUID)
    },
    { "nativeGetCreditCardForNumber",
"("
"J"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardForNumber)
    },
    { "nativeSetCreditCard",
"("
"J"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard;"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetCreditCard)
    },
    { "nativeUpdateServerCardBillingAddress",
"("
"J"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeUpdateServerCardBillingAddress)
    },
    { "nativeGetBasicCardPaymentTypeIfValid",
"("
"J"
"Ljava/lang/String;"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetBasicCardPaymentTypeIfValid)
    },
    { "nativeAddServerCreditCardForTest",
"("
"J"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeAddServerCreditCardForTest)
    },
    { "nativeRemoveByGUID",
"("
"J"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeRemoveByGUID)
    },
    { "nativeRecordAndLogProfileUse",
"("
"J"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeRecordAndLogProfileUse)
    },
    { "nativeSetProfileUseStatsForTesting",
"("
"J"
"Ljava/lang/String;"
"I"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetProfileUseStatsForTesting)
    },
    { "nativeGetProfileUseCountForTesting",
"("
"J"
"Ljava/lang/String;"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileUseCountForTesting)
    },
    { "nativeGetProfileUseDateForTesting",
"("
"J"
"Ljava/lang/String;"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetProfileUseDateForTesting)
    },
    { "nativeRecordAndLogCreditCardUse",
"("
"J"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeRecordAndLogCreditCardUse)
    },
    { "nativeSetCreditCardUseStatsForTesting",
"("
"J"
"Ljava/lang/String;"
"I"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetCreditCardUseStatsForTesting)
    },
    { "nativeGetCreditCardUseCountForTesting",
"("
"J"
"Ljava/lang/String;"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardUseCountForTesting)
    },
    { "nativeGetCreditCardUseDateForTesting",
"("
"J"
"Ljava/lang/String;"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCreditCardUseDateForTesting)
    },
    { "nativeGetCurrentDateForTesting",
"("
"J"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetCurrentDateForTesting)
    },
    { "nativeClearUnmaskedCache",
"("
"J"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeClearUnmaskedCache)
    },
    { "nativeGetFullCardForPaymentRequest",
"("
"J"
"Lorg/chromium/content_public/browser/WebContents;"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$CreditCard;"
"Lorg/chromium/chrome/browser/autofill/PersonalDataManager$FullCardRequestDelegate;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeGetFullCardForPaymentRequest)
    },
    { "nativeIsAutofillEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeIsAutofillEnabled)
    },
    { "nativeSetAutofillEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetAutofillEnabled)
    },
    { "nativeIsAutofillManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeIsAutofillManaged)
    },
    { "nativeIsPaymentsIntegrationEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeIsPaymentsIntegrationEnabled)
    },
    { "nativeSetPaymentsIntegrationEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeSetPaymentsIntegrationEnabled)
    },
    { "nativeToCountryCode",
"("
"Ljava/lang/String;"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_autofill_PersonalDataManager_nativeToCountryCode)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsPersonalDataManagerSize =
      arraysize(kMethodsPersonalDataManager);

  if (env->RegisterNatives(PersonalDataManager_clazz(env),
                           kMethodsPersonalDataManager,
                           kMethodsPersonalDataManagerSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, PersonalDataManager_clazz(env), __FILE__);
    return false;
  }

  return true;
}

}  // namespace autofill

#endif  // org_chromium_chrome_browser_autofill_PersonalDataManager_JNI
