// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/preferences/website/WebsitePreferenceBridge

#ifndef org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_JNI
#define org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kStorageInfoClearedCallbackClassPath[] =
    "org/chromium/chrome/browser/preferences/website/WebsitePreferenceBridge$StorageInfoClearedCallback";
const char kWebsitePreferenceBridgeClassPath[] =
    "org/chromium/chrome/browser/preferences/website/WebsitePreferenceBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_StorageInfoClearedCallback_clazz
    __attribute__((unused)) = 0;
#define StorageInfoClearedCallback_clazz(env) base::android::LazyGetClass(env, kStorageInfoClearedCallbackClassPath, &g_StorageInfoClearedCallback_clazz)
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_WebsitePreferenceBridge_clazz __attribute__((unused))
    = 0;
#define WebsitePreferenceBridge_clazz(env) base::android::LazyGetClass(env, kWebsitePreferenceBridgeClassPath, &g_WebsitePreferenceBridge_clazz)

}  // namespace

// Step 2: method stubs.

static void GetGeolocationOrigins(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& list,
    jboolean managedOnly);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetGeolocationOrigins(JNIEnv*
    env, jclass jcaller,
    jobject list,
    jboolean managedOnly) {
  return GetGeolocationOrigins(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, list), managedOnly);
}

static jint GetGeolocationSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetGeolocationSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jboolean isIncognito) {
  return GetGeolocationSettingForOrigin(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder), isIncognito);
}

static void SetGeolocationSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    jint value,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetGeolocationSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jint value,
    jboolean isIncognito) {
  return SetGeolocationSettingForOrigin(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder), value, isIncognito);
}

static void GetKeygenOrigins(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& list);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetKeygenOrigins(JNIEnv*
    env, jclass jcaller,
    jobject list) {
  return GetKeygenOrigins(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, list));
}

static jint GetKeygenSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetKeygenSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jboolean isIncognito) {
  return GetKeygenSettingForOrigin(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder), isIncognito);
}

static void SetKeygenSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    jint value,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetKeygenSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jint value,
    jboolean isIncognito) {
  return SetKeygenSettingForOrigin(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, origin), value,
      isIncognito);
}

static jboolean GetKeygenBlocked(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& webContents);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetKeygenBlocked(JNIEnv*
    env, jclass jcaller,
    jobject webContents) {
  return GetKeygenBlocked(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, webContents));
}

static void GetMidiOrigins(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& list);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetMidiOrigins(JNIEnv*
    env, jclass jcaller,
    jobject list) {
  return GetMidiOrigins(env, base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, list));
}

static jint GetMidiSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetMidiSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jboolean isIncognito) {
  return GetMidiSettingForOrigin(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder), isIncognito);
}

static void SetMidiSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    jint value,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetMidiSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jint value,
    jboolean isIncognito) {
  return SetMidiSettingForOrigin(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder), value, isIncognito);
}

static void GetNotificationOrigins(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& list);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetNotificationOrigins(JNIEnv*
    env, jclass jcaller,
    jobject list) {
  return GetNotificationOrigins(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, list));
}

static jint GetNotificationSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetNotificationSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jboolean isIncognito) {
  return GetNotificationSettingForOrigin(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, origin), isIncognito);
}

static void SetNotificationSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    jint value,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetNotificationSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jint value,
    jboolean isIncognito) {
  return SetNotificationSettingForOrigin(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, origin), value, isIncognito);
}

static void GetProtectedMediaIdentifierOrigins(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& list);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetProtectedMediaIdentifierOrigins(JNIEnv*
    env, jclass jcaller,
    jobject list) {
  return GetProtectedMediaIdentifierOrigins(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, list));
}

static jint GetProtectedMediaIdentifierSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetProtectedMediaIdentifierSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jboolean isIncognito) {
  return GetProtectedMediaIdentifierSettingForOrigin(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder), isIncognito);
}

static void SetProtectedMediaIdentifierSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    jint value,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetProtectedMediaIdentifierSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jint value,
    jboolean isIncognito) {
  return SetProtectedMediaIdentifierSettingForOrigin(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder), value, isIncognito);
}

static void GetCameraOrigins(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& list,
    jboolean managedOnly);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetCameraOrigins(JNIEnv*
    env, jclass jcaller,
    jobject list,
    jboolean managedOnly) {
  return GetCameraOrigins(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, list), managedOnly);
}

static void GetMicrophoneOrigins(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& list,
    jboolean managedOnly);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetMicrophoneOrigins(JNIEnv*
    env, jclass jcaller,
    jobject list,
    jboolean managedOnly) {
  return GetMicrophoneOrigins(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, list), managedOnly);
}

static jint GetMicrophoneSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetMicrophoneSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jboolean isIncognito) {
  return GetMicrophoneSettingForOrigin(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder), isIncognito);
}

static jint GetCameraSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetCameraSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jboolean isIncognito) {
  return GetCameraSettingForOrigin(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder), isIncognito);
}

static void SetMicrophoneSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    jint value,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetMicrophoneSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jint value,
    jboolean isIncognito) {
  return SetMicrophoneSettingForOrigin(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, origin), value, isIncognito);
}

static void SetCameraSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    jint value,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetCameraSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jint value,
    jboolean isIncognito) {
  return SetCameraSettingForOrigin(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, origin), value,
      isIncognito);
}

static void ClearCookieData(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& path);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeClearCookieData(JNIEnv*
    env, jclass jcaller,
    jstring path) {
  return ClearCookieData(env, base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, path));
}

static void ClearLocalStorageData(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& path);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeClearLocalStorageData(JNIEnv*
    env, jclass jcaller,
    jstring path) {
  return ClearLocalStorageData(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, path));
}

static void ClearStorageData(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    jint type,
    const base::android::JavaParamRef<jobject>& callback);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeClearStorageData(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jint type,
    jobject callback) {
  return ClearStorageData(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, origin), type,
      base::android::JavaParamRef<jobject>(env, callback));
}

static void FetchLocalStorageInfo(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& callback);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeFetchLocalStorageInfo(JNIEnv*
    env, jclass jcaller,
    jobject callback) {
  return FetchLocalStorageInfo(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, callback));
}

static void FetchStorageInfo(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& callback);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeFetchStorageInfo(JNIEnv*
    env, jclass jcaller,
    jobject callback) {
  return FetchStorageInfo(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, callback));
}

static jboolean IsContentSettingsPatternValid(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& pattern);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeIsContentSettingsPatternValid(JNIEnv*
    env, jclass jcaller,
    jstring pattern) {
  return IsContentSettingsPatternValid(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, pattern));
}

static jboolean UrlMatchesContentSettingsPattern(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& url,
    const base::android::JavaParamRef<jstring>& pattern);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeUrlMatchesContentSettingsPattern(JNIEnv*
    env, jclass jcaller,
    jstring url,
    jstring pattern) {
  return UrlMatchesContentSettingsPattern(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, url),
      base::android::JavaParamRef<jstring>(env, pattern));
}

static void GetFullscreenOrigins(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& list,
    jboolean managedOnly);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetFullscreenOrigins(JNIEnv*
    env, jclass jcaller,
    jobject list,
    jboolean managedOnly) {
  return GetFullscreenOrigins(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, list), managedOnly);
}

static jint GetFullscreenSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetFullscreenSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jboolean isIncognito) {
  return GetFullscreenSettingForOrigin(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder), isIncognito);
}

static void SetFullscreenSettingForOrigin(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    jint value,
    jboolean isIncognito);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetFullscreenSettingForOrigin(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jint value,
    jboolean isIncognito) {
  return SetFullscreenSettingForOrigin(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder), value, isIncognito);
}

static void GetUsbOrigins(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& list);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetUsbOrigins(JNIEnv*
    env, jclass jcaller,
    jobject list) {
  return GetUsbOrigins(env, base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, list));
}

static void RevokeUsbPermission(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin,
    const base::android::JavaParamRef<jstring>& embedder,
    const base::android::JavaParamRef<jstring>& object);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeRevokeUsbPermission(JNIEnv*
    env, jclass jcaller,
    jstring origin,
    jstring embedder,
    jstring object) {
  return RevokeUsbPermission(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, origin),
      base::android::JavaParamRef<jstring>(env, embedder),
      base::android::JavaParamRef<jstring>(env, object));
}

static base::subtle::AtomicWord
    g_StorageInfoClearedCallback_onStorageInfoCleared = 0;
static void Java_StorageInfoClearedCallback_onStorageInfoCleared(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      StorageInfoClearedCallback_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, StorageInfoClearedCallback_clazz(env),
      "onStorageInfoCleared",

"("
")"
"V",
      &g_StorageInfoClearedCallback_onStorageInfoCleared);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_WebsitePreferenceBridge_insertKeygenInfoIntoList = 0;
static void Java_WebsitePreferenceBridge_insertKeygenInfoIntoList(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& list,
    const base::android::JavaRefOrBare<jstring>& origin,
    const base::android::JavaRefOrBare<jstring>& embedder) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "insertKeygenInfoIntoList",

"("
"Ljava/util/ArrayList;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_WebsitePreferenceBridge_insertKeygenInfoIntoList);

     env->CallStaticVoidMethod(WebsitePreferenceBridge_clazz(env),
          method_id, list.obj(), origin.obj(), embedder.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_WebsitePreferenceBridge_insertGeolocationInfoIntoList = 0;
static void Java_WebsitePreferenceBridge_insertGeolocationInfoIntoList(JNIEnv*
    env, const base::android::JavaRefOrBare<jobject>& list,
    const base::android::JavaRefOrBare<jstring>& origin,
    const base::android::JavaRefOrBare<jstring>& embedder) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "insertGeolocationInfoIntoList",

"("
"Ljava/util/ArrayList;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_WebsitePreferenceBridge_insertGeolocationInfoIntoList);

     env->CallStaticVoidMethod(WebsitePreferenceBridge_clazz(env),
          method_id, list.obj(), origin.obj(), embedder.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_WebsitePreferenceBridge_insertMidiInfoIntoList
    = 0;
static void Java_WebsitePreferenceBridge_insertMidiInfoIntoList(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& list,
    const base::android::JavaRefOrBare<jstring>& origin,
    const base::android::JavaRefOrBare<jstring>& embedder) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "insertMidiInfoIntoList",

"("
"Ljava/util/ArrayList;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_WebsitePreferenceBridge_insertMidiInfoIntoList);

     env->CallStaticVoidMethod(WebsitePreferenceBridge_clazz(env),
          method_id, list.obj(), origin.obj(), embedder.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_WebsitePreferenceBridge_createStorageInfoList
    = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_WebsitePreferenceBridge_createStorageInfoList(JNIEnv* env) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "createStorageInfoList",

"("
")"
"Ljava/lang/Object;",
      &g_WebsitePreferenceBridge_createStorageInfoList);

  jobject ret =
      env->CallStaticObjectMethod(WebsitePreferenceBridge_clazz(env),
          method_id);
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord
    g_WebsitePreferenceBridge_insertStorageInfoIntoList = 0;
static void Java_WebsitePreferenceBridge_insertStorageInfoIntoList(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& list,
    const base::android::JavaRefOrBare<jstring>& host,
    JniIntWrapper type,
    jlong size) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "insertStorageInfoIntoList",

"("
"Ljava/util/ArrayList;"
"Ljava/lang/String;"
"I"
"J"
")"
"V",
      &g_WebsitePreferenceBridge_insertStorageInfoIntoList);

     env->CallStaticVoidMethod(WebsitePreferenceBridge_clazz(env),
          method_id, list.obj(), host.obj(), as_jint(type), size);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_WebsitePreferenceBridge_createLocalStorageInfoMap = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_WebsitePreferenceBridge_createLocalStorageInfoMap(JNIEnv* env) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "createLocalStorageInfoMap",

"("
")"
"Ljava/lang/Object;",
      &g_WebsitePreferenceBridge_createLocalStorageInfoMap);

  jobject ret =
      env->CallStaticObjectMethod(WebsitePreferenceBridge_clazz(env),
          method_id);
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord
    g_WebsitePreferenceBridge_insertLocalStorageInfoIntoMap = 0;
static void Java_WebsitePreferenceBridge_insertLocalStorageInfoIntoMap(JNIEnv*
    env, const base::android::JavaRefOrBare<jobject>& map,
    const base::android::JavaRefOrBare<jstring>& origin,
    const base::android::JavaRefOrBare<jstring>& fullOrigin,
    jlong size,
    jboolean important) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "insertLocalStorageInfoIntoMap",

"("
"Ljava/util/HashMap;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"J"
"Z"
")"
"V",
      &g_WebsitePreferenceBridge_insertLocalStorageInfoIntoMap);

     env->CallStaticVoidMethod(WebsitePreferenceBridge_clazz(env),
          method_id, map.obj(), origin.obj(), fullOrigin.obj(), size,
              important);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_WebsitePreferenceBridge_insertProtectedMediaIdentifierInfoIntoList = 0;
static void
    Java_WebsitePreferenceBridge_insertProtectedMediaIdentifierInfoIntoList(JNIEnv*
    env, const base::android::JavaRefOrBare<jobject>& list,
    const base::android::JavaRefOrBare<jstring>& origin,
    const base::android::JavaRefOrBare<jstring>& embedder) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "insertProtectedMediaIdentifierInfoIntoList",

"("
"Ljava/util/ArrayList;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_WebsitePreferenceBridge_insertProtectedMediaIdentifierInfoIntoList);

     env->CallStaticVoidMethod(WebsitePreferenceBridge_clazz(env),
          method_id, list.obj(), origin.obj(), embedder.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_WebsitePreferenceBridge_insertNotificationIntoList = 0;
static void Java_WebsitePreferenceBridge_insertNotificationIntoList(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& list,
    const base::android::JavaRefOrBare<jstring>& origin,
    const base::android::JavaRefOrBare<jstring>& embedder) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "insertNotificationIntoList",

"("
"Ljava/util/ArrayList;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_WebsitePreferenceBridge_insertNotificationIntoList);

     env->CallStaticVoidMethod(WebsitePreferenceBridge_clazz(env),
          method_id, list.obj(), origin.obj(), embedder.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_WebsitePreferenceBridge_insertCameraInfoIntoList = 0;
static void Java_WebsitePreferenceBridge_insertCameraInfoIntoList(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& list,
    const base::android::JavaRefOrBare<jstring>& origin,
    const base::android::JavaRefOrBare<jstring>& embedder) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "insertCameraInfoIntoList",

"("
"Ljava/util/ArrayList;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_WebsitePreferenceBridge_insertCameraInfoIntoList);

     env->CallStaticVoidMethod(WebsitePreferenceBridge_clazz(env),
          method_id, list.obj(), origin.obj(), embedder.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_WebsitePreferenceBridge_insertMicrophoneInfoIntoList = 0;
static void Java_WebsitePreferenceBridge_insertMicrophoneInfoIntoList(JNIEnv*
    env, const base::android::JavaRefOrBare<jobject>& list,
    const base::android::JavaRefOrBare<jstring>& origin,
    const base::android::JavaRefOrBare<jstring>& embedder) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "insertMicrophoneInfoIntoList",

"("
"Ljava/util/ArrayList;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_WebsitePreferenceBridge_insertMicrophoneInfoIntoList);

     env->CallStaticVoidMethod(WebsitePreferenceBridge_clazz(env),
          method_id, list.obj(), origin.obj(), embedder.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_WebsitePreferenceBridge_insertFullscreenInfoIntoList = 0;
static void Java_WebsitePreferenceBridge_insertFullscreenInfoIntoList(JNIEnv*
    env, const base::android::JavaRefOrBare<jobject>& list,
    const base::android::JavaRefOrBare<jstring>& origin,
    const base::android::JavaRefOrBare<jstring>& embedder) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "insertFullscreenInfoIntoList",

"("
"Ljava/util/ArrayList;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_WebsitePreferenceBridge_insertFullscreenInfoIntoList);

     env->CallStaticVoidMethod(WebsitePreferenceBridge_clazz(env),
          method_id, list.obj(), origin.obj(), embedder.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_WebsitePreferenceBridge_insertUsbInfoIntoList
    = 0;
static void Java_WebsitePreferenceBridge_insertUsbInfoIntoList(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& list,
    const base::android::JavaRefOrBare<jstring>& origin,
    const base::android::JavaRefOrBare<jstring>& embedder,
    const base::android::JavaRefOrBare<jstring>& name,
    const base::android::JavaRefOrBare<jstring>& object) {
  CHECK_CLAZZ(env, WebsitePreferenceBridge_clazz(env),
      WebsitePreferenceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, WebsitePreferenceBridge_clazz(env),
      "insertUsbInfoIntoList",

"("
"Ljava/util/ArrayList;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
      &g_WebsitePreferenceBridge_insertUsbInfoIntoList);

     env->CallStaticVoidMethod(WebsitePreferenceBridge_clazz(env),
          method_id, list.obj(), origin.obj(), embedder.obj(), name.obj(),
              object.obj());
  jni_generator::CheckException(env);

}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsWebsitePreferenceBridge[] = {
    { "nativeGetGeolocationOrigins",
"("
"Ljava/lang/Object;"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetGeolocationOrigins)
    },
    { "nativeGetGeolocationSettingForOrigin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetGeolocationSettingForOrigin)
    },
    { "nativeSetGeolocationSettingForOrigin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"I"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetGeolocationSettingForOrigin)
    },
    { "nativeGetKeygenOrigins",
"("
"Ljava/lang/Object;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetKeygenOrigins)
    },
    { "nativeGetKeygenSettingForOrigin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetKeygenSettingForOrigin)
    },
    { "nativeSetKeygenSettingForOrigin",
"("
"Ljava/lang/String;"
"I"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetKeygenSettingForOrigin)
    },
    { "nativeGetKeygenBlocked",
"("
"Ljava/lang/Object;"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetKeygenBlocked)
    },
    { "nativeGetMidiOrigins",
"("
"Ljava/lang/Object;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetMidiOrigins)
    },
    { "nativeGetMidiSettingForOrigin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetMidiSettingForOrigin)
    },
    { "nativeSetMidiSettingForOrigin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"I"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetMidiSettingForOrigin)
    },
    { "nativeGetNotificationOrigins",
"("
"Ljava/lang/Object;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetNotificationOrigins)
    },
    { "nativeGetNotificationSettingForOrigin",
"("
"Ljava/lang/String;"
"Z"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetNotificationSettingForOrigin)
    },
    { "nativeSetNotificationSettingForOrigin",
"("
"Ljava/lang/String;"
"I"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetNotificationSettingForOrigin)
    },
    { "nativeGetProtectedMediaIdentifierOrigins",
"("
"Ljava/lang/Object;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetProtectedMediaIdentifierOrigins)
    },
    { "nativeGetProtectedMediaIdentifierSettingForOrigin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetProtectedMediaIdentifierSettingForOrigin)
    },
    { "nativeSetProtectedMediaIdentifierSettingForOrigin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"I"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetProtectedMediaIdentifierSettingForOrigin)
    },
    { "nativeGetCameraOrigins",
"("
"Ljava/lang/Object;"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetCameraOrigins)
    },
    { "nativeGetMicrophoneOrigins",
"("
"Ljava/lang/Object;"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetMicrophoneOrigins)
    },
    { "nativeGetMicrophoneSettingForOrigin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetMicrophoneSettingForOrigin)
    },
    { "nativeGetCameraSettingForOrigin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetCameraSettingForOrigin)
    },
    { "nativeSetMicrophoneSettingForOrigin",
"("
"Ljava/lang/String;"
"I"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetMicrophoneSettingForOrigin)
    },
    { "nativeSetCameraSettingForOrigin",
"("
"Ljava/lang/String;"
"I"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetCameraSettingForOrigin)
    },
    { "nativeClearCookieData",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeClearCookieData)
    },
    { "nativeClearLocalStorageData",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeClearLocalStorageData)
    },
    { "nativeClearStorageData",
"("
"Ljava/lang/String;"
"I"
"Ljava/lang/Object;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeClearStorageData)
    },
    { "nativeFetchLocalStorageInfo",
"("
"Ljava/lang/Object;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeFetchLocalStorageInfo)
    },
    { "nativeFetchStorageInfo",
"("
"Ljava/lang/Object;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeFetchStorageInfo)
    },
    { "nativeIsContentSettingsPatternValid",
"("
"Ljava/lang/String;"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeIsContentSettingsPatternValid)
    },
    { "nativeUrlMatchesContentSettingsPattern",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeUrlMatchesContentSettingsPattern)
    },
    { "nativeGetFullscreenOrigins",
"("
"Ljava/lang/Object;"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetFullscreenOrigins)
    },
    { "nativeGetFullscreenSettingForOrigin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetFullscreenSettingForOrigin)
    },
    { "nativeSetFullscreenSettingForOrigin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"I"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeSetFullscreenSettingForOrigin)
    },
    { "nativeGetUsbOrigins",
"("
"Ljava/lang/Object;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeGetUsbOrigins)
    },
    { "nativeRevokeUsbPermission",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_nativeRevokeUsbPermission)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsWebsitePreferenceBridgeSize =
      arraysize(kMethodsWebsitePreferenceBridge);

  if (env->RegisterNatives(WebsitePreferenceBridge_clazz(env),
                           kMethodsWebsitePreferenceBridge,
                           kMethodsWebsitePreferenceBridgeSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, WebsitePreferenceBridge_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // org_chromium_chrome_browser_preferences_website_WebsitePreferenceBridge_JNI
