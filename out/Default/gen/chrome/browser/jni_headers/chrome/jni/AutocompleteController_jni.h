// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/omnibox/AutocompleteController

#ifndef org_chromium_chrome_browser_omnibox_AutocompleteController_JNI
#define org_chromium_chrome_browser_omnibox_AutocompleteController_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kAutocompleteControllerClassPath[] =
    "org/chromium/chrome/browser/omnibox/AutocompleteController";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_AutocompleteController_clazz __attribute__((unused))
    = 0;
#define AutocompleteController_clazz(env) base::android::LazyGetClass(env, kAutocompleteControllerClassPath, &g_AutocompleteController_clazz)

}  // namespace

// Step 2: method stubs.

static jlong Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    jcaller,
    const base::android::JavaParamRef<jobject>& profile);

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeInit(JNIEnv*
    env, jobject jcaller,
    jobject profile) {
  return Init(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, profile));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeStart(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeAutocompleteControllerAndroid,
    jstring text,
    jint cursorPosition,
    jstring desiredTld,
    jstring currentUrl,
    jboolean preventInlineAutocomplete,
    jboolean preferKeyword,
    jboolean allowExactKeywordMatch,
    jboolean wantAsynchronousMatches) {
  AutocompleteControllerAndroid* native =
      reinterpret_cast<AutocompleteControllerAndroid*>(nativeAutocompleteControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Start");
  return native->Start(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, text), cursorPosition,
      base::android::JavaParamRef<jstring>(env, desiredTld),
      base::android::JavaParamRef<jstring>(env, currentUrl),
      preventInlineAutocomplete, preferKeyword, allowExactKeywordMatch,
      wantAsynchronousMatches);
}

extern "C" __attribute__((visibility("default")))
jobject
    Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeClassify(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeAutocompleteControllerAndroid,
    jstring text) {
  AutocompleteControllerAndroid* native =
      reinterpret_cast<AutocompleteControllerAndroid*>(nativeAutocompleteControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Classify", NULL);
  return native->Classify(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, text)).Release();
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeStop(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeAutocompleteControllerAndroid,
    jboolean clearResults) {
  AutocompleteControllerAndroid* native =
      reinterpret_cast<AutocompleteControllerAndroid*>(nativeAutocompleteControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Stop");
  return native->Stop(env, base::android::JavaParamRef<jobject>(env, jcaller),
      clearResults);
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeResetSession(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeAutocompleteControllerAndroid) {
  AutocompleteControllerAndroid* native =
      reinterpret_cast<AutocompleteControllerAndroid*>(nativeAutocompleteControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ResetSession");
  return native->ResetSession(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeOnSuggestionSelected(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeAutocompleteControllerAndroid,
    jint selectedIndex,
    jstring currentPageUrl,
    jboolean focusedFromFakebox,
    jlong elapsedTimeSinceModified,
    jint completedLength,
    jobject webContents) {
  AutocompleteControllerAndroid* native =
      reinterpret_cast<AutocompleteControllerAndroid*>(nativeAutocompleteControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSuggestionSelected");
  return native->OnSuggestionSelected(env,
      base::android::JavaParamRef<jobject>(env, jcaller), selectedIndex,
      base::android::JavaParamRef<jstring>(env, currentPageUrl),
      focusedFromFakebox, elapsedTimeSinceModified, completedLength,
      base::android::JavaParamRef<jobject>(env, webContents));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeOnOmniboxFocused(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeAutocompleteControllerAndroid,
    jstring omniboxText,
    jstring currentUrl,
    jboolean focusedFromFakebox) {
  AutocompleteControllerAndroid* native =
      reinterpret_cast<AutocompleteControllerAndroid*>(nativeAutocompleteControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnOmniboxFocused");
  return native->OnOmniboxFocused(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, omniboxText),
      base::android::JavaParamRef<jstring>(env, currentUrl),
      focusedFromFakebox);
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeDeleteSuggestion(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeAutocompleteControllerAndroid,
    jint selectedIndex) {
  AutocompleteControllerAndroid* native =
      reinterpret_cast<AutocompleteControllerAndroid*>(nativeAutocompleteControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "DeleteSuggestion");
  return native->DeleteSuggestion(env, base::android::JavaParamRef<jobject>(env,
      jcaller), selectedIndex);
}

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeUpdateMatchDestinationURLWithQueryFormulationTime(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeAutocompleteControllerAndroid,
    jint selectedIndex,
    jlong elapsedTimeSinceInputChange) {
  AutocompleteControllerAndroid* native =
      reinterpret_cast<AutocompleteControllerAndroid*>(nativeAutocompleteControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native,
      "UpdateMatchDestinationURLWithQueryFormulationTime", NULL);
  return native->UpdateMatchDestinationURLWithQueryFormulationTime(env,
      base::android::JavaParamRef<jobject>(env, jcaller), selectedIndex,
      elapsedTimeSinceInputChange).Release();
}

static base::android::ScopedJavaLocalRef<jstring> QualifyPartialURLQuery(JNIEnv*
    env, const base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& query);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeQualifyPartialURLQuery(JNIEnv*
    env, jclass jcaller,
    jstring query) {
  return QualifyPartialURLQuery(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, query)).Release();
}

static void PrefetchZeroSuggestResults(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativePrefetchZeroSuggestResults(JNIEnv*
    env, jclass jcaller) {
  return PrefetchZeroSuggestResults(env,
      base::android::JavaParamRef<jclass>(env, jcaller));
}

static base::subtle::AtomicWord g_AutocompleteController_onSuggestionsReceived =
    0;
static void Java_AutocompleteController_onSuggestionsReceived(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj, const
    base::android::JavaRefOrBare<jobject>& suggestions,
    const base::android::JavaRefOrBare<jstring>& inlineAutocompleteText,
    jlong currentNativeAutocompleteResult) {
  CHECK_CLAZZ(env, obj.obj(),
      AutocompleteController_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutocompleteController_clazz(env),
      "onSuggestionsReceived",

"("
"Ljava/util/List;"
"Ljava/lang/String;"
"J"
")"
"V",
      &g_AutocompleteController_onSuggestionsReceived);

     env->CallVoidMethod(obj.obj(),
          method_id, suggestions.obj(), inlineAutocompleteText.obj(),
              currentNativeAutocompleteResult);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_AutocompleteController_notifyNativeDestroyed =
    0;
static void Java_AutocompleteController_notifyNativeDestroyed(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      AutocompleteController_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AutocompleteController_clazz(env),
      "notifyNativeDestroyed",

"("
")"
"V",
      &g_AutocompleteController_notifyNativeDestroyed);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_AutocompleteController_createOmniboxSuggestionList = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutocompleteController_createOmniboxSuggestionList(JNIEnv* env,
    JniIntWrapper size) {
  CHECK_CLAZZ(env, AutocompleteController_clazz(env),
      AutocompleteController_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, AutocompleteController_clazz(env),
      "createOmniboxSuggestionList",

"("
"I"
")"
"Ljava/util/List;",
      &g_AutocompleteController_createOmniboxSuggestionList);

  jobject ret =
      env->CallStaticObjectMethod(AutocompleteController_clazz(env),
          method_id, as_jint(size));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord
    g_AutocompleteController_addOmniboxSuggestionToList = 0;
static void Java_AutocompleteController_addOmniboxSuggestionToList(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& suggestionList,
    const base::android::JavaRefOrBare<jobject>& suggestion) {
  CHECK_CLAZZ(env, AutocompleteController_clazz(env),
      AutocompleteController_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, AutocompleteController_clazz(env),
      "addOmniboxSuggestionToList",

"("
"Ljava/util/List;"
"Lorg/chromium/chrome/browser/omnibox/OmniboxSuggestion;"
")"
"V",
      &g_AutocompleteController_addOmniboxSuggestionToList);

     env->CallStaticVoidMethod(AutocompleteController_clazz(env),
          method_id, suggestionList.obj(), suggestion.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_AutocompleteController_buildOmniboxSuggestion
    = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutocompleteController_buildOmniboxSuggestion(JNIEnv* env,
    JniIntWrapper nativeType,
    jboolean isSearchType,
    JniIntWrapper relevance,
    JniIntWrapper transition,
    const base::android::JavaRefOrBare<jstring>& contents,
    const base::android::JavaRefOrBare<jintArray>& contentClassificationOffsets,
    const base::android::JavaRefOrBare<jintArray>& contentClassificationStyles,
    const base::android::JavaRefOrBare<jstring>& description,
    const base::android::JavaRefOrBare<jintArray>&
        descriptionClassificationOffsets,
    const base::android::JavaRefOrBare<jintArray>&
        descriptionClassificationStyles,
    const base::android::JavaRefOrBare<jstring>& answerContents,
    const base::android::JavaRefOrBare<jstring>& answerType,
    const base::android::JavaRefOrBare<jstring>& fillIntoEdit,
    const base::android::JavaRefOrBare<jstring>& url,
    jboolean isStarred,
    jboolean isDeletable) {
  CHECK_CLAZZ(env, AutocompleteController_clazz(env),
      AutocompleteController_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, AutocompleteController_clazz(env),
      "buildOmniboxSuggestion",

"("
"I"
"Z"
"I"
"I"
"Ljava/lang/String;"
"[I"
"[I"
"Ljava/lang/String;"
"[I"
"[I"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
"Z"
")"
"Lorg/chromium/chrome/browser/omnibox/OmniboxSuggestion;",
      &g_AutocompleteController_buildOmniboxSuggestion);

  jobject ret =
      env->CallStaticObjectMethod(AutocompleteController_clazz(env),
          method_id, as_jint(nativeType), isSearchType, as_jint(relevance),
              as_jint(transition), contents.obj(),
              contentClassificationOffsets.obj(),
              contentClassificationStyles.obj(), description.obj(),
              descriptionClassificationOffsets.obj(),
              descriptionClassificationStyles.obj(), answerContents.obj(),
              answerType.obj(), fillIntoEdit.obj(), url.obj(), isStarred,
              isDeletable);
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsAutocompleteController[] = {
    { "nativeInit",
"("
"Lorg/chromium/chrome/browser/profiles/Profile;"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeInit)
    },
    { "nativeStart",
"("
"J"
"Ljava/lang/String;"
"I"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
"Z"
"Z"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeStart)
    },
    { "nativeClassify",
"("
"J"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/omnibox/OmniboxSuggestion;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeClassify)
    },
    { "nativeStop",
"("
"J"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeStop)
    },
    { "nativeResetSession",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeResetSession)
    },
    { "nativeOnSuggestionSelected",
"("
"J"
"I"
"Ljava/lang/String;"
"Z"
"J"
"I"
"Lorg/chromium/content_public/browser/WebContents;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeOnSuggestionSelected)
    },
    { "nativeOnOmniboxFocused",
"("
"J"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeOnOmniboxFocused)
    },
    { "nativeDeleteSuggestion",
"("
"J"
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeDeleteSuggestion)
    },
    { "nativeUpdateMatchDestinationURLWithQueryFormulationTime",
"("
"J"
"I"
"J"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeUpdateMatchDestinationURLWithQueryFormulationTime)
    },
    { "nativeQualifyPartialURLQuery",
"("
"Ljava/lang/String;"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativeQualifyPartialURLQuery)
    },
    { "nativePrefetchZeroSuggestResults",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_omnibox_AutocompleteController_nativePrefetchZeroSuggestResults)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsAutocompleteControllerSize =
      arraysize(kMethodsAutocompleteController);

  if (env->RegisterNatives(AutocompleteController_clazz(env),
                           kMethodsAutocompleteController,
                           kMethodsAutocompleteControllerSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, AutocompleteController_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // org_chromium_chrome_browser_omnibox_AutocompleteController_JNI
