// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/mojo/ChromeInterfaceRegistrar

#ifndef org_chromium_chrome_browser_mojo_ChromeInterfaceRegistrar_JNI
#define org_chromium_chrome_browser_mojo_ChromeInterfaceRegistrar_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kChromeInterfaceRegistrarClassPath[] =
    "org/chromium/chrome/browser/mojo/ChromeInterfaceRegistrar";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_ChromeInterfaceRegistrar_clazz
    __attribute__((unused)) = 0;
#define ChromeInterfaceRegistrar_clazz(env) base::android::LazyGetClass(env, kChromeInterfaceRegistrarClassPath, &g_ChromeInterfaceRegistrar_clazz)

}  // namespace

// Step 2: method stubs.

static base::subtle::AtomicWord
    g_ChromeInterfaceRegistrar_exposeInterfacesToFrame = 0;
static void Java_ChromeInterfaceRegistrar_exposeInterfacesToFrame(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& registry,
    const base::android::JavaRefOrBare<jobject>& webContents) {
  CHECK_CLAZZ(env, ChromeInterfaceRegistrar_clazz(env),
      ChromeInterfaceRegistrar_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, ChromeInterfaceRegistrar_clazz(env),
      "exposeInterfacesToFrame",

"("
"Lorg/chromium/content/browser/InterfaceRegistry;"
"Lorg/chromium/content_public/browser/WebContents;"
")"
"V",
      &g_ChromeInterfaceRegistrar_exposeInterfacesToFrame);

     env->CallStaticVoidMethod(ChromeInterfaceRegistrar_clazz(env),
          method_id, registry.obj(), webContents.obj());
  jni_generator::CheckException(env);

}

// Step 3: RegisterNatives.

#endif  // org_chromium_chrome_browser_mojo_ChromeInterfaceRegistrar_JNI
