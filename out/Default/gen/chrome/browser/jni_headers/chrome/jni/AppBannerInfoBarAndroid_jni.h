// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/infobar/AppBannerInfoBarAndroid

#ifndef org_chromium_chrome_browser_infobar_AppBannerInfoBarAndroid_JNI
#define org_chromium_chrome_browser_infobar_AppBannerInfoBarAndroid_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kAppBannerInfoBarAndroidClassPath[] =
    "org/chromium/chrome/browser/infobar/AppBannerInfoBarAndroid";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_AppBannerInfoBarAndroid_clazz __attribute__((unused))
    = 0;
#define AppBannerInfoBarAndroid_clazz(env) base::android::LazyGetClass(env, kAppBannerInfoBarAndroidClassPath, &g_AppBannerInfoBarAndroid_clazz)

}  // namespace

// Step 2: method stubs.

static base::subtle::AtomicWord g_AppBannerInfoBarAndroid_onInstallStateChanged
    = 0;
static void Java_AppBannerInfoBarAndroid_onInstallStateChanged(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& obj, JniIntWrapper newState) {
  CHECK_CLAZZ(env, obj.obj(),
      AppBannerInfoBarAndroid_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, AppBannerInfoBarAndroid_clazz(env),
      "onInstallStateChanged",

"("
"I"
")"
"V",
      &g_AppBannerInfoBarAndroid_onInstallStateChanged);

     env->CallVoidMethod(obj.obj(),
          method_id, as_jint(newState));
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_AppBannerInfoBarAndroid_createNativeAppInfoBar
    = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_AppBannerInfoBarAndroid_createNativeAppInfoBar(JNIEnv* env, const
    base::android::JavaRefOrBare<jstring>& appTitle,
    const base::android::JavaRefOrBare<jobject>& iconBitmap,
    const base::android::JavaRefOrBare<jobject>& appData) {
  CHECK_CLAZZ(env, AppBannerInfoBarAndroid_clazz(env),
      AppBannerInfoBarAndroid_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, AppBannerInfoBarAndroid_clazz(env),
      "createNativeAppInfoBar",

"("
"Ljava/lang/String;"
"Landroid/graphics/Bitmap;"
"Lorg/chromium/chrome/browser/banners/AppData;"
")"
"Lorg/chromium/chrome/browser/infobar/InfoBar;",
      &g_AppBannerInfoBarAndroid_createNativeAppInfoBar);

  jobject ret =
      env->CallStaticObjectMethod(AppBannerInfoBarAndroid_clazz(env),
          method_id, appTitle.obj(), iconBitmap.obj(), appData.obj());
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_AppBannerInfoBarAndroid_createWebAppInfoBar =
    0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_AppBannerInfoBarAndroid_createWebAppInfoBar(JNIEnv* env, const
    base::android::JavaRefOrBare<jstring>& appTitle,
    const base::android::JavaRefOrBare<jobject>& iconBitmap,
    const base::android::JavaRefOrBare<jstring>& url) {
  CHECK_CLAZZ(env, AppBannerInfoBarAndroid_clazz(env),
      AppBannerInfoBarAndroid_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, AppBannerInfoBarAndroid_clazz(env),
      "createWebAppInfoBar",

"("
"Ljava/lang/String;"
"Landroid/graphics/Bitmap;"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/infobar/InfoBar;",
      &g_AppBannerInfoBarAndroid_createWebAppInfoBar);

  jobject ret =
      env->CallStaticObjectMethod(AppBannerInfoBarAndroid_clazz(env),
          method_id, appTitle.obj(), iconBitmap.obj(), url.obj());
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

// Step 3: RegisterNatives.

#endif  // org_chromium_chrome_browser_infobar_AppBannerInfoBarAndroid_JNI
