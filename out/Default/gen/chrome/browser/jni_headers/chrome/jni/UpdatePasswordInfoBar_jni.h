// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/infobar/UpdatePasswordInfoBar

#ifndef org_chromium_chrome_browser_infobar_UpdatePasswordInfoBar_JNI
#define org_chromium_chrome_browser_infobar_UpdatePasswordInfoBar_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kUpdatePasswordInfoBarClassPath[] =
    "org/chromium/chrome/browser/infobar/UpdatePasswordInfoBar";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_UpdatePasswordInfoBar_clazz __attribute__((unused)) =
    0;
#define UpdatePasswordInfoBar_clazz(env) base::android::LazyGetClass(env, kUpdatePasswordInfoBarClassPath, &g_UpdatePasswordInfoBar_clazz)

}  // namespace

// Step 2: method stubs.

static base::subtle::AtomicWord g_UpdatePasswordInfoBar_show = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_UpdatePasswordInfoBar_show(JNIEnv* env, jlong nativePtr,
    JniIntWrapper enumeratedIconId,
    const base::android::JavaRefOrBare<jobjectArray>& usernames,
    const base::android::JavaRefOrBare<jstring>& primaryButtonText,
    const base::android::JavaRefOrBare<jstring>& secondaryButtonText,
    const base::android::JavaRefOrBare<jstring>& branding,
    jboolean showMultipleAccounts,
    jboolean isSmartLockEnabled) {
  CHECK_CLAZZ(env, UpdatePasswordInfoBar_clazz(env),
      UpdatePasswordInfoBar_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, UpdatePasswordInfoBar_clazz(env),
      "show",

"("
"J"
"I"
"[Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
"Z"
")"
"Lorg/chromium/chrome/browser/infobar/InfoBar;",
      &g_UpdatePasswordInfoBar_show);

  jobject ret =
      env->CallStaticObjectMethod(UpdatePasswordInfoBar_clazz(env),
          method_id, nativePtr, as_jint(enumeratedIconId), usernames.obj(),
              primaryButtonText.obj(), secondaryButtonText.obj(),
              branding.obj(), showMultipleAccounts, isSmartLockEnabled);
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_UpdatePasswordInfoBar_getSelectedUsername = 0;
static jint Java_UpdatePasswordInfoBar_getSelectedUsername(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      UpdatePasswordInfoBar_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, UpdatePasswordInfoBar_clazz(env),
      "getSelectedUsername",

"("
")"
"I",
      &g_UpdatePasswordInfoBar_getSelectedUsername);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

// Step 3: RegisterNatives.

#endif  // org_chromium_chrome_browser_infobar_UpdatePasswordInfoBar_JNI
