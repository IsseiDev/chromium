// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/push_messaging/PushMessagingServiceObserver

#ifndef org_chromium_chrome_browser_push_messaging_PushMessagingServiceObserver_JNI
#define org_chromium_chrome_browser_push_messaging_PushMessagingServiceObserver_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kPushMessagingServiceObserverClassPath[] =
    "org/chromium/chrome/browser/push_messaging/PushMessagingServiceObserver";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_PushMessagingServiceObserver_clazz
    __attribute__((unused)) = 0;
#define PushMessagingServiceObserver_clazz(env) base::android::LazyGetClass(env, kPushMessagingServiceObserverClassPath, &g_PushMessagingServiceObserver_clazz)

}  // namespace

namespace chrome {
namespace android {

// Step 2: method stubs.

static base::subtle::AtomicWord g_PushMessagingServiceObserver_onMessageHandled
    = 0;
static void Java_PushMessagingServiceObserver_onMessageHandled(JNIEnv* env) {
  CHECK_CLAZZ(env, PushMessagingServiceObserver_clazz(env),
      PushMessagingServiceObserver_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, PushMessagingServiceObserver_clazz(env),
      "onMessageHandled",

"("
")"
"V",
      &g_PushMessagingServiceObserver_onMessageHandled);

     env->CallStaticVoidMethod(PushMessagingServiceObserver_clazz(env),
          method_id);
  jni_generator::CheckException(env);

}

// Step 3: RegisterNatives.

}  // namespace android
}  // namespace chrome

#endif  // org_chromium_chrome_browser_push_messaging_PushMessagingServiceObserver_JNI
