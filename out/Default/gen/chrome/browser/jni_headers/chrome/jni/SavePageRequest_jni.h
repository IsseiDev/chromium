// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/offlinepages/SavePageRequest

#ifndef org_chromium_chrome_browser_offlinepages_SavePageRequest_JNI
#define org_chromium_chrome_browser_offlinepages_SavePageRequest_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kSavePageRequestClassPath[] =
    "org/chromium/chrome/browser/offlinepages/SavePageRequest";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_SavePageRequest_clazz __attribute__((unused)) = 0;
#define SavePageRequest_clazz(env) base::android::LazyGetClass(env, kSavePageRequestClassPath, &g_SavePageRequest_clazz)

}  // namespace

namespace offline_pages {
namespace android {

// Step 2: method stubs.

static base::subtle::AtomicWord g_SavePageRequest_create = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_SavePageRequest_create(JNIEnv* env, JniIntWrapper state,
    jlong requestId,
    const base::android::JavaRefOrBare<jstring>& url,
    const base::android::JavaRefOrBare<jstring>& clientIdNamespace,
    const base::android::JavaRefOrBare<jstring>& clientIdId) {
  CHECK_CLAZZ(env, SavePageRequest_clazz(env),
      SavePageRequest_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, SavePageRequest_clazz(env),
      "create",

"("
"I"
"J"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/offlinepages/SavePageRequest;",
      &g_SavePageRequest_create);

  jobject ret =
      env->CallStaticObjectMethod(SavePageRequest_clazz(env),
          method_id, as_jint(state), requestId, url.obj(),
              clientIdNamespace.obj(), clientIdId.obj());
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

// Step 3: RegisterNatives.

}  // namespace android
}  // namespace offline_pages

#endif  // org_chromium_chrome_browser_offlinepages_SavePageRequest_JNI
