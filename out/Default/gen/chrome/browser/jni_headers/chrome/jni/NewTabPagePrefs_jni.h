// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/ntp/NewTabPagePrefs

#ifndef org_chromium_chrome_browser_ntp_NewTabPagePrefs_JNI
#define org_chromium_chrome_browser_ntp_NewTabPagePrefs_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kNewTabPagePrefsClassPath[] =
    "org/chromium/chrome/browser/ntp/NewTabPagePrefs";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_NewTabPagePrefs_clazz __attribute__((unused)) = 0;
#define NewTabPagePrefs_clazz(env) base::android::LazyGetClass(env, kNewTabPagePrefsClassPath, &g_NewTabPagePrefs_clazz)

}  // namespace

// Step 2: method stubs.

static jlong Init(JNIEnv* env, const base::android::JavaParamRef<jclass>&
    jcaller,
    const base::android::JavaParamRef<jobject>& profile);

extern "C" __attribute__((visibility("default")))
jlong Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeInit(JNIEnv*
    env, jclass jcaller,
    jobject profile) {
  return Init(env, base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, profile));
}

extern "C" __attribute__((visibility("default")))
void Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeDestroy(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNewTabPagePrefs) {
  NewTabPagePrefs* native =
      reinterpret_cast<NewTabPagePrefs*>(nativeNewTabPagePrefs);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeSetCurrentlyOpenTabsCollapsed(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNewTabPagePrefs,
    jboolean isCollapsed) {
  NewTabPagePrefs* native =
      reinterpret_cast<NewTabPagePrefs*>(nativeNewTabPagePrefs);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetCurrentlyOpenTabsCollapsed");
  return native->SetCurrentlyOpenTabsCollapsed(env,
      base::android::JavaParamRef<jobject>(env, jcaller), isCollapsed);
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeGetCurrentlyOpenTabsCollapsed(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNewTabPagePrefs) {
  NewTabPagePrefs* native =
      reinterpret_cast<NewTabPagePrefs*>(nativeNewTabPagePrefs);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCurrentlyOpenTabsCollapsed",
      false);
  return native->GetCurrentlyOpenTabsCollapsed(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeSetSnapshotDocumentCollapsed(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNewTabPagePrefs,
    jboolean isCollapsed) {
  NewTabPagePrefs* native =
      reinterpret_cast<NewTabPagePrefs*>(nativeNewTabPagePrefs);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetSnapshotDocumentCollapsed");
  return native->SetSnapshotDocumentCollapsed(env,
      base::android::JavaParamRef<jobject>(env, jcaller), isCollapsed);
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeGetSnapshotDocumentCollapsed(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNewTabPagePrefs) {
  NewTabPagePrefs* native =
      reinterpret_cast<NewTabPagePrefs*>(nativeNewTabPagePrefs);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetSnapshotDocumentCollapsed", false);
  return native->GetSnapshotDocumentCollapsed(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeSetRecentlyClosedTabsCollapsed(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNewTabPagePrefs,
    jboolean isCollapsed) {
  NewTabPagePrefs* native =
      reinterpret_cast<NewTabPagePrefs*>(nativeNewTabPagePrefs);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetRecentlyClosedTabsCollapsed");
  return native->SetRecentlyClosedTabsCollapsed(env,
      base::android::JavaParamRef<jobject>(env, jcaller), isCollapsed);
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeGetRecentlyClosedTabsCollapsed(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNewTabPagePrefs) {
  NewTabPagePrefs* native =
      reinterpret_cast<NewTabPagePrefs*>(nativeNewTabPagePrefs);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetRecentlyClosedTabsCollapsed",
      false);
  return native->GetRecentlyClosedTabsCollapsed(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeSetSyncPromoCollapsed(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNewTabPagePrefs,
    jboolean isCollapsed) {
  NewTabPagePrefs* native =
      reinterpret_cast<NewTabPagePrefs*>(nativeNewTabPagePrefs);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetSyncPromoCollapsed");
  return native->SetSyncPromoCollapsed(env,
      base::android::JavaParamRef<jobject>(env, jcaller), isCollapsed);
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeGetSyncPromoCollapsed(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNewTabPagePrefs) {
  NewTabPagePrefs* native =
      reinterpret_cast<NewTabPagePrefs*>(nativeNewTabPagePrefs);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetSyncPromoCollapsed", false);
  return native->GetSyncPromoCollapsed(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeSetForeignSessionCollapsed(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNewTabPagePrefs,
    jstring sessionTag,
    jboolean isCollapsed) {
  NewTabPagePrefs* native =
      reinterpret_cast<NewTabPagePrefs*>(nativeNewTabPagePrefs);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetForeignSessionCollapsed");
  return native->SetForeignSessionCollapsed(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, sessionTag), isCollapsed);
}

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeGetForeignSessionCollapsed(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNewTabPagePrefs,
    jstring sessionTag) {
  NewTabPagePrefs* native =
      reinterpret_cast<NewTabPagePrefs*>(nativeNewTabPagePrefs);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetForeignSessionCollapsed", false);
  return native->GetForeignSessionCollapsed(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, sessionTag));
}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsNewTabPagePrefs[] = {
    { "nativeInit",
"("
"Lorg/chromium/chrome/browser/profiles/Profile;"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeInit)
    },
    { "nativeDestroy",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeDestroy)
    },
    { "nativeSetCurrentlyOpenTabsCollapsed",
"("
"J"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeSetCurrentlyOpenTabsCollapsed)
    },
    { "nativeGetCurrentlyOpenTabsCollapsed",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeGetCurrentlyOpenTabsCollapsed)
    },
    { "nativeSetSnapshotDocumentCollapsed",
"("
"J"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeSetSnapshotDocumentCollapsed)
    },
    { "nativeGetSnapshotDocumentCollapsed",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeGetSnapshotDocumentCollapsed)
    },
    { "nativeSetRecentlyClosedTabsCollapsed",
"("
"J"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeSetRecentlyClosedTabsCollapsed)
    },
    { "nativeGetRecentlyClosedTabsCollapsed",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeGetRecentlyClosedTabsCollapsed)
    },
    { "nativeSetSyncPromoCollapsed",
"("
"J"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeSetSyncPromoCollapsed)
    },
    { "nativeGetSyncPromoCollapsed",
"("
"J"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeGetSyncPromoCollapsed)
    },
    { "nativeSetForeignSessionCollapsed",
"("
"J"
"Ljava/lang/String;"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeSetForeignSessionCollapsed)
    },
    { "nativeGetForeignSessionCollapsed",
"("
"J"
"Ljava/lang/String;"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_NewTabPagePrefs_nativeGetForeignSessionCollapsed)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsNewTabPagePrefsSize = arraysize(kMethodsNewTabPagePrefs);

  if (env->RegisterNatives(NewTabPagePrefs_clazz(env),
                           kMethodsNewTabPagePrefs,
                           kMethodsNewTabPagePrefsSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, NewTabPagePrefs_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // org_chromium_chrome_browser_ntp_NewTabPagePrefs_JNI
