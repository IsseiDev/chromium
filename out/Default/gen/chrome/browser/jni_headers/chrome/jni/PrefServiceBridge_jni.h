// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/preferences/PrefServiceBridge

#ifndef org_chromium_chrome_browser_preferences_PrefServiceBridge_JNI
#define org_chromium_chrome_browser_preferences_PrefServiceBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kImportantSitesCallbackClassPath[] =
    "org/chromium/chrome/browser/preferences/PrefServiceBridge$ImportantSitesCallback";
const char kPrefServiceBridgeClassPath[] =
    "org/chromium/chrome/browser/preferences/PrefServiceBridge";
const char kOtherFormsOfBrowsingHistoryListenerClassPath[] =
    "org/chromium/chrome/browser/preferences/PrefServiceBridge$OtherFormsOfBrowsingHistoryListener";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_ImportantSitesCallback_clazz __attribute__((unused))
    = 0;
#define ImportantSitesCallback_clazz(env) base::android::LazyGetClass(env, kImportantSitesCallbackClassPath, &g_ImportantSitesCallback_clazz)
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_PrefServiceBridge_clazz __attribute__((unused)) = 0;
#define PrefServiceBridge_clazz(env) base::android::LazyGetClass(env, kPrefServiceBridgeClassPath, &g_PrefServiceBridge_clazz)
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_OtherFormsOfBrowsingHistoryListener_clazz
    __attribute__((unused)) = 0;
#define OtherFormsOfBrowsingHistoryListener_clazz(env) base::android::LazyGetClass(env, kOtherFormsOfBrowsingHistoryListenerClassPath, &g_OtherFormsOfBrowsingHistoryListener_clazz)

}  // namespace

// Step 2: method stubs.

static jboolean IsContentSettingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jint contentSettingType);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeIsContentSettingEnabled(JNIEnv*
    env, jobject jcaller,
    jint contentSettingType) {
  return IsContentSettingEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), contentSettingType);
}

static jboolean IsContentSettingManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jint contentSettingType);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeIsContentSettingManaged(JNIEnv*
    env, jobject jcaller,
    jint contentSettingType) {
  return IsContentSettingManaged(env, base::android::JavaParamRef<jobject>(env,
      jcaller), contentSettingType);
}

static void SetContentSettingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jint contentSettingType,
    jboolean allow);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetContentSettingEnabled(JNIEnv*
    env, jobject jcaller,
    jint contentSettingType,
    jboolean allow) {
  return SetContentSettingEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), contentSettingType, allow);
}

static void GetContentSettingsExceptions(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jint contentSettingsType,
    const base::android::JavaParamRef<jobject>& list);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetContentSettingsExceptions(JNIEnv*
    env, jobject jcaller,
    jint contentSettingsType,
    jobject list) {
  return GetContentSettingsExceptions(env,
      base::android::JavaParamRef<jobject>(env, jcaller), contentSettingsType,
      base::android::JavaParamRef<jobject>(env, list));
}

static void SetContentSettingForPattern(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jint contentSettingType,
    const base::android::JavaParamRef<jstring>& pattern,
    jint setting);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetContentSettingForPattern(JNIEnv*
    env, jobject jcaller,
    jint contentSettingType,
    jstring pattern,
    jint setting) {
  return SetContentSettingForPattern(env,
      base::android::JavaParamRef<jobject>(env, jcaller), contentSettingType,
      base::android::JavaParamRef<jstring>(env, pattern), setting);
}

static jboolean GetAcceptCookiesEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAcceptCookiesEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetAcceptCookiesEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetAcceptCookiesManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAcceptCookiesManaged(JNIEnv*
    env, jobject jcaller) {
  return GetAcceptCookiesManaged(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetAutoplayEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAutoplayEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetAutoplayEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetBackgroundSyncEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetBackgroundSyncEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetBackgroundSyncEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetBlockThirdPartyCookiesEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetBlockThirdPartyCookiesEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetBlockThirdPartyCookiesEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetBlockThirdPartyCookiesManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetBlockThirdPartyCookiesManaged(JNIEnv*
    env, jobject jcaller) {
  return GetBlockThirdPartyCookiesManaged(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetRememberPasswordsEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetRememberPasswordsEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetRememberPasswordsEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetPasswordManagerAutoSigninEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetPasswordManagerAutoSigninEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetPasswordManagerAutoSigninEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetRememberPasswordsManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetRememberPasswordsManaged(JNIEnv*
    env, jobject jcaller) {
  return GetRememberPasswordsManaged(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetPasswordManagerAutoSigninManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetPasswordManagerAutoSigninManaged(JNIEnv*
    env, jobject jcaller) {
  return GetPasswordManagerAutoSigninManaged(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetAllowLocationUserModifiable(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAllowLocationUserModifiable(JNIEnv*
    env, jobject jcaller) {
  return GetAllowLocationUserModifiable(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetLocationAllowedByPolicy(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetLocationAllowedByPolicy(JNIEnv*
    env, jobject jcaller) {
  return GetLocationAllowedByPolicy(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetAllowLocationManagedByCustodian(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAllowLocationManagedByCustodian(JNIEnv*
    env, jobject jcaller) {
  return GetAllowLocationManagedByCustodian(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetDoNotTrackEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetDoNotTrackEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetDoNotTrackEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetPasswordEchoEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetPasswordEchoEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetPasswordEchoEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetFirstRunEulaAccepted(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetFirstRunEulaAccepted(JNIEnv*
    env, jobject jcaller) {
  return GetFirstRunEulaAccepted(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetCameraEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetCameraEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetCameraEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static void SetCameraEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean allow);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetCameraEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean allow) {
  return SetCameraEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), allow);
}

static jboolean GetCameraUserModifiable(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetCameraUserModifiable(JNIEnv*
    env, jobject jcaller) {
  return GetCameraUserModifiable(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetCameraManagedByCustodian(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetCameraManagedByCustodian(JNIEnv*
    env, jobject jcaller) {
  return GetCameraManagedByCustodian(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetMicEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetMicEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetMicEnabled(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

static void SetMicEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean allow);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetMicEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean allow) {
  return SetMicEnabled(env, base::android::JavaParamRef<jobject>(env, jcaller),
      allow);
}

static jboolean GetMicUserModifiable(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetMicUserModifiable(JNIEnv*
    env, jobject jcaller) {
  return GetMicUserModifiable(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetMicManagedByCustodian(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetMicManagedByCustodian(JNIEnv*
    env, jobject jcaller) {
  return GetMicManagedByCustodian(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetFullscreenAllowed(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetFullscreenAllowed(JNIEnv*
    env, jobject jcaller) {
  return GetFullscreenAllowed(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetFullscreenManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetFullscreenManaged(JNIEnv*
    env, jobject jcaller) {
  return GetFullscreenManaged(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetTranslateEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetTranslateEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetTranslateEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetTranslateManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetTranslateManaged(JNIEnv*
    env, jobject jcaller) {
  return GetTranslateManaged(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetResolveNavigationErrorEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetResolveNavigationErrorEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetResolveNavigationErrorEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetResolveNavigationErrorManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetResolveNavigationErrorManaged(JNIEnv*
    env, jobject jcaller) {
  return GetResolveNavigationErrorManaged(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetProtectedMediaIdentifierEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetProtectedMediaIdentifierEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetProtectedMediaIdentifierEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetCrashReportManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetCrashReportManaged(JNIEnv*
    env, jobject jcaller) {
  return GetCrashReportManaged(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetIncognitoModeEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetIncognitoModeEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetIncognitoModeEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetIncognitoModeManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetIncognitoModeManaged(JNIEnv*
    env, jobject jcaller) {
  return GetIncognitoModeManaged(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetPrintingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetPrintingEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetPrintingEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetPrintingManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetPrintingManaged(JNIEnv*
    env, jobject jcaller) {
  return GetPrintingManaged(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetSupervisedUserSafeSitesEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserSafeSitesEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetSupervisedUserSafeSitesEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static void SetTranslateEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetTranslateEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetTranslateEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), enabled);
}

static void ResetTranslateDefaults(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeResetTranslateDefaults(JNIEnv*
    env, jobject jcaller) {
  return ResetTranslateDefaults(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static void MigrateJavascriptPreference(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeMigrateJavascriptPreference(JNIEnv*
    env, jobject jcaller) {
  return MigrateJavascriptPreference(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetBrowsingDataDeletionPreference(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jint dataType);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetBrowsingDataDeletionPreference(JNIEnv*
    env, jobject jcaller,
    jint dataType) {
  return GetBrowsingDataDeletionPreference(env,
      base::android::JavaParamRef<jobject>(env, jcaller), dataType);
}

static void SetBrowsingDataDeletionPreference(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jint dataType,
    jboolean value);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetBrowsingDataDeletionPreference(JNIEnv*
    env, jobject jcaller,
    jint dataType,
    jboolean value) {
  return SetBrowsingDataDeletionPreference(env,
      base::android::JavaParamRef<jobject>(env, jcaller), dataType, value);
}

static jint GetBrowsingDataDeletionTimePeriod(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetBrowsingDataDeletionTimePeriod(JNIEnv*
    env, jobject jcaller) {
  return GetBrowsingDataDeletionTimePeriod(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static void SetBrowsingDataDeletionTimePeriod(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jint timePeriod);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetBrowsingDataDeletionTimePeriod(JNIEnv*
    env, jobject jcaller,
    jint timePeriod) {
  return SetBrowsingDataDeletionTimePeriod(env,
      base::android::JavaParamRef<jobject>(env, jcaller), timePeriod);
}

static void ClearBrowsingData(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    const base::android::JavaParamRef<jintArray>& dataTypes,
    jint timePeriod,
    const base::android::JavaParamRef<jobjectArray>& blacklistDomains,
    const base::android::JavaParamRef<jintArray>& blacklistedDomainReasons,
    const base::android::JavaParamRef<jobjectArray>& ignoredDomains,
    const base::android::JavaParamRef<jintArray>& ignoredDomainReasons);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeClearBrowsingData(JNIEnv*
    env, jobject jcaller,
    jintArray dataTypes,
    jint timePeriod,
    jobjectArray blacklistDomains,
    jintArray blacklistedDomainReasons,
    jobjectArray ignoredDomains,
    jintArray ignoredDomainReasons) {
  return ClearBrowsingData(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jintArray>(env, dataTypes),
      timePeriod, base::android::JavaParamRef<jobjectArray>(env,
      blacklistDomains), base::android::JavaParamRef<jintArray>(env,
      blacklistedDomainReasons), base::android::JavaParamRef<jobjectArray>(env,
      ignoredDomains), base::android::JavaParamRef<jintArray>(env,
      ignoredDomainReasons));
}

static void RequestInfoAboutOtherFormsOfBrowsingHistory(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    const base::android::JavaParamRef<jobject>& listener);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeRequestInfoAboutOtherFormsOfBrowsingHistory(JNIEnv*
    env, jobject jcaller,
    jobject listener) {
  return RequestInfoAboutOtherFormsOfBrowsingHistory(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, listener));
}

static jboolean CanDeleteBrowsingHistory(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeCanDeleteBrowsingHistory(JNIEnv*
    env, jobject jcaller) {
  return CanDeleteBrowsingHistory(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static void FetchImportantSites(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& callback);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeFetchImportantSites(JNIEnv*
    env, jclass jcaller,
    jobject callback) {
  return FetchImportantSites(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, callback));
}

static jint GetMaxImportantSites(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller);

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetMaxImportantSites(JNIEnv*
    env, jclass jcaller) {
  return GetMaxImportantSites(env, base::android::JavaParamRef<jclass>(env,
      jcaller));
}

static void MarkOriginAsImportantForTesting(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& origin);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeMarkOriginAsImportantForTesting(JNIEnv*
    env, jclass jcaller,
    jstring origin) {
  return MarkOriginAsImportantForTesting(env,
      base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, origin));
}

static void SetAutoplayEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean allow);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetAutoplayEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean allow) {
  return SetAutoplayEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), allow);
}

static void SetAllowCookiesEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean allow);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetAllowCookiesEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean allow) {
  return SetAllowCookiesEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), allow);
}

static void SetBackgroundSyncEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean allow);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetBackgroundSyncEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean allow) {
  return SetBackgroundSyncEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), allow);
}

static void SetBlockThirdPartyCookiesEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetBlockThirdPartyCookiesEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetBlockThirdPartyCookiesEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller), enabled);
}

static void SetDoNotTrackEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetDoNotTrackEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetDoNotTrackEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), enabled);
}

static void SetFullscreenAllowed(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean allowed);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetFullscreenAllowed(JNIEnv*
    env, jobject jcaller,
    jboolean allowed) {
  return SetFullscreenAllowed(env, base::android::JavaParamRef<jobject>(env,
      jcaller), allowed);
}

static void SetRememberPasswordsEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean allow);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetRememberPasswordsEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean allow) {
  return SetRememberPasswordsEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller), allow);
}

static void SetPasswordManagerAutoSigninEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetPasswordManagerAutoSigninEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetPasswordManagerAutoSigninEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller), enabled);
}

static void SetProtectedMediaIdentifierEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetProtectedMediaIdentifierEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetProtectedMediaIdentifierEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller), enabled);
}

static jboolean GetAllowLocationEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAllowLocationEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetAllowLocationEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetNotificationsEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetNotificationsEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetNotificationsEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetNotificationsVibrateEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetNotificationsVibrateEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetNotificationsVibrateEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static void SetAllowLocationEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean allow);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetAllowLocationEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean allow) {
  return SetAllowLocationEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), allow);
}

static void SetNotificationsEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean allow);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetNotificationsEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean allow) {
  return SetNotificationsEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), allow);
}

static void SetNotificationsVibrateEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetNotificationsVibrateEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetNotificationsVibrateEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller), enabled);
}

static void SetPasswordEchoEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetPasswordEchoEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetPasswordEchoEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), enabled);
}

static void SetCrashReportingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean reporting);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetCrashReportingEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean reporting) {
  return SetCrashReportingEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), reporting);
}

static jboolean IsCrashReportingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeIsCrashReportingEnabled(JNIEnv*
    env, jobject jcaller) {
  return IsCrashReportingEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean CanPrefetchAndPrerender(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeCanPrefetchAndPrerender(JNIEnv*
    env, jobject jcaller) {
  return CanPrefetchAndPrerender(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static base::android::ScopedJavaLocalRef<jobject> GetAboutVersionStrings(JNIEnv*
    env, const base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jobject
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAboutVersionStrings(JNIEnv*
    env, jobject jcaller) {
  return GetAboutVersionStrings(env, base::android::JavaParamRef<jobject>(env,
      jcaller)).Release();
}

static void SetContextualSearchPreference(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    const base::android::JavaParamRef<jstring>& preference);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetContextualSearchPreference(JNIEnv*
    env, jobject jcaller,
    jstring preference) {
  return SetContextualSearchPreference(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, preference));
}

static base::android::ScopedJavaLocalRef<jstring>
    GetContextualSearchPreference(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetContextualSearchPreference(JNIEnv*
    env, jobject jcaller) {
  return GetContextualSearchPreference(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

static jboolean GetContextualSearchPreferenceIsManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetContextualSearchPreferenceIsManaged(JNIEnv*
    env, jobject jcaller) {
  return GetContextualSearchPreferenceIsManaged(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetSearchSuggestEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSearchSuggestEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetSearchSuggestEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static void SetSearchSuggestEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetSearchSuggestEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetSearchSuggestEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), enabled);
}

static jboolean GetSearchSuggestManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSearchSuggestManaged(JNIEnv*
    env, jobject jcaller) {
  return GetSearchSuggestManaged(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetSafeBrowsingExtendedReportingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSafeBrowsingExtendedReportingEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetSafeBrowsingExtendedReportingEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static void SetSafeBrowsingExtendedReportingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetSafeBrowsingExtendedReportingEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetSafeBrowsingExtendedReportingEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller), enabled);
}

static jboolean GetSafeBrowsingExtendedReportingManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSafeBrowsingExtendedReportingManaged(JNIEnv*
    env, jobject jcaller) {
  return GetSafeBrowsingExtendedReportingManaged(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetSafeBrowsingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSafeBrowsingEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetSafeBrowsingEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static void SetSafeBrowsingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetSafeBrowsingEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetSafeBrowsingEnabled(env, base::android::JavaParamRef<jobject>(env,
      jcaller), enabled);
}

static jboolean GetSafeBrowsingManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSafeBrowsingManaged(JNIEnv*
    env, jobject jcaller) {
  return GetSafeBrowsingManaged(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jboolean GetNetworkPredictionManaged(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetNetworkPredictionManaged(JNIEnv*
    env, jobject jcaller) {
  return GetNetworkPredictionManaged(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean ObsoleteNetworkPredictionOptionsHasUserSetting(JNIEnv* env,
    const base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeObsoleteNetworkPredictionOptionsHasUserSetting(JNIEnv*
    env, jobject jcaller) {
  return ObsoleteNetworkPredictionOptionsHasUserSetting(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static jboolean GetNetworkPredictionEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetNetworkPredictionEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetNetworkPredictionEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static void SetNetworkPredictionEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetNetworkPredictionEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetNetworkPredictionEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller), enabled);
}

static void SetResolveNavigationErrorEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetResolveNavigationErrorEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetResolveNavigationErrorEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller), enabled);
}

static void SetEulaAccepted(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetEulaAccepted(JNIEnv*
    env, jobject jcaller) {
  return SetEulaAccepted(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static void ResetAcceptLanguages(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    const base::android::JavaParamRef<jstring>& defaultLocale);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeResetAcceptLanguages(JNIEnv*
    env, jobject jcaller,
    jstring defaultLocale) {
  return ResetAcceptLanguages(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, defaultLocale));
}

static base::android::ScopedJavaLocalRef<jstring> GetSyncLastAccountId(JNIEnv*
    env, const base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSyncLastAccountId(JNIEnv*
    env, jobject jcaller) {
  return GetSyncLastAccountId(env, base::android::JavaParamRef<jobject>(env,
      jcaller)).Release();
}

static base::android::ScopedJavaLocalRef<jstring> GetSyncLastAccountName(JNIEnv*
    env, const base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSyncLastAccountName(JNIEnv*
    env, jobject jcaller) {
  return GetSyncLastAccountName(env, base::android::JavaParamRef<jobject>(env,
      jcaller)).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    GetSupervisedUserCustodianName(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserCustodianName(JNIEnv*
    env, jobject jcaller) {
  return GetSupervisedUserCustodianName(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    GetSupervisedUserCustodianEmail(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserCustodianEmail(JNIEnv*
    env, jobject jcaller) {
  return GetSupervisedUserCustodianEmail(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    GetSupervisedUserCustodianProfileImageURL(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserCustodianProfileImageURL(JNIEnv*
    env, jobject jcaller) {
  return GetSupervisedUserCustodianProfileImageURL(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

static jint GetDefaultSupervisedUserFilteringBehavior(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetDefaultSupervisedUserFilteringBehavior(JNIEnv*
    env, jobject jcaller) {
  return GetDefaultSupervisedUserFilteringBehavior(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static base::android::ScopedJavaLocalRef<jstring>
    GetSupervisedUserSecondCustodianName(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserSecondCustodianName(JNIEnv*
    env, jobject jcaller) {
  return GetSupervisedUserSecondCustodianName(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    GetSupervisedUserSecondCustodianEmail(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserSecondCustodianEmail(JNIEnv*
    env, jobject jcaller) {
  return GetSupervisedUserSecondCustodianEmail(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    GetSupervisedUserSecondCustodianProfileImageURL(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserSecondCustodianProfileImageURL(JNIEnv*
    env, jobject jcaller) {
  return GetSupervisedUserSecondCustodianProfileImageURL(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

static jboolean GetMetricsReportingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetMetricsReportingEnabled(JNIEnv*
    env, jobject jcaller) {
  return GetMetricsReportingEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller));
}

static void SetMetricsReportingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean enabled);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetMetricsReportingEnabled(JNIEnv*
    env, jobject jcaller,
    jboolean enabled) {
  return SetMetricsReportingEnabled(env,
      base::android::JavaParamRef<jobject>(env, jcaller), enabled);
}

static jboolean HasSetMetricsReporting(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeHasSetMetricsReporting(JNIEnv*
    env, jobject jcaller) {
  return HasSetMetricsReporting(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static void SetClickedUpdateMenuItem(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    jboolean clicked);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetClickedUpdateMenuItem(JNIEnv*
    env, jobject jcaller,
    jboolean clicked) {
  return SetClickedUpdateMenuItem(env, base::android::JavaParamRef<jobject>(env,
      jcaller), clicked);
}

static jboolean GetClickedUpdateMenuItem(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetClickedUpdateMenuItem(JNIEnv*
    env, jobject jcaller) {
  return GetClickedUpdateMenuItem(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static void SetLatestVersionWhenClickedUpdateMenuItem(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    const base::android::JavaParamRef<jstring>& version);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetLatestVersionWhenClickedUpdateMenuItem(JNIEnv*
    env, jobject jcaller,
    jstring version) {
  return SetLatestVersionWhenClickedUpdateMenuItem(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, version));
}

static base::android::ScopedJavaLocalRef<jstring>
    GetLatestVersionWhenClickedUpdateMenuItem(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetLatestVersionWhenClickedUpdateMenuItem(JNIEnv*
    env, jobject jcaller) {
  return GetLatestVersionWhenClickedUpdateMenuItem(env,
      base::android::JavaParamRef<jobject>(env, jcaller)).Release();
}

static void SetSupervisedUserId(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    const base::android::JavaParamRef<jstring>& supervisedUserId);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetSupervisedUserId(JNIEnv*
    env, jobject jcaller,
    jstring supervisedUserId) {
  return SetSupervisedUserId(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, supervisedUserId));
}

static base::subtle::AtomicWord
    g_ImportantSitesCallback_onImportantRegisterableDomainsReady = 0;
static void
    Java_ImportantSitesCallback_onImportantRegisterableDomainsReady(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& obj, const
    base::android::JavaRefOrBare<jobjectArray>& domains,
    const base::android::JavaRefOrBare<jobjectArray>& exampleOrigins,
    const base::android::JavaRefOrBare<jintArray>& importantReasons) {
  CHECK_CLAZZ(env, obj.obj(),
      ImportantSitesCallback_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, ImportantSitesCallback_clazz(env),
      "onImportantRegisterableDomainsReady",

"("
"[Ljava/lang/String;"
"[Ljava/lang/String;"
"[I"
")"
"V",
      &g_ImportantSitesCallback_onImportantRegisterableDomainsReady);

     env->CallVoidMethod(obj.obj(),
          method_id, domains.obj(), exampleOrigins.obj(),
              importantReasons.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_OtherFormsOfBrowsingHistoryListener_enableDialogAboutOtherFormsOfBrowsingHistory
    = 0;
static void
    Java_OtherFormsOfBrowsingHistoryListener_enableDialogAboutOtherFormsOfBrowsingHistory(JNIEnv*
    env, const base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      OtherFormsOfBrowsingHistoryListener_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, OtherFormsOfBrowsingHistoryListener_clazz(env),
      "enableDialogAboutOtherFormsOfBrowsingHistory",

"("
")"
"V",
&g_OtherFormsOfBrowsingHistoryListener_enableDialogAboutOtherFormsOfBrowsingHistory);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_OtherFormsOfBrowsingHistoryListener_showNoticeAboutOtherFormsOfBrowsingHistory
    = 0;
static void
    Java_OtherFormsOfBrowsingHistoryListener_showNoticeAboutOtherFormsOfBrowsingHistory(JNIEnv*
    env, const base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      OtherFormsOfBrowsingHistoryListener_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, OtherFormsOfBrowsingHistoryListener_clazz(env),
      "showNoticeAboutOtherFormsOfBrowsingHistory",

"("
")"
"V",
&g_OtherFormsOfBrowsingHistoryListener_showNoticeAboutOtherFormsOfBrowsingHistory);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_PrefServiceBridge_createAboutVersionStrings =
    0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_PrefServiceBridge_createAboutVersionStrings(JNIEnv* env, const
    base::android::JavaRefOrBare<jstring>& applicationVersion,
    const base::android::JavaRefOrBare<jstring>& osVersion) {
  CHECK_CLAZZ(env, PrefServiceBridge_clazz(env),
      PrefServiceBridge_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, PrefServiceBridge_clazz(env),
      "createAboutVersionStrings",

"("
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/preferences/PrefServiceBridge$AboutVersionStrings;",
      &g_PrefServiceBridge_createAboutVersionStrings);

  jobject ret =
      env->CallStaticObjectMethod(PrefServiceBridge_clazz(env),
          method_id, applicationVersion.obj(), osVersion.obj());
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord
    g_PrefServiceBridge_addContentSettingExceptionToList = 0;
static void Java_PrefServiceBridge_addContentSettingExceptionToList(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& list,
    JniIntWrapper contentSettingsType,
    const base::android::JavaRefOrBare<jstring>& pattern,
    JniIntWrapper contentSetting,
    const base::android::JavaRefOrBare<jstring>& source) {
  CHECK_CLAZZ(env, PrefServiceBridge_clazz(env),
      PrefServiceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, PrefServiceBridge_clazz(env),
      "addContentSettingExceptionToList",

"("
"Ljava/util/ArrayList;"
"I"
"Ljava/lang/String;"
"I"
"Ljava/lang/String;"
")"
"V",
      &g_PrefServiceBridge_addContentSettingExceptionToList);

     env->CallStaticVoidMethod(PrefServiceBridge_clazz(env),
          method_id, list.obj(), as_jint(contentSettingsType), pattern.obj(),
              as_jint(contentSetting), source.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_PrefServiceBridge_getAndroidPermissionForContentSetting = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_PrefServiceBridge_getAndroidPermissionForContentSetting(JNIEnv* env,
    JniIntWrapper contentSettingType) {
  CHECK_CLAZZ(env, PrefServiceBridge_clazz(env),
      PrefServiceBridge_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, PrefServiceBridge_clazz(env),
      "getAndroidPermissionForContentSetting",

"("
"I"
")"
"Ljava/lang/String;",
      &g_PrefServiceBridge_getAndroidPermissionForContentSetting);

  jstring ret =
static_cast<jstring>(env->CallStaticObjectMethod(PrefServiceBridge_clazz(env),
          method_id, as_jint(contentSettingType)));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_PrefServiceBridge_browsingDataCleared = 0;
static void Java_PrefServiceBridge_browsingDataCleared(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      PrefServiceBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, PrefServiceBridge_clazz(env),
      "browsingDataCleared",

"("
")"
"V",
      &g_PrefServiceBridge_browsingDataCleared);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsPrefServiceBridge[] = {
    { "nativeIsContentSettingEnabled",
"("
"I"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeIsContentSettingEnabled)
    },
    { "nativeIsContentSettingManaged",
"("
"I"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeIsContentSettingManaged)
    },
    { "nativeSetContentSettingEnabled",
"("
"I"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetContentSettingEnabled)
    },
    { "nativeGetContentSettingsExceptions",
"("
"I"
"Ljava/util/List;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetContentSettingsExceptions)
    },
    { "nativeSetContentSettingForPattern",
"("
"I"
"Ljava/lang/String;"
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetContentSettingForPattern)
    },
    { "nativeGetAcceptCookiesEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAcceptCookiesEnabled)
    },
    { "nativeGetAcceptCookiesManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAcceptCookiesManaged)
    },
    { "nativeGetAutoplayEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAutoplayEnabled)
    },
    { "nativeGetBackgroundSyncEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetBackgroundSyncEnabled)
    },
    { "nativeGetBlockThirdPartyCookiesEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetBlockThirdPartyCookiesEnabled)
    },
    { "nativeGetBlockThirdPartyCookiesManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetBlockThirdPartyCookiesManaged)
    },
    { "nativeGetRememberPasswordsEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetRememberPasswordsEnabled)
    },
    { "nativeGetPasswordManagerAutoSigninEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetPasswordManagerAutoSigninEnabled)
    },
    { "nativeGetRememberPasswordsManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetRememberPasswordsManaged)
    },
    { "nativeGetPasswordManagerAutoSigninManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetPasswordManagerAutoSigninManaged)
    },
    { "nativeGetAllowLocationUserModifiable",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAllowLocationUserModifiable)
    },
    { "nativeGetLocationAllowedByPolicy",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetLocationAllowedByPolicy)
    },
    { "nativeGetAllowLocationManagedByCustodian",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAllowLocationManagedByCustodian)
    },
    { "nativeGetDoNotTrackEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetDoNotTrackEnabled)
    },
    { "nativeGetPasswordEchoEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetPasswordEchoEnabled)
    },
    { "nativeGetFirstRunEulaAccepted",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetFirstRunEulaAccepted)
    },
    { "nativeGetCameraEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetCameraEnabled)
    },
    { "nativeSetCameraEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetCameraEnabled)
    },
    { "nativeGetCameraUserModifiable",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetCameraUserModifiable)
    },
    { "nativeGetCameraManagedByCustodian",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetCameraManagedByCustodian)
    },
    { "nativeGetMicEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetMicEnabled)
    },
    { "nativeSetMicEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetMicEnabled)
    },
    { "nativeGetMicUserModifiable",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetMicUserModifiable)
    },
    { "nativeGetMicManagedByCustodian",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetMicManagedByCustodian)
    },
    { "nativeGetFullscreenAllowed",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetFullscreenAllowed)
    },
    { "nativeGetFullscreenManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetFullscreenManaged)
    },
    { "nativeGetTranslateEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetTranslateEnabled)
    },
    { "nativeGetTranslateManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetTranslateManaged)
    },
    { "nativeGetResolveNavigationErrorEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetResolveNavigationErrorEnabled)
    },
    { "nativeGetResolveNavigationErrorManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetResolveNavigationErrorManaged)
    },
    { "nativeGetProtectedMediaIdentifierEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetProtectedMediaIdentifierEnabled)
    },
    { "nativeGetCrashReportManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetCrashReportManaged)
    },
    { "nativeGetIncognitoModeEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetIncognitoModeEnabled)
    },
    { "nativeGetIncognitoModeManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetIncognitoModeManaged)
    },
    { "nativeGetPrintingEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetPrintingEnabled)
    },
    { "nativeGetPrintingManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetPrintingManaged)
    },
    { "nativeGetSupervisedUserSafeSitesEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserSafeSitesEnabled)
    },
    { "nativeSetTranslateEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetTranslateEnabled)
    },
    { "nativeResetTranslateDefaults",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeResetTranslateDefaults)
    },
    { "nativeMigrateJavascriptPreference",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeMigrateJavascriptPreference)
    },
    { "nativeGetBrowsingDataDeletionPreference",
"("
"I"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetBrowsingDataDeletionPreference)
    },
    { "nativeSetBrowsingDataDeletionPreference",
"("
"I"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetBrowsingDataDeletionPreference)
    },
    { "nativeGetBrowsingDataDeletionTimePeriod",
"("
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetBrowsingDataDeletionTimePeriod)
    },
    { "nativeSetBrowsingDataDeletionTimePeriod",
"("
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetBrowsingDataDeletionTimePeriod)
    },
    { "nativeClearBrowsingData",
"("
"[I"
"I"
"[Ljava/lang/String;"
"[I"
"[Ljava/lang/String;"
"[I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeClearBrowsingData)
    },
    { "nativeRequestInfoAboutOtherFormsOfBrowsingHistory",
"("
"Lorg/chromium/chrome/browser/preferences/PrefServiceBridge$OtherFormsOfBrowsingHistoryListener;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeRequestInfoAboutOtherFormsOfBrowsingHistory)
    },
    { "nativeCanDeleteBrowsingHistory",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeCanDeleteBrowsingHistory)
    },
    { "nativeFetchImportantSites",
"("
"Lorg/chromium/chrome/browser/preferences/PrefServiceBridge$ImportantSitesCallback;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeFetchImportantSites)
    },
    { "nativeGetMaxImportantSites",
"("
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetMaxImportantSites)
    },
    { "nativeMarkOriginAsImportantForTesting",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeMarkOriginAsImportantForTesting)
    },
    { "nativeSetAutoplayEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetAutoplayEnabled)
    },
    { "nativeSetAllowCookiesEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetAllowCookiesEnabled)
    },
    { "nativeSetBackgroundSyncEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetBackgroundSyncEnabled)
    },
    { "nativeSetBlockThirdPartyCookiesEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetBlockThirdPartyCookiesEnabled)
    },
    { "nativeSetDoNotTrackEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetDoNotTrackEnabled)
    },
    { "nativeSetFullscreenAllowed",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetFullscreenAllowed)
    },
    { "nativeSetRememberPasswordsEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetRememberPasswordsEnabled)
    },
    { "nativeSetPasswordManagerAutoSigninEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetPasswordManagerAutoSigninEnabled)
    },
    { "nativeSetProtectedMediaIdentifierEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetProtectedMediaIdentifierEnabled)
    },
    { "nativeGetAllowLocationEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAllowLocationEnabled)
    },
    { "nativeGetNotificationsEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetNotificationsEnabled)
    },
    { "nativeGetNotificationsVibrateEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetNotificationsVibrateEnabled)
    },
    { "nativeSetAllowLocationEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetAllowLocationEnabled)
    },
    { "nativeSetNotificationsEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetNotificationsEnabled)
    },
    { "nativeSetNotificationsVibrateEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetNotificationsVibrateEnabled)
    },
    { "nativeSetPasswordEchoEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetPasswordEchoEnabled)
    },
    { "nativeSetCrashReportingEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetCrashReportingEnabled)
    },
    { "nativeIsCrashReportingEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeIsCrashReportingEnabled)
    },
    { "nativeCanPrefetchAndPrerender",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeCanPrefetchAndPrerender)
    },
    { "nativeGetAboutVersionStrings",
"("
")"
"Lorg/chromium/chrome/browser/preferences/PrefServiceBridge$AboutVersionStrings;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetAboutVersionStrings)
    },
    { "nativeSetContextualSearchPreference",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetContextualSearchPreference)
    },
    { "nativeGetContextualSearchPreference",
"("
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetContextualSearchPreference)
    },
    { "nativeGetContextualSearchPreferenceIsManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetContextualSearchPreferenceIsManaged)
    },
    { "nativeGetSearchSuggestEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSearchSuggestEnabled)
    },
    { "nativeSetSearchSuggestEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetSearchSuggestEnabled)
    },
    { "nativeGetSearchSuggestManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSearchSuggestManaged)
    },
    { "nativeGetSafeBrowsingExtendedReportingEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSafeBrowsingExtendedReportingEnabled)
    },
    { "nativeSetSafeBrowsingExtendedReportingEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetSafeBrowsingExtendedReportingEnabled)
    },
    { "nativeGetSafeBrowsingExtendedReportingManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSafeBrowsingExtendedReportingManaged)
    },
    { "nativeGetSafeBrowsingEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSafeBrowsingEnabled)
    },
    { "nativeSetSafeBrowsingEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetSafeBrowsingEnabled)
    },
    { "nativeGetSafeBrowsingManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSafeBrowsingManaged)
    },
    { "nativeGetNetworkPredictionManaged",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetNetworkPredictionManaged)
    },
    { "nativeObsoleteNetworkPredictionOptionsHasUserSetting",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeObsoleteNetworkPredictionOptionsHasUserSetting)
    },
    { "nativeGetNetworkPredictionEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetNetworkPredictionEnabled)
    },
    { "nativeSetNetworkPredictionEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetNetworkPredictionEnabled)
    },
    { "nativeSetResolveNavigationErrorEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetResolveNavigationErrorEnabled)
    },
    { "nativeSetEulaAccepted",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetEulaAccepted)
    },
    { "nativeResetAcceptLanguages",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeResetAcceptLanguages)
    },
    { "nativeGetSyncLastAccountId",
"("
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSyncLastAccountId)
    },
    { "nativeGetSyncLastAccountName",
"("
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSyncLastAccountName)
    },
    { "nativeGetSupervisedUserCustodianName",
"("
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserCustodianName)
    },
    { "nativeGetSupervisedUserCustodianEmail",
"("
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserCustodianEmail)
    },
    { "nativeGetSupervisedUserCustodianProfileImageURL",
"("
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserCustodianProfileImageURL)
    },
    { "nativeGetDefaultSupervisedUserFilteringBehavior",
"("
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetDefaultSupervisedUserFilteringBehavior)
    },
    { "nativeGetSupervisedUserSecondCustodianName",
"("
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserSecondCustodianName)
    },
    { "nativeGetSupervisedUserSecondCustodianEmail",
"("
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserSecondCustodianEmail)
    },
    { "nativeGetSupervisedUserSecondCustodianProfileImageURL",
"("
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetSupervisedUserSecondCustodianProfileImageURL)
    },
    { "nativeGetMetricsReportingEnabled",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetMetricsReportingEnabled)
    },
    { "nativeSetMetricsReportingEnabled",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetMetricsReportingEnabled)
    },
    { "nativeHasSetMetricsReporting",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeHasSetMetricsReporting)
    },
    { "nativeSetClickedUpdateMenuItem",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetClickedUpdateMenuItem)
    },
    { "nativeGetClickedUpdateMenuItem",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetClickedUpdateMenuItem)
    },
    { "nativeSetLatestVersionWhenClickedUpdateMenuItem",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetLatestVersionWhenClickedUpdateMenuItem)
    },
    { "nativeGetLatestVersionWhenClickedUpdateMenuItem",
"("
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeGetLatestVersionWhenClickedUpdateMenuItem)
    },
    { "nativeSetSupervisedUserId",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_preferences_PrefServiceBridge_nativeSetSupervisedUserId)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsPrefServiceBridgeSize =
      arraysize(kMethodsPrefServiceBridge);

  if (env->RegisterNatives(PrefServiceBridge_clazz(env),
                           kMethodsPrefServiceBridge,
                           kMethodsPrefServiceBridgeSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, PrefServiceBridge_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // org_chromium_chrome_browser_preferences_PrefServiceBridge_JNI
