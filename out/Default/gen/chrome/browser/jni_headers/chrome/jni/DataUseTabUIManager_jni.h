// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/datausage/DataUseTabUIManager

#ifndef org_chromium_chrome_browser_datausage_DataUseTabUIManager_JNI
#define org_chromium_chrome_browser_datausage_DataUseTabUIManager_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kDataUseTabUIManagerClassPath[] =
    "org/chromium/chrome/browser/datausage/DataUseTabUIManager";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_DataUseTabUIManager_clazz __attribute__((unused)) =
    0;
#define DataUseTabUIManager_clazz(env) base::android::LazyGetClass(env, kDataUseTabUIManagerClassPath, &g_DataUseTabUIManager_clazz)

}  // namespace

// Step 2: method stubs.

static jboolean CheckAndResetDataUseTrackingStarted(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jint tabId,
    const base::android::JavaParamRef<jobject>& profile);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeCheckAndResetDataUseTrackingStarted(JNIEnv*
    env, jclass jcaller,
    jint tabId,
    jobject profile) {
  return CheckAndResetDataUseTrackingStarted(env,
      base::android::JavaParamRef<jclass>(env, jcaller), tabId,
      base::android::JavaParamRef<jobject>(env, profile));
}

static jboolean CheckAndResetDataUseTrackingEnded(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jint tabId,
    const base::android::JavaParamRef<jobject>& profile);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeCheckAndResetDataUseTrackingEnded(JNIEnv*
    env, jclass jcaller,
    jint tabId,
    jobject profile) {
  return CheckAndResetDataUseTrackingEnded(env,
      base::android::JavaParamRef<jclass>(env, jcaller), tabId,
      base::android::JavaParamRef<jobject>(env, profile));
}

static void UserClickedContinueOnDialogBox(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jint tabId,
    const base::android::JavaParamRef<jobject>& profile);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeUserClickedContinueOnDialogBox(JNIEnv*
    env, jclass jcaller,
    jint tabId,
    jobject profile) {
  return UserClickedContinueOnDialogBox(env,
      base::android::JavaParamRef<jclass>(env, jcaller), tabId,
      base::android::JavaParamRef<jobject>(env, profile));
}

static jboolean WouldDataUseTrackingEnd(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jobject>& webContents,
    jint tabId,
    const base::android::JavaParamRef<jstring>& url,
    jint pageTransitionType,
    const base::android::JavaParamRef<jobject>& jprofile);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeWouldDataUseTrackingEnd(JNIEnv*
    env, jclass jcaller,
    jobject webContents,
    jint tabId,
    jstring url,
    jint pageTransitionType,
    jobject jprofile) {
  return WouldDataUseTrackingEnd(env, base::android::JavaParamRef<jclass>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, webContents), tabId,
      base::android::JavaParamRef<jstring>(env, url), pageTransitionType,
      base::android::JavaParamRef<jobject>(env, jprofile));
}

static void OnCustomTabInitialNavigation(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jint tabID,
    const base::android::JavaParamRef<jstring>& packageName,
    const base::android::JavaParamRef<jstring>& url,
    const base::android::JavaParamRef<jobject>& profile);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeOnCustomTabInitialNavigation(JNIEnv*
    env, jclass jcaller,
    jint tabID,
    jstring packageName,
    jstring url,
    jobject profile) {
  return OnCustomTabInitialNavigation(env,
      base::android::JavaParamRef<jclass>(env, jcaller), tabID,
      base::android::JavaParamRef<jstring>(env, packageName),
      base::android::JavaParamRef<jstring>(env, url),
      base::android::JavaParamRef<jobject>(env, profile));
}

static base::android::ScopedJavaLocalRef<jstring> GetDataUseUIString(JNIEnv*
    env, const base::android::JavaParamRef<jclass>& jcaller,
    jint messageID);

extern "C" __attribute__((visibility("default")))
jstring
    Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeGetDataUseUIString(JNIEnv*
    env, jclass jcaller,
    jint messageID) {
  return GetDataUseUIString(env, base::android::JavaParamRef<jclass>(env,
      jcaller), messageID).Release();
}

static jboolean IsNonRoamingCellularConnection(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller);

extern "C" __attribute__((visibility("default")))
jboolean
    Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeIsNonRoamingCellularConnection(JNIEnv*
    env, jclass jcaller) {
  return IsNonRoamingCellularConnection(env,
      base::android::JavaParamRef<jclass>(env, jcaller));
}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsDataUseTabUIManager[] = {
    { "nativeCheckAndResetDataUseTrackingStarted",
"("
"I"
"Lorg/chromium/chrome/browser/profiles/Profile;"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeCheckAndResetDataUseTrackingStarted)
    },
    { "nativeCheckAndResetDataUseTrackingEnded",
"("
"I"
"Lorg/chromium/chrome/browser/profiles/Profile;"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeCheckAndResetDataUseTrackingEnded)
    },
    { "nativeUserClickedContinueOnDialogBox",
"("
"I"
"Lorg/chromium/chrome/browser/profiles/Profile;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeUserClickedContinueOnDialogBox)
    },
    { "nativeWouldDataUseTrackingEnd",
"("
"Lorg/chromium/content_public/browser/WebContents;"
"I"
"Ljava/lang/String;"
"I"
"Lorg/chromium/chrome/browser/profiles/Profile;"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeWouldDataUseTrackingEnd)
    },
    { "nativeOnCustomTabInitialNavigation",
"("
"I"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Lorg/chromium/chrome/browser/profiles/Profile;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeOnCustomTabInitialNavigation)
    },
    { "nativeGetDataUseUIString",
"("
"I"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeGetDataUseUIString)
    },
    { "nativeIsNonRoamingCellularConnection",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_datausage_DataUseTabUIManager_nativeIsNonRoamingCellularConnection)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsDataUseTabUIManagerSize =
      arraysize(kMethodsDataUseTabUIManager);

  if (env->RegisterNatives(DataUseTabUIManager_clazz(env),
                           kMethodsDataUseTabUIManager,
                           kMethodsDataUseTabUIManagerSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, DataUseTabUIManager_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // org_chromium_chrome_browser_datausage_DataUseTabUIManager_JNI
