// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/provider/ChromeBrowserProvider

#ifndef org_chromium_chrome_browser_provider_ChromeBrowserProvider_JNI
#define org_chromium_chrome_browser_provider_ChromeBrowserProvider_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kChromeBrowserProviderClassPath[] =
    "org/chromium/chrome/browser/provider/ChromeBrowserProvider";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_ChromeBrowserProvider_clazz __attribute__((unused)) =
    0;
#define ChromeBrowserProvider_clazz(env) base::android::LazyGetClass(env, kChromeBrowserProviderClassPath, &g_ChromeBrowserProvider_clazz)

}  // namespace

// Step 2: method stubs.

static jlong Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    jcaller);

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeInit(JNIEnv*
    env, jobject jcaller) {
  return Init(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeDestroy(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeAddBookmark(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jstring url,
    jstring title,
    jboolean isFolder,
    jlong parentId) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "AddBookmark", 0);
  return native->AddBookmark(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, url),
      base::android::JavaParamRef<jstring>(env, title), isFolder, parentId);
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeRemoveBookmark(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jlong id) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "RemoveBookmark", 0);
  return native->RemoveBookmark(env, base::android::JavaParamRef<jobject>(env,
      jcaller), id);
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeUpdateBookmark(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jlong id,
    jstring url,
    jstring title,
    jlong parentId) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "UpdateBookmark", 0);
  return native->UpdateBookmark(env, base::android::JavaParamRef<jobject>(env,
      jcaller), id, base::android::JavaParamRef<jstring>(env, url),
      base::android::JavaParamRef<jstring>(env, title), parentId);
}

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeAddBookmarkFromAPI(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jstring url,
    jobject created,
    jobject isBookmark,
    jobject date,
    jbyteArray favicon,
    jstring title,
    jobject visits,
    jlong parentId) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "AddBookmarkFromAPI", 0);
  return native->AddBookmarkFromAPI(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, url),
      base::android::JavaParamRef<jobject>(env, created),
      base::android::JavaParamRef<jobject>(env, isBookmark),
      base::android::JavaParamRef<jobject>(env, date),
      base::android::JavaParamRef<jbyteArray>(env, favicon),
      base::android::JavaParamRef<jstring>(env, title),
      base::android::JavaParamRef<jobject>(env, visits), parentId);
}

extern "C" __attribute__((visibility("default")))
jobject
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeQueryBookmarkFromAPI(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jobjectArray projection,
    jstring selection,
    jobjectArray selectionArgs,
    jstring sortOrder) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "QueryBookmarkFromAPI", NULL);
  return native->QueryBookmarkFromAPI(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobjectArray>(env, projection),
      base::android::JavaParamRef<jstring>(env, selection),
      base::android::JavaParamRef<jobjectArray>(env, selectionArgs),
      base::android::JavaParamRef<jstring>(env, sortOrder)).Release();
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeUpdateBookmarkFromAPI(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jstring url,
    jobject created,
    jobject isBookmark,
    jobject date,
    jbyteArray favicon,
    jstring title,
    jobject visits,
    jlong parentId,
    jstring selection,
    jobjectArray selectionArgs) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "UpdateBookmarkFromAPI", 0);
  return native->UpdateBookmarkFromAPI(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, url),
      base::android::JavaParamRef<jobject>(env, created),
      base::android::JavaParamRef<jobject>(env, isBookmark),
      base::android::JavaParamRef<jobject>(env, date),
      base::android::JavaParamRef<jbyteArray>(env, favicon),
      base::android::JavaParamRef<jstring>(env, title),
      base::android::JavaParamRef<jobject>(env, visits), parentId,
      base::android::JavaParamRef<jstring>(env, selection),
      base::android::JavaParamRef<jobjectArray>(env, selectionArgs));
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeRemoveBookmarkFromAPI(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jstring selection,
    jobjectArray selectionArgs) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "RemoveBookmarkFromAPI", 0);
  return native->RemoveBookmarkFromAPI(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, selection),
      base::android::JavaParamRef<jobjectArray>(env, selectionArgs));
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeRemoveHistoryFromAPI(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jstring selection,
    jobjectArray selectionArgs) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "RemoveHistoryFromAPI", 0);
  return native->RemoveHistoryFromAPI(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, selection),
      base::android::JavaParamRef<jobjectArray>(env, selectionArgs));
}

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeAddSearchTermFromAPI(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jstring term,
    jobject date) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "AddSearchTermFromAPI", 0);
  return native->AddSearchTermFromAPI(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, term),
      base::android::JavaParamRef<jobject>(env, date));
}

extern "C" __attribute__((visibility("default")))
jobject
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeQuerySearchTermFromAPI(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jobjectArray projection,
    jstring selection,
    jobjectArray selectionArgs,
    jstring sortOrder) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "QuerySearchTermFromAPI", NULL);
  return native->QuerySearchTermFromAPI(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobjectArray>(env, projection),
      base::android::JavaParamRef<jstring>(env, selection),
      base::android::JavaParamRef<jobjectArray>(env, selectionArgs),
      base::android::JavaParamRef<jstring>(env, sortOrder)).Release();
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeUpdateSearchTermFromAPI(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jstring search,
    jobject date,
    jstring selection,
    jobjectArray selectionArgs) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "UpdateSearchTermFromAPI", 0);
  return native->UpdateSearchTermFromAPI(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, search),
      base::android::JavaParamRef<jobject>(env, date),
      base::android::JavaParamRef<jstring>(env, selection),
      base::android::JavaParamRef<jobjectArray>(env, selectionArgs));
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeRemoveSearchTermFromAPI(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeChromeBrowserProvider,
    jstring selection,
    jobjectArray selectionArgs) {
  ChromeBrowserProvider* native =
      reinterpret_cast<ChromeBrowserProvider*>(nativeChromeBrowserProvider);
  CHECK_NATIVE_PTR(env, jcaller, native, "RemoveSearchTermFromAPI", 0);
  return native->RemoveSearchTermFromAPI(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, selection),
      base::android::JavaParamRef<jobjectArray>(env, selectionArgs));
}

static base::subtle::AtomicWord g_ChromeBrowserProvider_onBookmarkChanged = 0;
static void Java_ChromeBrowserProvider_onBookmarkChanged(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      ChromeBrowserProvider_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, ChromeBrowserProvider_clazz(env),
      "onBookmarkChanged",

"("
")"
"V",
      &g_ChromeBrowserProvider_onBookmarkChanged);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_ChromeBrowserProvider_onHistoryChanged = 0;
static void Java_ChromeBrowserProvider_onHistoryChanged(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      ChromeBrowserProvider_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, ChromeBrowserProvider_clazz(env),
      "onHistoryChanged",

"("
")"
"V",
      &g_ChromeBrowserProvider_onHistoryChanged);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_ChromeBrowserProvider_onSearchTermChanged = 0;
static void Java_ChromeBrowserProvider_onSearchTermChanged(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      ChromeBrowserProvider_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, ChromeBrowserProvider_clazz(env),
      "onSearchTermChanged",

"("
")"
"V",
      &g_ChromeBrowserProvider_onSearchTermChanged);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);

}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsChromeBrowserProvider[] = {
    { "nativeInit",
"("
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeInit)
    },
    { "nativeDestroy",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeDestroy)
    },
    { "nativeAddBookmark",
"("
"J"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
"J"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeAddBookmark)
    },
    { "nativeRemoveBookmark",
"("
"J"
"J"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeRemoveBookmark)
    },
    { "nativeUpdateBookmark",
"("
"J"
"J"
"Ljava/lang/String;"
"Ljava/lang/String;"
"J"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeUpdateBookmark)
    },
    { "nativeAddBookmarkFromAPI",
"("
"J"
"Ljava/lang/String;"
"Ljava/lang/Long;"
"Ljava/lang/Boolean;"
"Ljava/lang/Long;"
"[B"
"Ljava/lang/String;"
"Ljava/lang/Integer;"
"J"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeAddBookmarkFromAPI)
    },
    { "nativeQueryBookmarkFromAPI",
"("
"J"
"[Ljava/lang/String;"
"Ljava/lang/String;"
"[Ljava/lang/String;"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/database/SQLiteCursor;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeQueryBookmarkFromAPI)
    },
    { "nativeUpdateBookmarkFromAPI",
"("
"J"
"Ljava/lang/String;"
"Ljava/lang/Long;"
"Ljava/lang/Boolean;"
"Ljava/lang/Long;"
"[B"
"Ljava/lang/String;"
"Ljava/lang/Integer;"
"J"
"Ljava/lang/String;"
"[Ljava/lang/String;"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeUpdateBookmarkFromAPI)
    },
    { "nativeRemoveBookmarkFromAPI",
"("
"J"
"Ljava/lang/String;"
"[Ljava/lang/String;"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeRemoveBookmarkFromAPI)
    },
    { "nativeRemoveHistoryFromAPI",
"("
"J"
"Ljava/lang/String;"
"[Ljava/lang/String;"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeRemoveHistoryFromAPI)
    },
    { "nativeAddSearchTermFromAPI",
"("
"J"
"Ljava/lang/String;"
"Ljava/lang/Long;"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeAddSearchTermFromAPI)
    },
    { "nativeQuerySearchTermFromAPI",
"("
"J"
"[Ljava/lang/String;"
"Ljava/lang/String;"
"[Ljava/lang/String;"
"Ljava/lang/String;"
")"
"Lorg/chromium/chrome/browser/database/SQLiteCursor;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeQuerySearchTermFromAPI)
    },
    { "nativeUpdateSearchTermFromAPI",
"("
"J"
"Ljava/lang/String;"
"Ljava/lang/Long;"
"Ljava/lang/String;"
"[Ljava/lang/String;"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeUpdateSearchTermFromAPI)
    },
    { "nativeRemoveSearchTermFromAPI",
"("
"J"
"Ljava/lang/String;"
"[Ljava/lang/String;"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_provider_ChromeBrowserProvider_nativeRemoveSearchTermFromAPI)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsChromeBrowserProviderSize =
      arraysize(kMethodsChromeBrowserProvider);

  if (env->RegisterNatives(ChromeBrowserProvider_clazz(env),
                           kMethodsChromeBrowserProvider,
                           kMethodsChromeBrowserProviderSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, ChromeBrowserProvider_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // org_chromium_chrome_browser_provider_ChromeBrowserProvider_JNI
