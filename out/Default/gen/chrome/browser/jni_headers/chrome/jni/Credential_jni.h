// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/password_manager/Credential

#ifndef org_chromium_chrome_browser_password_manager_Credential_JNI
#define org_chromium_chrome_browser_password_manager_Credential_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kCredentialClassPath[] =
    "org/chromium/chrome/browser/password_manager/Credential";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_Credential_clazz __attribute__((unused)) = 0;
#define Credential_clazz(env) base::android::LazyGetClass(env, kCredentialClassPath, &g_Credential_clazz)

}  // namespace

// Step 2: method stubs.

static base::subtle::AtomicWord g_Credential_createCredential = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_Credential_createCredential(JNIEnv* env, const
    base::android::JavaRefOrBare<jstring>& username,
    const base::android::JavaRefOrBare<jstring>& displayName,
    const base::android::JavaRefOrBare<jstring>& federation,
    JniIntWrapper type,
    JniIntWrapper index) {
  CHECK_CLAZZ(env, Credential_clazz(env),
      Credential_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, Credential_clazz(env),
      "createCredential",

"("
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"I"
"I"
")"
"Lorg/chromium/chrome/browser/password_manager/Credential;",
      &g_Credential_createCredential);

  jobject ret =
      env->CallStaticObjectMethod(Credential_clazz(env),
          method_id, username.obj(), displayName.obj(), federation.obj(),
              as_jint(type), as_jint(index));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_Credential_createCredentialArray = 0;
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_Credential_createCredentialArray(JNIEnv* env, JniIntWrapper size) {
  CHECK_CLAZZ(env, Credential_clazz(env),
      Credential_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, Credential_clazz(env),
      "createCredentialArray",

"("
"I"
")"
"[Lorg/chromium/chrome/browser/password_manager/Credential;",
      &g_Credential_createCredentialArray);

  jobjectArray ret =
static_cast<jobjectArray>(env->CallStaticObjectMethod(Credential_clazz(env),
          method_id, as_jint(size)));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

// Step 3: RegisterNatives.

#endif  // org_chromium_chrome_browser_password_manager_Credential_JNI
