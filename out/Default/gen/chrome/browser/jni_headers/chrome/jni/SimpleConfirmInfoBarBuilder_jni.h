// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/infobar/SimpleConfirmInfoBarBuilder

#ifndef org_chromium_chrome_browser_infobar_SimpleConfirmInfoBarBuilder_JNI
#define org_chromium_chrome_browser_infobar_SimpleConfirmInfoBarBuilder_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kSimpleConfirmInfoBarBuilderClassPath[] =
    "org/chromium/chrome/browser/infobar/SimpleConfirmInfoBarBuilder";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_SimpleConfirmInfoBarBuilder_clazz
    __attribute__((unused)) = 0;
#define SimpleConfirmInfoBarBuilder_clazz(env) base::android::LazyGetClass(env, kSimpleConfirmInfoBarBuilderClassPath, &g_SimpleConfirmInfoBarBuilder_clazz)

}  // namespace

// Step 2: method stubs.

static void Create(JNIEnv* env, const base::android::JavaParamRef<jclass>&
    jcaller,
    const base::android::JavaParamRef<jobject>& tab,
    jint infobarTypeIdentifier,
    const base::android::JavaParamRef<jobject>& drawable,
    const base::android::JavaParamRef<jstring>& message,
    const base::android::JavaParamRef<jstring>& primaryText,
    const base::android::JavaParamRef<jstring>& secondaryText,
    jboolean autoExpire,
    const base::android::JavaParamRef<jobject>& listener);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_infobar_SimpleConfirmInfoBarBuilder_nativeCreate(JNIEnv*
    env, jclass jcaller,
    jobject tab,
    jint infobarTypeIdentifier,
    jobject drawable,
    jstring message,
    jstring primaryText,
    jstring secondaryText,
    jboolean autoExpire,
    jobject listener) {
  return Create(env, base::android::JavaParamRef<jclass>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, tab), infobarTypeIdentifier,
      base::android::JavaParamRef<jobject>(env, drawable),
      base::android::JavaParamRef<jstring>(env, message),
      base::android::JavaParamRef<jstring>(env, primaryText),
      base::android::JavaParamRef<jstring>(env, secondaryText), autoExpire,
      base::android::JavaParamRef<jobject>(env, listener));
}

static base::subtle::AtomicWord g_SimpleConfirmInfoBarBuilder_onInfoBarDismissed
    = 0;
static void Java_SimpleConfirmInfoBarBuilder_onInfoBarDismissed(JNIEnv* env,
    const base::android::JavaRefOrBare<jobject>& listener) {
  CHECK_CLAZZ(env, SimpleConfirmInfoBarBuilder_clazz(env),
      SimpleConfirmInfoBarBuilder_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, SimpleConfirmInfoBarBuilder_clazz(env),
      "onInfoBarDismissed",

"("
"Lorg/chromium/chrome/browser/infobar/SimpleConfirmInfoBarBuilder$Listener;"
")"
"V",
      &g_SimpleConfirmInfoBarBuilder_onInfoBarDismissed);

     env->CallStaticVoidMethod(SimpleConfirmInfoBarBuilder_clazz(env),
          method_id, listener.obj());
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord
    g_SimpleConfirmInfoBarBuilder_onInfoBarButtonClicked = 0;
static jboolean Java_SimpleConfirmInfoBarBuilder_onInfoBarButtonClicked(JNIEnv*
    env, const base::android::JavaRefOrBare<jobject>& listener,
    jboolean isPrimary) {
  CHECK_CLAZZ(env, SimpleConfirmInfoBarBuilder_clazz(env),
      SimpleConfirmInfoBarBuilder_clazz(env), false);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, SimpleConfirmInfoBarBuilder_clazz(env),
      "onInfoBarButtonClicked",

"("
"Lorg/chromium/chrome/browser/infobar/SimpleConfirmInfoBarBuilder$Listener;"
"Z"
")"
"Z",
      &g_SimpleConfirmInfoBarBuilder_onInfoBarButtonClicked);

  jboolean ret =
      env->CallStaticBooleanMethod(SimpleConfirmInfoBarBuilder_clazz(env),
          method_id, listener.obj(), isPrimary);
  jni_generator::CheckException(env);
  return ret;
}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsSimpleConfirmInfoBarBuilder[] = {
    { "nativeCreate",
"("
"Lorg/chromium/chrome/browser/tab/Tab;"
"I"
"Landroid/graphics/Bitmap;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Z"
"Ljava/lang/Object;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_infobar_SimpleConfirmInfoBarBuilder_nativeCreate)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsSimpleConfirmInfoBarBuilderSize =
      arraysize(kMethodsSimpleConfirmInfoBarBuilder);

  if (env->RegisterNatives(SimpleConfirmInfoBarBuilder_clazz(env),
                           kMethodsSimpleConfirmInfoBarBuilder,
                           kMethodsSimpleConfirmInfoBarBuilderSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, SimpleConfirmInfoBarBuilder_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // org_chromium_chrome_browser_infobar_SimpleConfirmInfoBarBuilder_JNI
