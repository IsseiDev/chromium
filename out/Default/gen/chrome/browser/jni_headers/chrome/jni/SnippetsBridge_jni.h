// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/ntp/snippets/SnippetsBridge

#ifndef org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_JNI
#define org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kSnippetsBridgeClassPath[] =
    "org/chromium/chrome/browser/ntp/snippets/SnippetsBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_SnippetsBridge_clazz __attribute__((unused)) = 0;
#define SnippetsBridge_clazz(env) base::android::LazyGetClass(env, kSnippetsBridgeClassPath, &g_SnippetsBridge_clazz)

}  // namespace

// Step 2: method stubs.

static jlong Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    jcaller,
    const base::android::JavaParamRef<jobject>& profile);

extern "C" __attribute__((visibility("default")))
jlong
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeInit(JNIEnv*
    env, jobject jcaller,
    jobject profile) {
  return Init(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, profile));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeDestroy(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static void FetchSnippets(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jboolean forceRequest);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeFetchSnippets(JNIEnv*
    env, jclass jcaller,
    jboolean forceRequest) {
  return FetchSnippets(env, base::android::JavaParamRef<jclass>(env, jcaller),
      forceRequest);
}

static void RescheduleFetching(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeRescheduleFetching(JNIEnv*
    env, jclass jcaller) {
  return RescheduleFetching(env, base::android::JavaParamRef<jclass>(env,
      jcaller));
}

extern "C" __attribute__((visibility("default")))
jintArray
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeGetCategories(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCategories", NULL);
  return native->GetCategories(env, base::android::JavaParamRef<jobject>(env,
      jcaller)).Release();
}

extern "C" __attribute__((visibility("default")))
jint
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeGetCategoryStatus(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge,
    jint category) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCategoryStatus", 0);
  return native->GetCategoryStatus(env,
      base::android::JavaParamRef<jobject>(env, jcaller), category);
}

extern "C" __attribute__((visibility("default")))
jobject
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeGetCategoryInfo(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge,
    jint category) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCategoryInfo", NULL);
  return native->GetCategoryInfo(env, base::android::JavaParamRef<jobject>(env,
      jcaller), category).Release();
}

extern "C" __attribute__((visibility("default")))
jobject
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeGetSuggestionsForCategory(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge,
    jint category) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetSuggestionsForCategory", NULL);
  return native->GetSuggestionsForCategory(env,
      base::android::JavaParamRef<jobject>(env, jcaller), category).Release();
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeFetchSuggestionImage(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge,
    jstring suggestionId,
    jobject callback) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "FetchSuggestionImage");
  return native->FetchSuggestionImage(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, suggestionId),
      base::android::JavaParamRef<jobject>(env, callback));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeDismissSuggestion(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge,
    jstring suggestionId) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "DismissSuggestion");
  return native->DismissSuggestion(env,
      base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, suggestionId));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeGetURLVisited(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge,
    jobject callback,
    jstring url) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetURLVisited");
  return native->GetURLVisited(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, callback),
      base::android::JavaParamRef<jstring>(env, url));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeOnPageShown(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge,
    jintArray categories,
    jintArray suggestionsPerCategory) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnPageShown");
  return native->OnPageShown(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jintArray>(env, categories),
      base::android::JavaParamRef<jintArray>(env, suggestionsPerCategory));
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeOnSuggestionShown(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge,
    jint globalPosition,
    jint category,
    jint categoryPosition,
    jlong publishTimestampMs,
    jfloat score) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSuggestionShown");
  return native->OnSuggestionShown(env,
      base::android::JavaParamRef<jobject>(env, jcaller), globalPosition,
      category, categoryPosition, publishTimestampMs, score);
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeOnSuggestionOpened(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge,
    jint globalPosition,
    jint category,
    jint categoryPosition,
    jlong publishTimestampMs,
    jfloat score,
    jint windowOpenDisposition) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSuggestionOpened");
  return native->OnSuggestionOpened(env,
      base::android::JavaParamRef<jobject>(env, jcaller), globalPosition,
      category, categoryPosition, publishTimestampMs, score,
      windowOpenDisposition);
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeOnSuggestionMenuOpened(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge,
    jint globalPosition,
    jint category,
    jint categoryPosition,
    jlong publishTimestampMs,
    jfloat score) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSuggestionMenuOpened");
  return native->OnSuggestionMenuOpened(env,
      base::android::JavaParamRef<jobject>(env, jcaller), globalPosition,
      category, categoryPosition, publishTimestampMs, score);
}

static void OnSuggestionTargetVisited(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jint category,
    jlong visitTimeMs);

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeOnSuggestionTargetVisited(JNIEnv*
    env, jclass jcaller,
    jint category,
    jlong visitTimeMs) {
  return OnSuggestionTargetVisited(env, base::android::JavaParamRef<jclass>(env,
      jcaller), category, visitTimeMs);
}

extern "C" __attribute__((visibility("default")))
void
    Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeSetObserver(JNIEnv*
    env,
    jobject jcaller,
    jlong nativeNTPSnippetsBridge,
    jobject bridge) {
  NTPSnippetsBridge* native =
      reinterpret_cast<NTPSnippetsBridge*>(nativeNTPSnippetsBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetObserver");
  return native->SetObserver(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jobject>(env, bridge));
}

static base::subtle::AtomicWord g_SnippetsBridge_createSuggestionList = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_SnippetsBridge_createSuggestionList(JNIEnv* env) {
  CHECK_CLAZZ(env, SnippetsBridge_clazz(env),
      SnippetsBridge_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, SnippetsBridge_clazz(env),
      "createSuggestionList",

"("
")"
"Ljava/util/List;",
      &g_SnippetsBridge_createSuggestionList);

  jobject ret =
      env->CallStaticObjectMethod(SnippetsBridge_clazz(env),
          method_id);
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_SnippetsBridge_addSuggestion = 0;
static void Java_SnippetsBridge_addSuggestion(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& suggestions,
    JniIntWrapper category,
    const base::android::JavaRefOrBare<jstring>& id,
    const base::android::JavaRefOrBare<jstring>& title,
    const base::android::JavaRefOrBare<jstring>& publisher,
    const base::android::JavaRefOrBare<jstring>& previewText,
    const base::android::JavaRefOrBare<jstring>& url,
    const base::android::JavaRefOrBare<jstring>& ampUrl,
    jlong timestamp,
    jfloat score,
    JniIntWrapper cardLayout) {
  CHECK_CLAZZ(env, SnippetsBridge_clazz(env),
      SnippetsBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, SnippetsBridge_clazz(env),
      "addSuggestion",

"("
"Ljava/util/List;"
"I"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"J"
"F"
"I"
")"
"V",
      &g_SnippetsBridge_addSuggestion);

     env->CallStaticVoidMethod(SnippetsBridge_clazz(env),
          method_id, suggestions.obj(), as_jint(category), id.obj(),
              title.obj(), publisher.obj(), previewText.obj(), url.obj(),
              ampUrl.obj(), timestamp, score, as_jint(cardLayout));
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_SnippetsBridge_createSuggestionsCategoryInfo =
    0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_SnippetsBridge_createSuggestionsCategoryInfo(JNIEnv* env, const
    base::android::JavaRefOrBare<jstring>& title,
    JniIntWrapper cardLayout,
    jboolean hasMoreButton,
    jboolean hideIfEmpty) {
  CHECK_CLAZZ(env, SnippetsBridge_clazz(env),
      SnippetsBridge_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, SnippetsBridge_clazz(env),
      "createSuggestionsCategoryInfo",

"("
"Ljava/lang/String;"
"I"
"Z"
"Z"
")"
"Lorg/chromium/chrome/browser/ntp/cards/SuggestionsCategoryInfo;",
      &g_SnippetsBridge_createSuggestionsCategoryInfo);

  jobject ret =
      env->CallStaticObjectMethod(SnippetsBridge_clazz(env),
          method_id, title.obj(), as_jint(cardLayout), hasMoreButton,
              hideIfEmpty);
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_SnippetsBridge_onNewSuggestions = 0;
static void Java_SnippetsBridge_onNewSuggestions(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj, JniIntWrapper category) {
  CHECK_CLAZZ(env, obj.obj(),
      SnippetsBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, SnippetsBridge_clazz(env),
      "onNewSuggestions",

"("
"I"
")"
"V",
      &g_SnippetsBridge_onNewSuggestions);

     env->CallVoidMethod(obj.obj(),
          method_id, as_jint(category));
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_SnippetsBridge_onCategoryStatusChanged = 0;
static void Java_SnippetsBridge_onCategoryStatusChanged(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj, JniIntWrapper category,
    JniIntWrapper newStatus) {
  CHECK_CLAZZ(env, obj.obj(),
      SnippetsBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, SnippetsBridge_clazz(env),
      "onCategoryStatusChanged",

"("
"I"
"I"
")"
"V",
      &g_SnippetsBridge_onCategoryStatusChanged);

     env->CallVoidMethod(obj.obj(),
          method_id, as_jint(category), as_jint(newStatus));
  jni_generator::CheckException(env);

}

static base::subtle::AtomicWord g_SnippetsBridge_onSuggestionInvalidated = 0;
static void Java_SnippetsBridge_onSuggestionInvalidated(JNIEnv* env, const
    base::android::JavaRefOrBare<jobject>& obj, JniIntWrapper category,
    const base::android::JavaRefOrBare<jstring>& suggestionId) {
  CHECK_CLAZZ(env, obj.obj(),
      SnippetsBridge_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, SnippetsBridge_clazz(env),
      "onSuggestionInvalidated",

"("
"I"
"Ljava/lang/String;"
")"
"V",
      &g_SnippetsBridge_onSuggestionInvalidated);

     env->CallVoidMethod(obj.obj(),
          method_id, as_jint(category), suggestionId.obj());
  jni_generator::CheckException(env);

}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsSnippetsBridge[] = {
    { "nativeInit",
"("
"Lorg/chromium/chrome/browser/profiles/Profile;"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeInit)
    },
    { "nativeDestroy",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeDestroy)
    },
    { "nativeFetchSnippets",
"("
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeFetchSnippets)
    },
    { "nativeRescheduleFetching",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeRescheduleFetching)
    },
    { "nativeGetCategories",
"("
"J"
")"
"[I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeGetCategories)
    },
    { "nativeGetCategoryStatus",
"("
"J"
"I"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeGetCategoryStatus)
    },
    { "nativeGetCategoryInfo",
"("
"J"
"I"
")"
"Lorg/chromium/chrome/browser/ntp/cards/SuggestionsCategoryInfo;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeGetCategoryInfo)
    },
    { "nativeGetSuggestionsForCategory",
"("
"J"
"I"
")"
"Ljava/util/List;",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeGetSuggestionsForCategory)
    },
    { "nativeFetchSuggestionImage",
"("
"J"
"Ljava/lang/String;"
"Lorg/chromium/base/Callback;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeFetchSuggestionImage)
    },
    { "nativeDismissSuggestion",
"("
"J"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeDismissSuggestion)
    },
    { "nativeGetURLVisited",
"("
"J"
"Lorg/chromium/base/Callback;"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeGetURLVisited)
    },
    { "nativeOnPageShown",
"("
"J"
"[I"
"[I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeOnPageShown)
    },
    { "nativeOnSuggestionShown",
"("
"J"
"I"
"I"
"I"
"J"
"F"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeOnSuggestionShown)
    },
    { "nativeOnSuggestionOpened",
"("
"J"
"I"
"I"
"I"
"J"
"F"
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeOnSuggestionOpened)
    },
    { "nativeOnSuggestionMenuOpened",
"("
"J"
"I"
"I"
"I"
"J"
"F"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeOnSuggestionMenuOpened)
    },
    { "nativeOnSuggestionTargetVisited",
"("
"I"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeOnSuggestionTargetVisited)
    },
    { "nativeSetObserver",
"("
"J"
"Lorg/chromium/chrome/browser/ntp/snippets/SnippetsBridge;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_nativeSetObserver)
    },
};

static bool RegisterNativesImpl(JNIEnv* env) {
  if (base::android::IsManualJniRegistrationDisabled()) return true;

  const int kMethodsSnippetsBridgeSize = arraysize(kMethodsSnippetsBridge);

  if (env->RegisterNatives(SnippetsBridge_clazz(env),
                           kMethodsSnippetsBridge,
                           kMethodsSnippetsBridgeSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, SnippetsBridge_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // org_chromium_chrome_browser_ntp_snippets_SnippetsBridge_JNI
