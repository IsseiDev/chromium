// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: memory_allocation.proto

#ifndef PROTOBUF_memory_5fallocation_2eproto__INCLUDED
#define PROTOBUF_memory_5fallocation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
#include "cc/proto/cc_proto_export.h"

namespace cc {
namespace proto {

// Internal implementation detail -- do not call these.
void CC_PROTO_EXPORT protobuf_AddDesc_memory_5fallocation_2eproto();
void protobuf_AssignDesc_memory_5fallocation_2eproto();
void protobuf_ShutdownFile_memory_5fallocation_2eproto();

class MemoryAllocation;

enum MemoryAllocation_PriorityCutoff {
MemoryAllocation_PriorityCutoff_UNKNOWN = 0,
MemoryAllocation_PriorityCutoff_ALLOW_NOTHING = 1,
MemoryAllocation_PriorityCutoff_ALLOW_REQUIRED_ONLY = 2,
MemoryAllocation_PriorityCutoff_ALLOW_NICE_TO_HAVE = 3,
MemoryAllocation_PriorityCutoff_ALLOW_EVERYTHING = 4
};
CC_PROTO_EXPORT bool MemoryAllocation_PriorityCutoff_IsValid(int value);
const MemoryAllocation_PriorityCutoff MemoryAllocation_PriorityCutoff_PriorityCutoff_MIN = MemoryAllocation_PriorityCutoff_UNKNOWN;
const MemoryAllocation_PriorityCutoff MemoryAllocation_PriorityCutoff_PriorityCutoff_MAX = MemoryAllocation_PriorityCutoff_ALLOW_EVERYTHING;
const int MemoryAllocation_PriorityCutoff_PriorityCutoff_ARRAYSIZE = MemoryAllocation_PriorityCutoff_PriorityCutoff_MAX + 1;

// ===================================================================

class CC_PROTO_EXPORT MemoryAllocation : public ::google::protobuf::MessageLite {
public:
MemoryAllocation();
virtual ~MemoryAllocation();

MemoryAllocation(const MemoryAllocation& from);

inline MemoryAllocation& operator=(const MemoryAllocation& from) {
CopyFrom(from);
return *this;
}

inline const ::std::string& unknown_fields() const {
return _unknown_fields_.GetNoArena(
&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

inline ::std::string* mutable_unknown_fields() {
return _unknown_fields_.MutableNoArena(
&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

static const MemoryAllocation& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Returns the internal default instance pointer. This function can
// return NULL thus should not be used by the user. This is intended
// for Protobuf internal code. Please use default_instance() declared
// above instead.
static inline const MemoryAllocation* internal_default_instance() {
return default_instance_;
}
#endif

GOOGLE_ATTRIBUTE_NOINLINE void Swap(MemoryAllocation* other);

// implements Message ----------------------------------------------

inline MemoryAllocation* New() const { return New(NULL); }

MemoryAllocation* New(::google::protobuf::Arena* arena) const;
void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
void CopyFrom(const MemoryAllocation& from);
void MergeFrom(const MemoryAllocation& from);
void Clear();
bool IsInitialized() const;

int ByteSize() const;
bool MergePartialFromCodedStream(
::google::protobuf::io::CodedInputStream* input);
void SerializeWithCachedSizes(
::google::protobuf::io::CodedOutputStream* output) const;
void DiscardUnknownFields();
int GetCachedSize() const { return _cached_size_; }
private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(MemoryAllocation* other);
private:
inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
return _arena_ptr_;
}
inline ::google::protobuf::Arena* MaybeArenaPtr() const {
return _arena_ptr_;
}
public:

::std::string GetTypeName() const;

// nested types ----------------------------------------------------

typedef MemoryAllocation_PriorityCutoff PriorityCutoff;
static const PriorityCutoff UNKNOWN =
MemoryAllocation_PriorityCutoff_UNKNOWN;
static const PriorityCutoff ALLOW_NOTHING =
MemoryAllocation_PriorityCutoff_ALLOW_NOTHING;
static const PriorityCutoff ALLOW_REQUIRED_ONLY =
MemoryAllocation_PriorityCutoff_ALLOW_REQUIRED_ONLY;
static const PriorityCutoff ALLOW_NICE_TO_HAVE =
MemoryAllocation_PriorityCutoff_ALLOW_NICE_TO_HAVE;
static const PriorityCutoff ALLOW_EVERYTHING =
MemoryAllocation_PriorityCutoff_ALLOW_EVERYTHING;
static inline bool PriorityCutoff_IsValid(int value) {
return MemoryAllocation_PriorityCutoff_IsValid(value);
}
static const PriorityCutoff PriorityCutoff_MIN =
MemoryAllocation_PriorityCutoff_PriorityCutoff_MIN;
static const PriorityCutoff PriorityCutoff_MAX =
MemoryAllocation_PriorityCutoff_PriorityCutoff_MAX;
static const int PriorityCutoff_ARRAYSIZE =
MemoryAllocation_PriorityCutoff_PriorityCutoff_ARRAYSIZE;

// accessors -------------------------------------------------------

// @@protoc_insertion_point(class_scope:cc.proto.MemoryAllocation)
private:

::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
::google::protobuf::Arena* _arena_ptr_;

::google::protobuf::uint32 _has_bits_[1];
mutable int _cached_size_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
friend void CC_PROTO_EXPORT protobuf_AddDesc_memory_5fallocation_2eproto_impl();
#else
friend void CC_PROTO_EXPORT protobuf_AddDesc_memory_5fallocation_2eproto();
#endif
friend void protobuf_AssignDesc_memory_5fallocation_2eproto();
friend void protobuf_ShutdownFile_memory_5fallocation_2eproto();

void InitAsDefaultInstance();
static MemoryAllocation* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MemoryAllocation

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace cc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::cc::proto::MemoryAllocation_PriorityCutoff> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_memory_5fallocation_2eproto__INCLUDED
